{"version":3,"sources":["webpack:///./node_modules/core-js/modules/es.string.trim.js","webpack:///./src/components/SumaPlayer.vue?5e20","webpack:///./src/views/recode-manage/components/player.vue?bd48","webpack:///./node_modules/core-js/internals/string-trim-forced.js","webpack:///./src/views/recode-manage/components/player.vue?a949","webpack:///src/views/recode-manage/components/player.vue","webpack:///./src/views/recode-manage/components/player.vue?60c6","webpack:///./src/views/recode-manage/components/player.vue?d34e","webpack:///./src/components/SumaPlayer.vue?b19e","webpack:///src/components/SumaPlayer.vue","webpack:///./src/components/SumaPlayer.vue?6b57","webpack:///./src/components/SumaPlayer.vue?9088"],"names":["$","$trim","trim","forcedStringTrimMethod","target","proto","forced","this","fails","whitespaces","non","module","exports","METHOD_NAME","name","render","_vm","_h","$createElement","_c","_self","attrs","model","value","callback","$$v","dottingModal","expression","ref","staticStyle","dottingName","_v","_s","length","on","dottingConfirm","dottingCancel","slot","staticRenderFns","data","created","isGray","$bus","$on","destroyed","$off","mounted","console","log","methods","getServerTime","api","recodeConfirm","recodeCancel","recodePlanConfirmModal","setQmlPlayerProperty","arr","$Message","info","channelId","startDate","endDate","type","item","business","isDotting","timestampToTime","year","setQmlPlayerServerTime","createQmlPlayer","vm","playerType","sessionStorage","setItem","mode","x","y","width","witdh","height","rows","columns","$sumaQtPlayer","createPlayer","JSON","stringify","param","prepareQmlPlayer","recodeObj","player","$set","flag","prepareQmlPlayer1","obj","playerIndex","groupIndex","playerInfo","push","prepareQmlPlayer2","destroyQmlPlayer","setVersionInfo","getVersion","res","result","versionCode","versionName","versionDescription","component","staticClass","playerId","inline","playLiveWithHlsUrl","liveUrl","autoplay","isAutoPlay","src","play","playVodWithHlsUrl","vodUrl","setPlayerPoster","initOptions","poster","imageUrl","setupPlayer","self","$video","$emit","err","code","resetPlayer","dispose","videoNode","document","getElementById","innerHTML","pause","props","posterUrl","String","default","watch","newV","oldV","computed","addEventListener","beforeDestroy"],"mappings":"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","file":"js/chunk-341781e4.50d7a4ff.js","sourcesContent":["'use strict';\nvar $ = require('../internals/export');\nvar $trim = require('../internals/string-trim').trim;\nvar forcedStringTrimMethod = require('../internals/string-trim-forced');\n\n// `String.prototype.trim` method\n// https://tc39.github.io/ecma262/#sec-string.prototype.trim\n$({ target: 'String', proto: true, forced: forcedStringTrimMethod('trim') }, {\n  trim: function trim() {\n    return $trim(this);\n  }\n});\n","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SumaPlayer.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SumaPlayer.vue?vue&type=style&index=0&lang=css&\"","import mod from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./player.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./player.vue?vue&type=style&index=0&lang=css&\"","var fails = require('../internals/fails');\nvar whitespaces = require('../internals/whitespaces');\n\nvar non = '\\u200B\\u0085\\u180E';\n\n// check that a method works with the correct list\n// of whitespaces and has a correct name\nmodule.exports = function (METHOD_NAME) {\n  return fails(function () {\n    return !!whitespaces[METHOD_NAME]() || non[METHOD_NAME]() != non || whitespaces[METHOD_NAME].name !== METHOD_NAME;\n  });\n};\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"monRoot\"}},[_c('Modal',{attrs:{\"width\":\"600\",\"closable\":false,\"mask-closable\":false},model:{value:(_vm.dottingModal),callback:function ($$v) {_vm.dottingModal=$$v},expression:\"dottingModal\"}},[_c('Form',{ref:\"formInline\",attrs:{\"label-width\":120}},[_c('FormItem',{attrs:{\"label\":\"请输入名称：\"}},[_c('Input',{staticStyle:{\"width\":\"200px\"},attrs:{\"size\":\"small\",\"maxlength\":20},model:{value:(_vm.dottingName),callback:function ($$v) {_vm.dottingName=$$v},expression:\"dottingName\"}}),_c('span',{staticStyle:{\"color\":\"#fff\"}},[_vm._v(_vm._s(_vm.dottingName.length)+\"/20\")]),_c('Button',{staticStyle:{\"margin-left\":\"30px\"},attrs:{\"type\":\"primary\",\"size\":\"small\"},on:{\"click\":_vm.dottingConfirm}},[_vm._v(\"确定\")]),_c('Button',{staticStyle:{\"background\":\"rgba(13,67,111,1)\",\"color\":\"rgba(199,219,244,1)\",\"margin-left\":\"10px\"},attrs:{\"size\":\"small\"},on:{\"click\":_vm.dottingCancel}},[_vm._v(\"取消\")])],1)],1),_c('p',{attrs:{\"slot\":\"footer\"},slot:\"footer\"})],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div id=\"monRoot\">\r\n     <!--录制计划确认框-->\r\n     <!-- <Modal\r\n        v-model=\"recodePlanConfirmModal\"\r\n        width=\"638\"\r\n        id=\"planModal\"\r\n        :closable=\"false\"\r\n        :mask-closable=\"false\"\r\n        :transfer=\"false\"\r\n       >\r\n       <Form ref=\"formInline\" style=\"margin-top:52px;padding:0 68px\">\r\n        <FormItem>\r\n           <span style=\"fontSize:16px;font-weight:400;font-family:Microsoft YaHei;color:rgba(254,254,254,1)\">是否继续遵循录制计划执行?</span>\r\n           <label style=\"margin-left:45px\">\r\n             <RadioGroup v-model=\"isStart\" style=\"color:#fff\">\r\n                <Radio :label=\"1\">是</Radio>\r\n                <Radio :label=\"0\">否</Radio>\r\n            </RadioGroup>\r\n          </label> \r\n         </FormItem>\r\n         <FormItem style=\"marginTop:42px\">\r\n           <div style=\"color:rgba(175,188,204,1);font-weight:400;font-size:14px;font-family:Microsoft YaHei;\">\r\n             当您选择\"是\"，打开/关闭通道后，系统后台会打开/关闭当前录制，后续从录制计划中设置的下一时间段开始按各通道录制计划执行，且会根据录制计划自动打开/关闭通道。\r\n           </div>\r\n         </FormItem>\r\n          <FormItem>\r\n           <div style=\"color:rgba(175,188,204,1);font-weight:400;font-size:14px;font-family:Microsoft YaHei;\">\r\n             当您选择\"否\"，录制计划失效，打开通道，系统后台将一直录制；关闭通道，系统后台将停止录制，可通过手动开启录制计划中的开关，重新激活录制计划。\r\n           </div>\r\n         </FormItem>\r\n      </Form>\r\n       <p slot=\"footer\" style=\"display:flex;justify-content:center;margin-top:38px;margin-bottom:20px\">\r\n           <Button @click=\"recodeCancel\" style=\"background:rgba(13,67,111,1);color:rgba(199,219,244,1);\">取消</Button>\r\n           <Button type=\"primary\" @click=\"recodeConfirm\" :disabled=\"isGray\" style=\"margin-left:49px\">确定</Button>\r\n       </p>\r\n    </Modal> -->\r\n\r\n     <!--打点-->\r\n     <Modal\r\n        v-model=\"dottingModal\"\r\n        width=\"600\"\r\n        :closable=\"false\"\r\n        :mask-closable=\"false\"\r\n       >\r\n       <Form ref=\"formInline\" :label-width=\"120\">\r\n        <FormItem label=\"请输入名称：\">\r\n           <Input style=\"width:200px\" size=\"small\" :maxlength=\"20 \" v-model=\"dottingName\"></Input>\r\n           <span style=\"color:#fff\">{{dottingName.length}}/20</span>\r\n          <Button type=\"primary\" size=\"small\"  style=\"margin-left:30px\" @click=\"dottingConfirm\">确定</Button>\r\n          <Button size=\"small\" style=\"background:rgba(13,67,111,1);color:rgba(199,219,244,1);margin-left:10px\" @click=\"dottingCancel\">取消</Button>\r\n         </FormItem>\r\n      </Form>\r\n       <p slot=\"footer\"></p>\r\n    </Modal>\r\n  </div>\r\n</template>\r\n<script>\r\n// import QWebChannel from '@/qwebchannel.js'\r\nimport api from '@/api/api'\r\nexport default {\r\n  data(){\r\n    return {\r\n     dottingName:'',\r\n     recodePlanConfirmModal:false,\r\n     dottingModal:false,\r\n     sumaQtPlayer:'',\r\n     isStart:1,//是否遵循录制计划\r\n     recodeSwitchFlag:false,//是否打开录制开关\r\n     receiveObj:{},//接收到的对象\r\n     recordPlayUrlChange:[],//播放地址初始化记录\r\n     playerType:'',\r\n     playerbaseIndex:0,//普通播放器groupindex\r\n     playerRecIndex:0,//打点播放器groupIndex\r\n     isGray:false\r\n    }\r\n  },\r\n  created(){\r\n    this.isGray = ((JSON.parse(localStorage.getItem('loginRes'))).user.operationPermissions) == 1 ? false:true;\r\n    this.$bus.$on('showPlay',param=>{\r\n      this.setQmlPlayerProperty(param)\r\n    })\r\n    this.$bus.$on('recodeSwitchFlag',val=>{\r\n      this.recodeSwitchFlag = val\r\n    })\r\n    this.$bus.$on('receiveObj',val=>{\r\n      this.receiveObj = val\r\n    })\r\n    this.$bus.$on('dottingModal',val=>{\r\n      this.dottingModal = val\r\n      this.dottingName = ''\r\n    })\r\n  },\r\n  destroyed(){\r\n    this.$bus.$off('showPlayer')\r\n    this.$bus.$off('recodeSwitchFlag')\r\n    this.$bus.$off('receiveObj')\r\n    this.$bus.$off('dottingModal')\r\n\r\n  },\r\n  mounted(){\r\n    // setTimeout(() => {\r\n    //   // console.log(000,this.$sumaQtPlayer)\r\n    //   console.log(555,this.$sumaQtPlayer);\r\n    // })\r\n    console.log(999,this.$sumaQtPlayer)\r\n     setTimeout(() => {\r\n       let vm = this\r\n      let arr  = []\r\n      if(vm.$sumaQtPlayer){\r\n        //  vm.getServerTime()/**v6.0.202007版本去掉 */\r\n        //  vm.getVersion()\r\n      }\r\n     }, 0);\r\n  },\r\n  methods:{\r\n    //获取服务器时间\r\n    getServerTime(){\r\n      api.getServerTime({}).then(res=>{\r\n      let secondTimeStamp = res.result.secondTimeStamp\r\n       this.setQmlPlayerServerTime(secondTimeStamp)\r\n      })\r\n    },\r\n    recodeConfirm(){\r\n      if(this.recodeSwitchFlag){\r\n        //========================开启录制开关\r\n         let param = {\r\n              isStartRecord:0,//是否开启录制0开始 1关闭\r\n              autoRecordPlan:this.isStart,//是否开启自动录制计划 0关闭 1开启\r\n              channelIdList:[this.receiveObj.channelId]\r\n            }\r\n            let arr = JSON.parse(sessionStorage.getItem('monitorState'))\r\n            api.startOrStopRecord(param).then(res=>{\r\n              this.$Message.success('录制已启动')\r\n              this.$emit('changeRecode')\r\n              this.recodePlanConfirmModal = false\r\n               /**显示播放器 */\r\n              let param = [{\r\n                groupIndex:-2,\r\n                playerIndex:-2,\r\n                channelId:'',\r\n                business:{},\r\n                player:{\r\n                  isVisible:true\r\n                }\r\n              }]\r\n              this.setQmlPlayerProperty(param)\r\n              //录制操作成功后重新设置状态\r\n              for(let item of arr){\r\n                if(item.playerIndex === this.receiveObj.playerIndex){\r\n                  item.business.isRecording = true\r\n                }else{\r\n                  //判断其他窗口是否有相同通道\r\n                  if(item.channelId === this.receiveObj.channelId){\r\n                    item.business.isRecording = true\r\n                  }\r\n                }\r\n              }\r\n              this.setQmlPlayerProperty(arr)\r\n              sessionStorage.setItem('monitorState',JSON.stringify(arr))\r\n            },err=>{\r\n              //操作失败重置\r\n               this.setQmlPlayerProperty(arr)\r\n            })\r\n      }else{\r\n        let param = {\r\n              isStartRecord:1,//是否开启录制0开始 1关闭\r\n              autoRecordPlan:this.isStart,//是否开启自动录制计划 0关闭 1开启\r\n              channelIdList:[this.receiveObj.channelId]\r\n            }\r\n            let arr = JSON.parse(sessionStorage.getItem('monitorState'))\r\n            api.startOrStopRecord(param).then(res=>{\r\n              this.$Message.success('录制已关闭')\r\n              this.$emit('changeRecode')\r\n              this.recodePlanConfirmModal = false\r\n               /**显示播放器 */\r\n              let param = [{\r\n                  groupIndex:-2,\r\n                  playerIndex:-2,\r\n                  channelId:'',\r\n                  business:{},\r\n                  player:{\r\n                    isVisible:true\r\n                  }\r\n                }]\r\n                this.setQmlPlayerProperty(param)\r\n              //录制操作成功后重新设置状态\r\n              for(let item of arr){\r\n                if(item.playerIndex === this.receiveObj.playerIndex){\r\n                  item.business.isRecording = false\r\n                }else{\r\n                  if(item.channelId === this.receiveObj.channelId){\r\n                    item.business.isRecording = false\r\n                  }\r\n                }\r\n              }\r\n              this.setQmlPlayerProperty(arr)\r\n              sessionStorage.setItem('monitorState',JSON.stringify(arr))\r\n            },err=>{\r\n               this.setQmlPlayerProperty(arr)\r\n               this.recodePlanConfirmModal = false\r\n            })\r\n      }\r\n    },\r\n    //===录制关闭\r\n    recodeCancel(){\r\n      this.recodePlanConfirmModal = false\r\n      let arr = JSON.parse(sessionStorage.getItem('monitorState'))\r\n      this.setQmlPlayerProperty(arr)\r\n      /**显示播放器 */\r\n      let param = [{\r\n          groupIndex:-2,\r\n          playerIndex:-2,\r\n          channelId:'',\r\n          business:{},\r\n          player:{\r\n            isVisible:true\r\n          }\r\n        }]\r\n        this.setQmlPlayerProperty(param)\r\n    },\r\n    /** 打点确认 */\r\n    dottingConfirm(){\r\n      if(!this.dottingName){\r\n        this.$Message.info('请输入打点名称')\r\n        return false\r\n      }else if(!(this.dottingName.trim())){\r\n        this.$Message.info('名称不能仅包含空格')\r\n        return false\r\n      }\r\n      let  arr = JSON.parse(sessionStorage.getItem('monitorState'))\r\n      let startTime = ''\r\n      for(let item of arr){\r\n        if(item.playerIndex === this.receiveObj.playerIndex){\r\n          startTime = item.timestamp\r\n          break\r\n        }\r\n      }\r\n      //======================创建手动打点列表掉接口部分\r\n      let param = {\r\n        channelId:this.receiveObj.channelId,\r\n        name:this.dottingName,\r\n        startDate:this.timestampToTime(startTime),\r\n        endDate:this.timestampToTime(this.receiveObj.timestamp),\r\n        type:'2'\r\n      }\r\n      api.createChannelProgram(param).then(res=>{\r\n        this.$Message.success('导播节目添加成功')\r\n        this.$emit('dottedSuccess')\r\n        //创建成功后\r\n          for(let item of arr){\r\n            if(item.playerIndex === this.receiveObj.playerIndex){\r\n              item.business.isDotting = false\r\n            }else{\r\n              if(item.channelId === this.receiveObj.channelId){\r\n                item.business.isDotting = false\r\n              }\r\n            }\r\n          }\r\n          this.setQmlPlayerProperty(arr)\r\n          sessionStorage.setItem('monitorState',JSON.stringify(arr))\r\n          this.dottingModal = false\r\n      },err=>{\r\n        //如果打点失败重置\r\n        this.setQmlPlayerProperty(arr)\r\n      })\r\n    },\r\n    //打点取消\r\n    dottingCancel(){\r\n      let  arr = JSON.parse(sessionStorage.getItem('monitorState'))\r\n      this.dottingModal = false\r\n      this.setQmlPlayerProperty(arr)\r\n    },\r\n    //转化unit时间戳时间格式\r\n    timestampToTime(timestamp){\r\n      let  date = new Date(timestamp * 1000)\r\n      let year = date.getFullYear()\r\n      let month = (date.getMonth()+1 < 10 ? '0'+(date.getMonth()+1) : date.getMonth()+1)\r\n      let day = date.getDate()\r\n      let hour = date.getHours()\r\n      let min = date.getMinutes()\r\n      let s = date.getSeconds()\r\n      return year+\"-\"+month+'-'+day + ' '+hour+\":\"+min+\":\"+s\r\n    },\r\n    //设置服务器时间\r\n    setQmlPlayerServerTime(serverUnixTimestamp) {\r\n        var jsonDemo = {\r\n          serverUnixTimestamp,\r\n        };\r\n        this.$sumaQtPlayer.setServerTime(JSON.stringify(jsonDemo), function (\r\n          callback\r\n        ) {\r\n         \r\n        });\r\n    },\r\n    //创建播放器\r\n    createQmlPlayer(x,y,witdh,height,rows,columns,mode){\r\n      let vm = this\r\n       //记录现在创造播放器类型\r\n      vm.playerType = 'rec'\r\n      sessionStorage.setItem('playerType','rec')\r\n      let param = {\r\n        mode:mode,\r\n        x: x,\r\n        y: y,\r\n        width: witdh,\r\n        height: height,\r\n        rows: rows,\r\n        columns: columns,\r\n      };\r\n      this.$sumaQtPlayer.createPlayer(JSON.stringify(param), function (\r\n        callback\r\n      ) {\r\n        let res = JSON.parse(callback)\r\n          if(res.status === 'OK'){\r\n           \r\n            //创建成功时，每次回复播放地址，恢复打点和录制中与否的状态\r\n            //1.创建成功后恢复播放\r\n            vm.prepareQmlPlayer1()\r\n            //2恢复打点和录制状态\r\n              let arr = JSON.parse(sessionStorage.getItem('monitorState'))\r\n              if(arr){\r\n                vm.setQmlPlayerProperty(arr)\r\n              }\r\n          }\r\n      })\r\n    },\r\n    //初始化播放器（拖拽）\r\n    prepareQmlPlayer(x,y,channelName,channelId,channelUrl,recodeFlag,timeshiftTotalInSec){\r\n      let vm = this\r\n        let param = [\r\n          {\r\n            x: x,\r\n            y: y,\r\n            groupIndex:-1,\r\n            playerIndex: -1, //playerIndex不为-1，则优先使用playerIndex初始化\r\n            playerInfo: {\r\n              channelId: channelId,\r\n              channelName:channelName,\r\n              channelUrl: channelUrl,\r\n              timeshiftTotalInSec:timeshiftTotalInSec\r\n            },\r\n          },\r\n        ];\r\n        this.recordPlayUrlChange = sessionStorage.getItem('initPlay')?JSON.parse(sessionStorage.getItem('initPlay')):[]\r\n        this.$sumaQtPlayer.preparePlayer(JSON.stringify(param), function (\r\n          callback\r\n        ) {\r\n          let callbackObj = JSON.parse(callback)\r\n          //====================拖拽进行初始化录制开关\r\n          if(callbackObj.status===\"OK\"){\r\n            let recodeObj = [{\r\n              playerIndex:callbackObj.data[0].playerIndex,\r\n              groupIndex:callbackObj.data[0].groupIndex,\r\n              channelId:callbackObj.data[0].channelId,\r\n               business: {\r\n                  isRecording: recodeFlag,\r\n                  isDotting: false\r\n                },\r\n                player: {}\r\n            }]\r\n            vm.setQmlPlayerProperty(recodeObj)\r\n            //存储录制信息\r\n            if(!sessionStorage.getItem('monitorState')){\r\n              //如果拖拽时无存储信息就存下来\r\n              sessionStorage.setItem('monitorState',JSON.stringify(recodeObj))\r\n            }else{\r\n              let arr = JSON.parse(sessionStorage.getItem('monitorState'))\r\n              let flag = true\r\n              for(let item of arr){\r\n                if(item.playerIndex === recodeObj[0].playerIndex){\r\n                  flag = false\r\n                  item.channelId = recodeObj[0].channelId\r\n                  item.business = recodeObj[0].business\r\n                  item.player = recodeObj[0].player\r\n                  sessionStorage.setItem('monitorState',JSON.stringify(arr))\r\n                }\r\n              }\r\n              if(flag){\r\n                arr.push(recodeObj[0])\r\n                sessionStorage.setItem('monitorState',JSON.stringify(arr))\r\n              }\r\n            }\r\n            //记录数据作为第二次进入页面初始化播放器（重置播放地址）\r\n            var obj = {}\r\n            obj.x =100\r\n            obj.y =100\r\n            obj.playerIndex = JSON.parse(callback).data[0].playerIndex\r\n            obj.groupIndex = JSON.parse(callback).data[0].groupIndex\r\n            obj.playerInfo = { \r\n              channelId,\r\n              channelName,\r\n              channelUrl,\r\n              timeshiftTotalInSec\r\n            }\r\n            let flag = true//是否不重复\r\n            for(let item of vm.recordPlayUrlChange){\r\n              if(item.playerIndex === obj.playerIndex){\r\n                //如果playerIndex相同替换\r\n                // item = JSON.parse(JSON.stringify(obj))\r\n                for(let key in obj){\r\n                  vm.$set(item,key,obj[key])\r\n                }\r\n                flag = false\r\n                break\r\n              }\r\n            }\r\n            if(flag){\r\n              vm.recordPlayUrlChange.push(obj)\r\n            }\r\n            sessionStorage.setItem('initPlay',JSON.stringify(vm.recordPlayUrlChange))\r\n          }\r\n        });\r\n    },\r\n    //第二次页面进入初始\r\n    prepareQmlPlayer1(){\r\n        let vm = this\r\n        let param = []\r\n        this.recordPlayUrlChange = sessionStorage.getItem('initPlay')?JSON.parse(sessionStorage.getItem('initPlay')):[]\r\n        if(!this.recordPlayUrlChange.length){\r\n          //如果为空就不初始化视频\r\n          return false\r\n        }\r\n        for(let item of this.recordPlayUrlChange){\r\n          let obj = {}\r\n          obj.x =100\r\n          obj.y =100\r\n          obj.playerIndex = item.playerIndex\r\n          obj.groupIndex = item.groupIndex\r\n          obj.playerInfo = item.playerInfo\r\n          param.push(obj)\r\n        }\r\n        this.$sumaQtPlayer.preparePlayer(JSON.stringify(param), function (\r\n          callback\r\n        ) {\r\n          \r\n        });\r\n    },\r\n    //初始化播放流\r\n    prepareQmlPlayer2(param){\r\n        this.$sumaQtPlayer.preparePlayer(JSON.stringify(param), function (\r\n          callback\r\n        ) {\r\n          \r\n        });\r\n    },\r\n     //设定播放器\r\n     setQmlPlayerProperty(param){\r\n        this.$sumaQtPlayer.setPlayerProperty(JSON.stringify(param), function (\r\n          callback\r\n        ) {\r\n        });\r\n     },\r\n     //调整播放器\r\n     adjustQmlPlayer(param){\r\n        this.$sumaQtPlayer.adjustPlayer(JSON.stringify(param), function (callback) {\r\n        });\r\n     },\r\n     //替换video\r\n     replaceVideoWithPlayer1(param){\r\n       let vm = this\r\n        vm.playerType = 'base'\r\n        sessionStorage.setItem('playerType','base')\r\n        this.$sumaQtPlayer.replaceVideoWithPlayer(JSON.stringify(param),function(callback){\r\n         \r\n        })\r\n     },\r\n    //销毁播放器\r\n    destroyQmlPlayer(param){\r\n     this.$sumaQtPlayer.destroyPlayer(JSON.stringify(param),function (callback) {\r\n      });\r\n    },\r\n    //播放器添加版本号\r\n    setVersionInfo(param){\r\n     this.$sumaQtPlayer.setVersionInfo(JSON.stringify(param),function (callback) {\r\n  \r\n      });\r\n    },\r\n    //获取版本号\r\n    getVersion(){\r\n      let obj={}\r\n      api.getVersion(obj).then(res=>{\r\n        res.result\r\n        let param = {\r\n          versionCode:0,\r\n          versionName:res.result,\r\n          versionDescription:''\r\n        }\r\n        this.setVersionInfo(param)\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style>\r\n  .planModal .ivu-modal-wrap[style]{position: static;}\r\n  .planModal .ivu-modal{\r\n    top: 0\r\n  }\r\n  .ivu-modal-mask{\r\n    display: none\r\n  }\r\n  .monRoot{\r\n    position: absolute;\r\n    left: 50%;\r\n    top:50%;\r\n    transform: translate(-50%,-50%);\r\n  }\r\n  .planModal .ivu-modal-body{\r\n    height: 340px\r\n  }\r\n</style>\r\n\r\n\r\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./player.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./player.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./player.vue?vue&type=template&id=c4a7b424&\"\nimport script from \"./player.vue?vue&type=script&lang=js&\"\nexport * from \"./player.vue?vue&type=script&lang=js&\"\nimport style0 from \"./player.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{attrs:{\"id\":\"suma-player-parent\"}},[_c('video',{ref:\"video\",staticClass:\"video-js vjs-default-skin vjs-big-play-centered\",attrs:{\"id\":_vm.playerId,\"controls\":\"\",\"x5-playsinline\":\"true\",\"playsinline\":\"true\",\"webkit-playsinline\":\"\"}})])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div>\n     <div id=\"suma-player-parent\">\n        <video\n          :id=\"playerId\"\n          ref=\"video\"\n          controls\n          class=\"video-js vjs-default-skin vjs-big-play-centered\"\n          x5-playsinline=\"true\"\n          playsinline=\"true\"\n          webkit-playsinline\n        ></video>\n      </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data: () => ({\n    player: null,\n    playerId: \"suma-player\",\n    initOptions: {\n      // playbackRates: [0.25, 0.5, 1.0, 1.5, 2.0], //播放速度\n      autoplay: true, //如果true,浏览器准备好时开始播放。\n      muted: false, // 默认情况下将会消除任何音频。\n      loop: false, // 导致视频一结束就重新开始。\n      preload: \"auto\", // auto浏览器选择最佳行为,立即开始加载视频（如果浏览器支持）\n      //language: 'zh-CN',\n      aspectRatio: \"16:9\", // 播放器的比例。用冒号分隔的两个数字（例如\"16:9\"或\"4:3\"）\n      fluid: true, // 当true时，播放器将拥有流体大小。换句话说，它将按比例缩放以适应其容器。\n      // sources: [\n      //   {\n      //     type: \"application/x-mpegURL\",\n      //     src: \"http://27.36.62.161:8060/live/fourthgrade_1500.m3u8?ci=123\" //url地址\n      //   }\n      // ],\n      poster: \"\", //你的封面地址\n      // width: document.documentElement.clientWidth,\n      notSupportedMessage: \"此视频暂无法播放，请稍后再试\", //无法播放媒体源时显示的默认信息。\n      controlBar: {\n        // currentTimeDisplay: true,\n        // timeDivider: true,\n        // durationDisplay: true,\n        // remainingTimeDisplay: false,\n        // fullscreenToggle: true, //全屏按钮\n        // volumePanel: {\n        //   inline: false\n        // }\n        // 定制播放器相关按钮顺序\n        children: [\n          { name: \"playToggle\" }, // 播放按钮\n          {\n            name: \"volumePanel\", // 音量控制\n            inline: false // 不使用水平方式\n          },\n          { name: \"currentTimeDisplay\" }, // 当前已播放时间\n          { name: \"progressControl\" }, // 播放进度条\n          { name: \"durationDisplay\" }, // 总时间\n          // {\n          //   // 倍数播放\n          //   name: \"playbackRateMenuButton\",\n          //   playbackRates: [0.5, 1, 1.5, 2, 2.5]\n          // },\n          { name: \"FullscreenToggle\" } // 全屏\n        ]\n      },\n      errorDisplay: true,\n      // posterImage: false,\n      bigPlayButton: true,\n      textTrackDisplay: false\n    },\n    height:0,\n  }),\n  methods: {\n    /**\n     * 播放HLS直播\n     * liveUrl 直播播放地址\n     * siAutoPlay 是否自动播放\n     */\n    playLiveWithHlsUrl(liveUrl, isAutoPlay = true) {\n      if (this.player != null) {\n        console.log(\"playLiveWithHlsUrl:\" + liveUrl);\n        // this.player.reset();\n        this.player.autoplay(isAutoPlay);\n        // this.player.options.playbackRates = [];\n        this.player.src({\n          type: \"application/x-mpegURL\",\n          src: liveUrl\n        });\n        if (true == isAutoPlay) {\n          this.player.play();\n        }\n      }\n    },\n    /**\n     * 播放HLS点播\n     * vodUrl 点播播放地址\n     * siAutoPlay 是否自动播放\n     */\n    playVodWithHlsUrl(vodUrl, isAutoPlay = true) {\n      if (this.player != null) {\n        console.log(\"playVodWithHlsUrl:\" + vodUrl);\n        // this.player.reset();\n        this.player.autoplay(isAutoPlay);\n        // this.initOptions.playbackRates = [0.25, 0.5, 1.0, 1.5, 2.0];\n        this.player.src({\n          type: \"application/x-mpegURL\",\n          src: vodUrl\n        });\n        if (true == isAutoPlay) {\n          this.player.play();\n        }\n      }\n    },\n    /**\n     * 设置播放器封面，也可使用props中的posterUrl参数\n     */\n    setPlayerPoster(imageUrl) {\n      this.initOptions.poster = imageUrl;\n      if (this.player != null) {\n        // this.player.posterImage.setSrc(imageUrl);\n        this.player.poster(imageUrl);\n      }\n    },\n    /**\n     * 初始化播放器\n     */\n    setupPlayer() {\n      const vm = this;\n      // document.addEventListener(\n      //   \"WeixinJSBridgeReady\",\n      //   function() {\n      //     vm.player.play();\n      //   },\n      //   false\n      // );\n      var self = this;\n      console.log(\"setup_sumaPalyer\" + JSON.stringify(this.initOptions));\n      this.player = this.$video(this.playerId, this.initOptions, function() {\n        //相关事件可参考https://html.spec.whatwg.org/multipage/media.html#mediaevents\n        this.on(\"loadstart\", () => {\n          console.log(\"loadstart\");\n        });\n        // 进度条变化时回调\n        // this.on(\"progress\", () => {\n        //   console.log(\"progress\");\n        // });\n        this.on(\"suspend\", () => {\n          console.log(\"suspend\");\n        });\n        this.on(\"abort\", () => {\n          console.log(\"abort\");\n        });\n        this.on(\"emptied\", () => {\n          console.log(\"emptied\");\n        });\n        this.on(\"stalled\", () => {\n          console.log(\"stalled\");\n        });\n        //首次加载视频的媒体信息时回调（针对一个视频地址仅会触发一次）\n        this.on(\"loadedmetadata\", () => {\n          console.log(\"loadedmetadata\");\n          self.$emit(\"suma-player-loadedmetadata\", self);\n        });\n        this.on(\"loadeddata\", () => {\n          console.log(\"loadeddata\");\n        });\n        this.on(\"canplay\", () => {\n          console.log(\"canplay\");\n        });\n        this.on(\"canplaythrough\", () => {\n          console.log(\"canplaythrough\");\n        });\n        this.on(\"playing\", () => {\n          console.log(\"playing\");\n        });\n        this.on(\"waiting\", () => {\n          console.log(\"waiting\");\n        });\n        this.on(\"seeking\", () => {\n          console.log(\"seeking\");\n        });\n        this.on(\"seeked\", () => {\n          console.log(\"seeked\");\n        });\n        this.on(\"ended\", () => {\n          console.log(\"ended\");\n          self.$emit('plyerEnd')\n        });\n        this.on(\"durationchange\", () => {\n          console.log(\"durationchange\");\n        });\n        // 当前播放时间变化时回调\n        // this.on(\"timeupdate\", () => {\n        //   console.log(\"timeupdate\");\n        // });\n        this.on(\"pause\", () => {\n          console.log(\"pause\");\n        });\n        this.on(\"ratechange\", () => {\n          console.log(\"ratechange\");\n        });\n        this.on(\"resize\", () => {\n          console.log(\"resize\");\n        });\n        this.on(\"loadstart\", () => {\n          console.log(\"loadstart\");\n        });\n        this.on(\"loadstart\", () => {\n          console.log(\"loadstart\");\n        });\n        this.on(\"loadstart\", () => {\n          console.log(\"loadstart\");\n        });\n        this.on(\"ready\", () => {\n          // 播放事件发生时, 立刻调整音量至用户已设置过的音量\n          // this.volume(vm.video.volume);\n          console.log(\"player_ready\");\n          // this.play(); //test\n          self.$emit(\"suma-player-ready\", self);\n        });\n        this.on(\"play\", () => {\n          // 播放事件发生时, 立刻调整音量至用户已设置过的音量\n          // this.volume(vm.video.volume);\n          console.log(\"player_play\");\n          self.$emit(\"suma-player-play\", self);\n        });\n\n        this.on(\"volumechange\", () => {\n          // 音量调整事件\n          // vm.video.volume = this.volume();\n          // window.localStorage.volume = this.volume();\n        });\n\n        this.on(\"error\", () => {\n          // 因为网络加载失败时 重新尝试\n          let err = this.error();\n          if (err.code === 2) {\n            // 判断是否是网络加载问题\n            let buffTime = this.bufferedEnd() - 6;\n            this.load(vm.src);\n            this.currentTime(buffTime);\n            this.play();\n          } else {\n            // 非网络错误\n            // vm.alert.err(err.message);\n            // this.dispose();\n            // this.reset();\n            // this.src({});\n          }\n          console.log(\"sumapalyer_error:\" + JSON.stringify(err));\n        });\n      });\n    },\n    /**\n     * 重置播放器至初始状态\n     */\n    resetPlayer() {\n      if (this.player != null) {\n        console.log(\"player_reset\");\n        //dispose()销毁旧播放器，将会删除整个<video>标签，所以需要重新添加videoNode\n        this.player.dispose();\n        // var videoNode =\n        //   \"<video id='\" +\n        //   this.playerId +\n        //   \"' ref='video' controls class='video-js vjs-default-skin vjs-big-play-centered' x5-playsinline='true' playsinline='true' webkit-playsinline ></video>\";\n        var videoNode = `<video\n          id=\"${this.playerId}\"\n          ref=\"video\"\n          controls\n          class=\"video-js vjs-default-skin vjs-big-play-centered\"\n          x5-playsinline=\"true\"\n          playsinline=\"true\"\n          webkit-playsinline >\n          </video>`;\n        document.getElementById(\"suma-player-parent\").innerHTML += videoNode;\n        this.setupPlayer();\n        //TODO:目前仍存在部分问题，重置播放器后，iOS版微信上无法自动起播\n      }\n    },\n    //暂停\n    pause() {\n      if (this.player != null) {\n        this.player.pause();\n        console.log('player',this.player)\n      }\n    }\n  },\n  props: {\n    // options: {\n    //   type: Object,\n    //   required: true\n    // }\n    posterUrl: {\n      type: String,\n      default: \"\"\n    }\n  },\n  watch: {\n    // src() {\n    //   this.player.src(this.src);\n    // }\n    posterUrl(newV, oldV) {\n      console.log(\"posterUrl_new:\" + newV + \" old:\" + oldV);\n      this.setPlayerPoster(newV);\n    }\n  },\n  computed: {\n    // src() {\n    //   return this.options.sources[0].src;\n    // },\n    // video() {\n    //   return this.$store.state.video;\n    // }\n  },\n  mounted() {\n    console.log(\"player_startMounted\");\n    const vm = this;\n    document.addEventListener(\n      \"WeixinJSBridgeReady\",\n      function() {\n        vm.player.play();\n      },\n      false\n    );\n\n    this.setupPlayer();\n\n    console.log(\"player_mounted\");\n    //------------------计算替换div高度\n     var w = window.innerWidth;\n     this.height = w/16*9\n\n  },\n  beforeDestroy() {\n    //在组件销毁时同时销毁播放器，避免组件重入时播放器显示异常\n    this.player.dispose();\n  }\n};\n</script>\n\n<style>\n.vjs-big-play-button {\n  height: 3em !important;\n  width: 3em !important;\n  line-height: 3em !important;\n  border-radius: 50% !important;\n  margin-top: -1.5em !important;\n}\n\n.vjs-button > .vjs-icon-placeholder:before {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 2em;\n}\n\n.vjs-playback-rate .vjs-playback-rate-value {\n  font-size: 1.8em;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.vjs-control-bar {\n  background: rgba(0, 0, 0, 0.8) !important;\n}\n\n/* 此设置可以保证当前播放时间与总时间可以正常显示 */\n.video-js .vjs-time-control {\n  display: block !important;\n}\n\n/* .video-js .vjs-remaining-time {\n  display: none !important;\n} */\n\n.video-js .vjs-play-progress,\n.video-js .vjs-volume-level {\n  background: linear-gradient(to right, #fc8200, #ffa604) !important;\n}\n\n/* 此选择器可控制音量进度条圆钮 */\n.video-js .vjs-volume-level:before {\n  /* top: -0.333333333333333em !important; */\n  /* top: -1em !important; */\n  /* right: 1em !important; */\n  left: -0.45em !important; /*修正音量条拖动圆钮显示不居中问题*/\n}\n\n/* 此选择器可控制播放进度条圆钮 */\n/* .video-js .vjs-play-progress:before {\n  top: 0em !important;\n} */\n\n.video-js:hover .vjs-big-play-button,\n.vjs-custom-skin > .video-js .vjs-big-play-button:focus,\n.vjs-custom-skin > .video-js .vjs-big-play-button:active {\n  background: linear-gradient(to right, #fc8200, #ffa604) !important;\n  opacity: 0.7;\n}\n\n.vjs-big-play-button .vjs-icon-placeholder {\n  font-size: 70px !important;\n}\n\n.vjs-error .vjs-error-display:before {\n  color: #fff !important;\n  content: \"X\" !important;\n  font-family: Arial, Helvetica, sans-serif !important;\n  font-size: 4.5em !important;\n  left: 0 !important;\n  line-height: 1.8 !important;\n  margin-top: -0.5em !important;\n  position: absolute !important;\n  text-shadow: 0.05em 0.05em 0.1em #000 !important;\n  text-align: center !important;\n  top: 50% !important;\n  vertical-align: middle !important;\n  width: 100% !important;\n}\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SumaPlayer.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SumaPlayer.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./SumaPlayer.vue?vue&type=template&id=702b4c86&\"\nimport script from \"./SumaPlayer.vue?vue&type=script&lang=js&\"\nexport * from \"./SumaPlayer.vue?vue&type=script&lang=js&\"\nimport style0 from \"./SumaPlayer.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}