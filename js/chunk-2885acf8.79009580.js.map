{"version":3,"sources":["webpack:///./node_modules/core-js/internals/string-repeat.js","webpack:///./src/views/recode-manage/components/tab.vue?05fb","webpack:///src/views/recode-manage/components/tab.vue","webpack:///./src/views/recode-manage/components/tab.vue?711f","webpack:///./src/views/recode-manage/components/tab.vue?12a5","webpack:///./node_modules/core-js/modules/es.string.starts-with.js","webpack:///./node_modules/core-js/modules/es.string.repeat.js","webpack:///./src/views/recode-manage/components/tab.vue?5d84"],"names":["toInteger","requireObjectCoercible","module","exports","repeat","count","str","String","this","result","n","Infinity","RangeError","render","_vm","_h","$createElement","_c","_self","staticStyle","staticClass","attrs","isGray","on","newCreateChannel","_v","allRecodePlan","startRecode","stopRecode","columnsTab","channelTableData","tabHeight","channelChange","totalCount","pageNo","pageChange","sizeChange","model","value","callback","$$v","newCreateChannelModal","expression","slot","key","refresh","ref","channelData","enterProtocol","channelRules","channelRules1","channelRules2","$set","_s","channelName","length","_l","item","index","metaDataValue","toString","metaDataName","categoryId","categoryName","addClass","change1","address","address1","maxShiftAndBackTimeLenth","_e","cancelCreateChannel","channelNewLoading","$event","confirmCreateChannel","editChannelModal","cancelEditChannel","channelEditLoading","confirmEditChannel","recodePlanModal","recodePlanData","add","directives","name","rawName","moveIn","recodeTimeChange","style","cursor","timeArr","color","remove","noRepeatDateOption","noRepeatDateChange","noRepeatTimeChange","timeArr1","isApply","cancelRecodePlan","confirmRecodePlan","recodePlanConfirmModal","isStart","startOrStopCancel","startOrStopConfirm","addClassModal","addClassInput","confirmAdd","confirmCancel","staticRenderFns","Error","selectArr","push","channelId","channelType1","channelType","sourceType1","sourceType","console","log","dataFlag","timeFlag","timeEqualFlag","timeEndFlag","timeStartFlag","planList","channelIdList","component","$","getOwnPropertyDescriptor","f","toLength","notARegExp","correctIsRegExpLogic","IS_PURE","nativeStartsWith","startsWith","min","Math","CORRECT_IS_REGEXP_LOGIC","MDN_POLYFILL_BUG","descriptor","prototype","writable","target","proto","forced","searchString","that","arguments","undefined","search","call","slice"],"mappings":"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","file":"js/chunk-2885acf8.79009580.js","sourcesContent":["'use strict';\nvar toInteger = require('../internals/to-integer');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\n// `String.prototype.repeat` method implementation\n// https://tc39.github.io/ecma262/#sec-string.prototype.repeat\nmodule.exports = ''.repeat || function repeat(count) {\n  var str = String(requireObjectCoercible(this));\n  var result = '';\n  var n = toInteger(count);\n  if (n < 0 || n == Infinity) throw RangeError('Wrong number of repetitions');\n  for (;n > 0; (n >>>= 1) && (str += str)) if (n & 1) result += str;\n  return result;\n};\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticStyle:{\"padding\":\"10px\"}},[_c('Card',[_c('p',{staticStyle:{\"text-align\":\"right\"}},[_c('Button',{staticClass:\"btn-right\",staticStyle:{\"background\":\"rgba(13,67,111,1)\",\"color\":\"rgba(199,219,244,1)\"},attrs:{\"disabled\":_vm.isGray},on:{\"click\":_vm.newCreateChannel}},[_vm._v(\"新建通道\")]),_c('Button',{staticClass:\"btn-right\",staticStyle:{\"background\":\"rgba(13,67,111,1)\",\"color\":\"rgba(199,219,244,1)\"},attrs:{\"disabled\":_vm.isGray},on:{\"click\":_vm.allRecodePlan}},[_vm._v(\"录制计划\")]),_c('Button',{staticClass:\"btn-right\",staticStyle:{\"background\":\"rgba(13,67,111,1)\",\"color\":\"rgba(199,219,244,1)\"},attrs:{\"disabled\":_vm.isGray},on:{\"click\":_vm.startRecode}},[_vm._v(\"开启通道\")]),_c('Button',{staticClass:\"btn-right\",staticStyle:{\"color\":\"#F56C6C\",\"border\":\"1px solid #F56C6C\",\"background\":\"rgba(13,67,111,1)\"},attrs:{\"disabled\":_vm.isGray},on:{\"click\":_vm.stopRecode}},[_vm._v(\"关闭通道\")])],1),_c('Table',{staticStyle:{\"marginTop\":\"10px\"},attrs:{\"columns\":_vm.columnsTab,\"data\":_vm.channelTableData,\"height\":_vm.tabHeight},on:{\"on-selection-change\":_vm.channelChange}}),_c('Page',{staticStyle:{\"text-align\":\"right\",\"margin\":\"20px 0\"},attrs:{\"total\":_vm.totalCount,\"current\":_vm.pageNo,\"show-total\":\"\",\"show-sizer\":\"\",\"show-elevator\":\"\",\"placement\":\"top\"},on:{\"on-change\":_vm.pageChange,\"on-page-size-change\":_vm.sizeChange}})],1),_c('Modal',{attrs:{\"id\":\"channelNew_tab\",\"width\":\"640\",\"mask-closable\":false},model:{value:(_vm.newCreateChannelModal),callback:function ($$v) {_vm.newCreateChannelModal=$$v},expression:\"newCreateChannelModal\"}},[_c('p',{staticStyle:{\"color\":\"#fff\",\"text-align\":\"left\"},attrs:{\"slot\":\"header\"},slot:\"header\"},[_vm._v(\" 新建通道 \")]),_c('Form',{key:_vm.refresh,ref:\"channelNew\",attrs:{\"model\":_vm.channelData,\"label-width\":150,\"rules\":_vm.channelData.enterProtocol==='0'||_vm.channelData.enterProtocol==='1'?_vm.channelRules:_vm.channelData.enterProtocol==='2'?_vm.channelRules1:_vm.channelRules2}},[_c('FormItem',{attrs:{\"prop\":\"channelName\",\"label\":\"通道名称：\"}},[_c('Input',{staticStyle:{\"width\":\"350px\"},attrs:{\"type\":\"text\",\"placeholder\":\"请输入通道名称\",\"maxlength\":60},model:{value:(_vm.channelData.channelName),callback:function ($$v) {_vm.$set(_vm.channelData, \"channelName\", $$v)},expression:\"channelData.channelName\"}}),_c('span',{staticStyle:{\"color\":\"#fff\",\"margin-left\":\"19px\"}},[_vm._v(_vm._s(_vm.channelData.channelName.length)+\"/60\")])],1),_c('FormItem',{staticStyle:{\"margin-top\":\"-11px\"},attrs:{\"prop\":\"channelType\",\"label\":\"通道类型：\"}},[_c('RadioGroup',{model:{value:(_vm.channelData.channelType),callback:function ($$v) {_vm.$set(_vm.channelData, \"channelType\", $$v)},expression:\"channelData.channelType\"}},_vm._l((_vm.channelTypeList),function(item,index){return _c('Radio',{key:index,attrs:{\"label\":item.metaDataValue.toString()}},[_c('span',{staticStyle:{\"color\":\"rgba(255,255,255,1)\",\"fontSize\":\"14px\"}},[_vm._v(_vm._s(item.metaDataName))])])}),1)],1),_c('FormItem',{staticStyle:{\"margin-top\":\"-15px\"},attrs:{\"prop\":\"channelClass\",\"label\":\"通道分类：\"}},[_c('div',{staticStyle:{\"display\":\"flex\"}},[_c('RadioGroup',{staticStyle:{\"max-height\":\"80px\",\"max-width\":\"320px\",\"overflow-y\":\"auto\"},model:{value:(_vm.channelData.channelClass),callback:function ($$v) {_vm.$set(_vm.channelData, \"channelClass\", $$v)},expression:\"channelData.channelClass\"}},_vm._l((_vm.channelClassAll),function(item){return _c('Radio',{key:item.categoryId,attrs:{\"label\":item.categoryId}},[_c('span',{staticStyle:{\"color\":\"rgba(255,255,255,1)\",\"fontSize\":\"14px\"}},[_vm._v(_vm._s(item.categoryName))])])}),1),_c('Button',{staticStyle:{\"background\":\"rgba(13,67,111,1)\",\"color\":\"rgba(199,219,244,1)\",\"height\":\"26px\",\"margin-left\":\"10px\"},on:{\"click\":_vm.addClass}},[_vm._v(\"添加分类\")])],1)]),_c('FormItem',{staticStyle:{\"margin-top\":\"-10px\"},attrs:{\"prop\":\"enterProtocol\",\"label\":\"输入源协议：\"}},[_c('Select',{staticStyle:{\"width\":\"200px\"},on:{\"on-change\":_vm.change1},model:{value:(_vm.channelData.enterProtocol),callback:function ($$v) {_vm.$set(_vm.channelData, \"enterProtocol\", $$v)},expression:\"channelData.enterProtocol\"}},_vm._l((_vm.enterProtocolList),function(item){return _c('Option',{key:item.metaDataValue,attrs:{\"value\":String(item.metaDataValue)}},[_vm._v(_vm._s(item.metaDataName))])}),1)],1),(_vm.channelData.enterProtocol==='0'||_vm.channelData.enterProtocol==='1')?_c('div',[_c('FormItem',{staticStyle:{\"margin-top\":\"-9px\"},attrs:{\"prop\":\"address\",\"label\":\"源地址(主)：\"}},[_c('Input',{staticStyle:{\"width\":\"350px\"},attrs:{\"type\":\"text\",\"maxlength\":100,\"placeholder\":\"请输入\"},model:{value:(_vm.channelData.address),callback:function ($$v) {_vm.$set(_vm.channelData, \"address\", $$v)},expression:\"channelData.address\"}}),_c('span',{staticStyle:{\"color\":\"#AFBCCC\",\"margin-left\":\"19px\"}},[_vm._v(_vm._s(_vm.channelData.address.length)+\"/100\")])],1),_c('FormItem',{staticStyle:{\"margin-top\":\"-4px\"},attrs:{\"prop\":\"address1\",\"label\":\"源地址(备)：\"}},[_c('Input',{staticStyle:{\"width\":\"350px\"},attrs:{\"type\":\"text\",\"maxlength\":100,\"placeholder\":\"请输入\"},model:{value:(_vm.channelData.address1),callback:function ($$v) {_vm.$set(_vm.channelData, \"address1\", $$v)},expression:\"channelData.address1\"}}),_c('span',{staticStyle:{\"color\":\"#AFBCCC\",\"margin-left\":\"19px\"}},[_vm._v(_vm._s(_vm.channelData.address1.length)+\"/100\")])],1),_c('FormItem',{staticStyle:{\"margin-top\":\"-2px\"},attrs:{\"prop\":\"timeShifting\",\"label\":\"时移时长(分钟)：\"}},[_c('Input',{staticStyle:{\"width\":\"350px\"},attrs:{\"type\":\"textarea\",\"placeholder\":(\"直播过程中可以回看时移的最长时间,不填写系统默认4个小时,即240分钟,可输入的最大值\" + _vm.maxShiftAndBackTimeLenth)},model:{value:(_vm.channelData.timeShifting),callback:function ($$v) {_vm.$set(_vm.channelData, \"timeShifting\", $$v)},expression:\"channelData.timeShifting\"}}),_c('br')],1),_c('FormItem',{staticStyle:{\"margin-top\":\"-1px\"},attrs:{\"prop\":\"storageTime\",\"label\":\"可存储的时间(分钟)：\"}},[_c('Input',{staticStyle:{\"width\":\"350px\"},attrs:{\"type\":\"textarea\",\"placeholder\":(\"录制的视频,后台最长可存储的时间,不填写系统默认7天,即10080分钟,可输入的最大值\" + _vm.maxShiftAndBackTimeLenth)},model:{value:(_vm.channelData.storageTime),callback:function ($$v) {_vm.$set(_vm.channelData, \"storageTime\", $$v)},expression:\"channelData.storageTime\"}}),_c('br')],1),_c('FormItem',{staticStyle:{\"margin-top\":\"-2px\"},attrs:{\"prop\":\"playProtocol\",\"label\":\"播放协议：\"}},[_c('Select',{staticStyle:{\"width\":\"350px\"},model:{value:(_vm.channelData.playProtocol),callback:function ($$v) {_vm.$set(_vm.channelData, \"playProtocol\", $$v)},expression:\"channelData.playProtocol\"}},_vm._l((_vm.playProtocolList),function(item,index){return _c('Option',{key:index,attrs:{\"value\":item.metaDataValue.toString()}},[_vm._v(_vm._s(item.metaDataName))])}),1)],1)],1):_vm._e(),(_vm.channelData.enterProtocol==='2')?_c('div',[_c('FormItem',{attrs:{\"prop\":\"userName\",\"label\":\"用户名：\"}},[_c('Input',{staticStyle:{\"width\":\"350px\"},attrs:{\"type\":\"text\",\"maxlength\":100,\"placeholder\":\"请输入用户名\"},model:{value:(_vm.channelData.userName),callback:function ($$v) {_vm.$set(_vm.channelData, \"userName\", $$v)},expression:\"channelData.userName\"}})],1),_c('FormItem',{attrs:{\"prop\":\"passWord\",\"label\":\"密码：\"}},[_c('Input',{staticStyle:{\"width\":\"350px\"},attrs:{\"type\":\"text\",\"maxlength\":100,\"placeholder\":\"请输入用户名\"},model:{value:(_vm.channelData.passWord),callback:function ($$v) {_vm.$set(_vm.channelData, \"passWord\", $$v)},expression:\"channelData.passWord\"}})],1)],1):_vm._e(),(_vm.channelData.enterProtocol==='3')?_c('div',[_c('FormItem',{attrs:{\"prop\":\"localSip\",\"label\":\"本地SIP端口：\"}},[_c('Input',{staticStyle:{\"width\":\"350px\"},attrs:{\"type\":\"text\",\"placeholder\":\"请输入用户名\"},model:{value:(_vm.channelData.localSip),callback:function ($$v) {_vm.$set(_vm.channelData, \"localSip\", $$v)},expression:\"channelData.localSip\"}})],1),_c('FormItem',{attrs:{\"prop\":\"sipServerId\",\"label\":\"SIP服务器ID：\"}},[_c('Input',{staticStyle:{\"width\":\"350px\"},attrs:{\"type\":\"text\",\"placeholder\":\"请输入用户名\"},model:{value:(_vm.channelData.sipServerId),callback:function ($$v) {_vm.$set(_vm.channelData, \"sipServerId\", $$v)},expression:\"channelData.sipServerId\"}})],1),_c('FormItem',{attrs:{\"prop\":\"sipServerArea\",\"label\":\"SIP服务器域：\"}},[_c('Input',{staticStyle:{\"width\":\"350px\"},attrs:{\"type\":\"text\",\"placeholder\":\"请输入用户名\"},model:{value:(_vm.channelData.sipServerArea),callback:function ($$v) {_vm.$set(_vm.channelData, \"sipServerArea\", $$v)},expression:\"channelData.sipServerArea\"}})],1),_c('FormItem',{attrs:{\"prop\":\"sipServerAddress\",\"label\":\"SIP服务器地址：\"}},[_c('Input',{staticStyle:{\"width\":\"350px\"},attrs:{\"type\":\"text\",\"placeholder\":\"请输入用户名\"},model:{value:(_vm.channelData.sipServerAddress),callback:function ($$v) {_vm.$set(_vm.channelData, \"sipServerAddress\", $$v)},expression:\"channelData.sipServerAddress\"}})],1),_c('FormItem',{attrs:{\"prop\":\"sipServerPort\",\"label\":\"SIP服务器端口：\"}},[_c('Input',{staticStyle:{\"width\":\"350px\"},attrs:{\"type\":\"text\",\"placeholder\":\"请输入用户名\"},model:{value:(_vm.channelData.sipServerPort),callback:function ($$v) {_vm.$set(_vm.channelData, \"sipServerPort\", $$v)},expression:\"channelData.sipServerPort\"}})],1),_c('FormItem',{attrs:{\"prop\":\"sipUserConfirmId\",\"label\":\"SIP用户认证ID：\"}},[_c('Input',{staticStyle:{\"width\":\"350px\"},attrs:{\"type\":\"text\",\"placeholder\":\"请输入用户名\"},model:{value:(_vm.channelData.sipUserConfirmId),callback:function ($$v) {_vm.$set(_vm.channelData, \"sipUserConfirmId\", $$v)},expression:\"channelData.sipUserConfirmId\"}})],1),_c('FormItem',{attrs:{\"prop\":\"sipPassWord\",\"label\":\"密码：\"}},[_c('Input',{staticStyle:{\"width\":\"350px\"},attrs:{\"type\":\"text\",\"placeholder\":\"请输入用户名\"},model:{value:(_vm.channelData.sipPassWord),callback:function ($$v) {_vm.$set(_vm.channelData, \"sipPassWord\", $$v)},expression:\"channelData.sipPassWord\"}})],1),_c('FormItem',{attrs:{\"prop\":\"registerActiveTime\",\"label\":\"注册有效期(秒)：\"}},[_c('Input',{staticStyle:{\"width\":\"350px\"},attrs:{\"type\":\"text\",\"placeholder\":\"请输入用户名\"},model:{value:(_vm.channelData.registerActiveTime),callback:function ($$v) {_vm.$set(_vm.channelData, \"registerActiveTime\", $$v)},expression:\"channelData.registerActiveTime\"}})],1),_c('FormItem',{attrs:{\"prop\":\"heartbeatPeriod\",\"label\":\"心跳周期(秒)：\"}},[_c('Input',{staticStyle:{\"width\":\"350px\"},attrs:{\"type\":\"text\",\"placeholder\":\"请输入用户名\"},model:{value:(_vm.channelData.heartbeatPeriod),callback:function ($$v) {_vm.$set(_vm.channelData, \"heartbeatPeriod\", $$v)},expression:\"channelData.heartbeatPeriod\"}})],1)],1):_vm._e(),(_vm.channelData.enterProtocol==='4')?_c('div',[_c('FormItem',{attrs:{\"prop\":\"gkIsStart\",\"label\":\"启用GK：\"}},[_c('Select',{staticStyle:{\"width\":\"200px\"},model:{value:(_vm.channelData.gkIsStart),callback:function ($$v) {_vm.$set(_vm.channelData, \"gkIsStart\", $$v)},expression:\"channelData.gkIsStart\"}},[_c('Option',{attrs:{\"value\":\"0\"}},[_vm._v(\"启用\")]),_c('Option',{attrs:{\"value\":\"1\"}},[_vm._v(\"禁用\")])],1)],1),_c('FormItem',{attrs:{\"prop\":\"gkAddress\",\"label\":\"GK地址：\"}},[_c('Input',{staticStyle:{\"width\":\"350px\"},attrs:{\"type\":\"text\"},model:{value:(_vm.channelData.gkAddress),callback:function ($$v) {_vm.$set(_vm.channelData, \"gkAddress\", $$v)},expression:\"channelData.gkAddress\"}})],1),_c('FormItem',{attrs:{\"prop\":\"E164\",\"label\":\"E.164：\"}},[_c('Input',{staticStyle:{\"width\":\"350px\"},attrs:{\"type\":\"text\",\"placeholder\":\"请输入用户名\"},model:{value:(_vm.channelData.E164),callback:function ($$v) {_vm.$set(_vm.channelData, \"E164\", $$v)},expression:\"channelData.E164\"}})],1),_c('FormItem',{attrs:{\"prop\":\"H3231D\",\"label\":\"H.3231D：\"}},[_c('Input',{staticStyle:{\"width\":\"350px\"},attrs:{\"type\":\"text\",\"placeholder\":\"请输入用户名\"},model:{value:(_vm.channelData.H3231D),callback:function ($$v) {_vm.$set(_vm.channelData, \"H3231D\", $$v)},expression:\"channelData.H3231D\"}})],1),_c('FormItem',{attrs:{\"prop\":\"gkUserName\",\"label\":\"用户名：\"}},[_c('Input',{staticStyle:{\"width\":\"350px\"},attrs:{\"type\":\"text\",\"placeholder\":\"请输入用户名\"},model:{value:(_vm.channelData.gkUserName),callback:function ($$v) {_vm.$set(_vm.channelData, \"gkUserName\", $$v)},expression:\"channelData.gkUserName\"}})],1),_c('FormItem',{attrs:{\"prop\":\"gkPassword\",\"label\":\"密码：\"}},[_c('Input',{staticStyle:{\"width\":\"350px\"},attrs:{\"type\":\"text\",\"placeholder\":\"请输入用户名\"},model:{value:(_vm.channelData.gkPassword),callback:function ($$v) {_vm.$set(_vm.channelData, \"gkPassword\", $$v)},expression:\"channelData.gkPassword\"}})],1)],1):_vm._e(),(_vm.channelData.enterProtocol==='5')?_c('div',[_c('FormItem',{attrs:{\"prop\":\"internetPort\",\"label\":\"网络出口：\"}},[_c('RadioGroup',{model:{value:(_vm.channelData.internetPort),callback:function ($$v) {_vm.$set(_vm.channelData, \"internetPort\", $$v)},expression:\"channelData.internetPort\"}},[_c('Radio',{attrs:{\"label\":\"LAN\"}},[_c('span',[_vm._v(\"LAN\")])]),_c('Radio',{attrs:{\"label\":\"WAN\"}},[_c('span',[_vm._v(\"WAN\")])])],1)],1),_c('FormItem',{attrs:{\"prop\":\"transferType\",\"label\":\"传输类型：\"}},[_c('Select',{staticStyle:{\"width\":\"200px\"},model:{value:(_vm.channelData.transferType),callback:function ($$v) {_vm.$set(_vm.channelData, \"transferType\", $$v)},expression:\"channelData.transferType\"}},[_c('Option',{attrs:{\"value\":\"UDP\"}},[_vm._v(\"UDP\")])],1)],1),_c('FormItem',{attrs:{\"prop\":\"registerServer\",\"label\":\"注册服务器：\"}},[_c('Select',{staticStyle:{\"width\":\"200px\"},model:{value:(_vm.channelData.registerServer),callback:function ($$v) {_vm.$set(_vm.channelData, \"registerServer\", $$v)},expression:\"channelData.registerServer\"}},[_c('Option',{attrs:{\"value\":\"0\"}},[_vm._v(\"启用\")]),_c('Option',{attrs:{\"value\":\"1\"}},[_vm._v(\"禁用\")])],1)],1),_c('FormItem',{attrs:{\"prop\":\"domainAddress\",\"label\":\"域名地址：\"}},[_c('Input',{staticStyle:{\"width\":\"300px\"},attrs:{\"type\":\"text\",\"placeholder\":\"请输入域名地址\"},model:{value:(_vm.channelData.domainAddress),callback:function ($$v) {_vm.$set(_vm.channelData, \"domainAddress\", $$v)},expression:\"channelData.domainAddress\"}})],1),_c('FormItem',{attrs:{\"prop\":\"serverAddress\",\"label\":\"服务器地址：\"}},[_c('Input',{staticStyle:{\"width\":\"300px\"},attrs:{\"type\":\"text\",\"placeholder\":\"请输入服务器地址\"},model:{value:(_vm.channelData.serverAddress),callback:function ($$v) {_vm.$set(_vm.channelData, \"serverAddress\", $$v)},expression:\"channelData.serverAddress\"}})],1),_c('FormItem',{attrs:{\"prop\":\"interUserName\",\"label\":\"用户名：\"}},[_c('Input',{staticStyle:{\"width\":\"300px\"},attrs:{\"type\":\"text\",\"placeholder\":\"请输入用户名\"},model:{value:(_vm.channelData.interUserName),callback:function ($$v) {_vm.$set(_vm.channelData, \"interUserName\", $$v)},expression:\"channelData.interUserName\"}})],1),_c('FormItem',{attrs:{\"prop\":\"interPassword\",\"label\":\"密码：\"}},[_c('Input',{staticStyle:{\"width\":\"300px\"},attrs:{\"type\":\"text\",\"placeholder\":\"请输入密码\"},model:{value:(_vm.channelData.interPassword),callback:function ($$v) {_vm.$set(_vm.channelData, \"interPassword\", $$v)},expression:\"channelData.interPassword\"}})],1)],1):_vm._e()],1),_c('p',{attrs:{\"slot\":\"footer\"},slot:\"footer\"}),_c('div',{staticStyle:{\"text-align\":\"center\",\"margin-top\":\"-5px\"}},[_c('Button',{staticStyle:{\"background\":\"rgba(13,67,111,1)\",\"color\":\"rgba(199,219,244,1)\",\"margin-right\":\"50px\"},on:{\"click\":_vm.cancelCreateChannel}},[_vm._v(\"取消\")]),_c('Button',{attrs:{\"type\":\"primary\",\"loading\":_vm.channelNewLoading},on:{\"click\":function($event){return _vm.confirmCreateChannel('channelNew')}}},[_vm._v(\"确定\")])],1),_c('p')],1),_c('Modal',{attrs:{\"mask-closable\":false,\"width\":\"600\",\"id\":\"channelEdit_tab\"},model:{value:(_vm.editChannelModal),callback:function ($$v) {_vm.editChannelModal=$$v},expression:\"editChannelModal\"}},[_c('p',{attrs:{\"slot\":\"header\"},slot:\"header\"},[_vm._v(\" 修改通道 \")]),_c('Form',{ref:\"channelEdit\",attrs:{\"model\":_vm.channelData,\"label-width\":150,\"rules\":_vm.channelRules}},[_c('FormItem',{attrs:{\"prop\":\"channelName\",\"label\":\"通道名称：\"}},[_c('Input',{staticStyle:{\"width\":\"350px\"},attrs:{\"type\":\"text\",\"placeholder\":\"请输入通道名称\",\"disabled\":_vm.isGray,\"maxlength\":60},model:{value:(_vm.channelData.channelName),callback:function ($$v) {_vm.$set(_vm.channelData, \"channelName\", $$v)},expression:\"channelData.channelName\"}}),_c('span',{staticStyle:{\"color\":\"#fff\"}},[_vm._v(_vm._s(_vm.channelData.channelName.length)+\"/60\")])],1),_c('FormItem',{attrs:{\"prop\":\"address\",\"label\":\"源地址(主)：\"}},[_c('Input',{staticStyle:{\"width\":\"350px\"},attrs:{\"type\":\"text\",\"maxlength\":100,\"placeholder\":\"请输入地址\",\"disabled\":_vm.isGray},model:{value:(_vm.channelData.address),callback:function ($$v) {_vm.$set(_vm.channelData, \"address\", $$v)},expression:\"channelData.address\"}}),_c('span',{staticStyle:{\"color\":\"#fff\"}},[_vm._v(_vm._s(_vm.channelData.address.length)+\"/100\")])],1),_c('FormItem',{attrs:{\"prop\":\"address1\",\"label\":\"源地址(备)：\"}},[_c('Input',{staticStyle:{\"width\":\"350px\"},attrs:{\"type\":\"text\",\"maxlength\":100,\"placeholder\":\"请输入地址\",\"disabled\":_vm.isGray},model:{value:(_vm.channelData.address1),callback:function ($$v) {_vm.$set(_vm.channelData, \"address1\", $$v)},expression:\"channelData.address1\"}}),_c('span',{staticStyle:{\"color\":\"#fff\"}},[_vm._v(_vm._s(_vm.channelData.address1.length)+\"/100\")])],1),_c('FormItem',{attrs:{\"prop\":\"timeShifting\",\"label\":\"时移时长(分钟)：\"}},[_c('Input',{staticStyle:{\"width\":\"350px\"},attrs:{\"type\":\"textarea\",\"placeholder\":(\"直播过程中可以回看时移的最长时间,不填写系统默认4个小时,即240分钟,可输入的最大值\" + _vm.maxShiftAndBackTimeLenth),\"disabled\":_vm.isGray},model:{value:(_vm.channelData.timeShifting),callback:function ($$v) {_vm.$set(_vm.channelData, \"timeShifting\", $$v)},expression:\"channelData.timeShifting\"}}),_c('br')],1),_c('FormItem',{attrs:{\"prop\":\"storageTime\",\"label\":\"可存储的时间(分钟)：\"}},[_c('Input',{staticStyle:{\"width\":\"350px\"},attrs:{\"type\":\"textarea\",\"placeholder\":(\"录制的视频,后台最长可存储的时间,不填写系统默认7天,即10080分钟,可输入的最大值\" + _vm.maxShiftAndBackTimeLenth),\"disabled\":_vm.isGray},model:{value:(_vm.channelData.storageTime),callback:function ($$v) {_vm.$set(_vm.channelData, \"storageTime\", $$v)},expression:\"channelData.storageTime\"}}),_c('br')],1),_c('FormItem',{attrs:{\"prop\":\"playProtocol\",\"label\":\"播放协议：\"}},[_c('Select',{staticStyle:{\"width\":\"350px\"},attrs:{\"disabled\":_vm.isGray},model:{value:(_vm.channelData.playProtocol),callback:function ($$v) {_vm.$set(_vm.channelData, \"playProtocol\", $$v)},expression:\"channelData.playProtocol\"}},_vm._l((_vm.playProtocolList),function(item,index){return _c('Option',{key:index,attrs:{\"value\":item.metaDataValue.toString()}},[_vm._v(_vm._s(item.metaDataName))])}),1)],1)],1),_c('p',{attrs:{\"slot\":\"footer\"},slot:\"footer\"}),_c('div',{staticStyle:{\"text-align\":\"center\"}},[_c('Button',{staticStyle:{\"background\":\"rgba(13,67,111,1)\",\"color\":\"rgba(199,219,244,1)\",\"margin-right\":\"50px\"},on:{\"click\":_vm.cancelEditChannel}},[_vm._v(\"取消\")]),_c('Button',{attrs:{\"type\":\"primary\",\"loading\":_vm.channelEditLoading,\"disabled\":_vm.isGray},on:{\"click\":function($event){return _vm.confirmEditChannel('channelEdit')}}},[_vm._v(\"确定\")])],1),_c('p')],1),_c('Modal',{attrs:{\"title\":\"录制计划\",\"width\":\"640\",\"id\":\"recodePlanModal\"},model:{value:(_vm.recodePlanModal),callback:function ($$v) {_vm.recodePlanModal=$$v},expression:\"recodePlanModal\"}},[_c('Form',{ref:\"recodePlan\",staticStyle:{\"margin\":\"10px 20px\"}},[_c('FormItem',[_c('div',{staticStyle:{\"display\":\"flex\",\"justify-content\":\"space-between\"}},[_c('div',[_c('RadioGroup',{model:{value:(_vm.recodePlanData.repeat),callback:function ($$v) {_vm.$set(_vm.recodePlanData, \"repeat\", $$v)},expression:\"recodePlanData.repeat\"}},[_c('Radio',{attrs:{\"label\":0,\"disabled\":_vm.isGray}},[_c('span',{staticStyle:{\"color\":\"#fff\"}},[_vm._v(\"重复\")])]),_c('Radio',{staticStyle:{\"margin-left\":\"20px\"},attrs:{\"label\":1,\"disabled\":_vm.isGray}},[_c('span',{staticStyle:{\"color\":\"#fff\"}},[_vm._v(\"不重复\")])])],1)],1),_c('Button',{staticStyle:{\"background\":\"rgba(13,67,111,1)\",\"color\":\"rgba(199,219,244,1)\"},attrs:{\"disabled\":_vm.isGray},on:{\"click\":_vm.add}},[_vm._v(\"新建\")])],1)]),_c('FormItem',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.recodePlanData.repeat===0),expression:\"recodePlanData.repeat===0\"}],staticStyle:{\"margin-top\":\"-8px\"}},[_c('CheckboxGroup',{model:{value:(_vm.recodePlanData.weekArr),callback:function ($$v) {_vm.$set(_vm.recodePlanData, \"weekArr\", $$v)},expression:\"recodePlanData.weekArr\"}},[_c('Checkbox',{staticStyle:{\"color\":\"#fff\"},attrs:{\"label\":1,\"disabled\":_vm.isGray}},[_vm._v(\"周一\")]),_c('Checkbox',{staticStyle:{\"color\":\"#fff\",\"margin-left\":\"20px\"},attrs:{\"label\":2,\"disabled\":_vm.isGray}},[_vm._v(\"周二\")]),_c('Checkbox',{staticStyle:{\"color\":\"#fff\",\"margin-left\":\"20px\"},attrs:{\"label\":3,\"disabled\":_vm.isGray}},[_vm._v(\"周三\")]),_c('Checkbox',{staticStyle:{\"color\":\"#fff\",\"margin-left\":\"20px\"},attrs:{\"label\":4,\"disabled\":_vm.isGray}},[_vm._v(\"周四\")]),_c('Checkbox',{staticStyle:{\"color\":\"#fff\",\"margin-left\":\"20px\"},attrs:{\"label\":5,\"disabled\":_vm.isGray}},[_vm._v(\"周五\")]),_c('Checkbox',{staticStyle:{\"color\":\"#fff\",\"margin-left\":\"20px\"},attrs:{\"label\":6,\"disabled\":_vm.isGray}},[_vm._v(\"周六\")]),_c('Checkbox',{staticStyle:{\"color\":\"#fff\",\"margin-left\":\"20px\"},attrs:{\"label\":7,\"disabled\":_vm.isGray}},[_vm._v(\"周日\")])],1)],1),_c('FormItem',{staticStyle:{\"margin-top\":\"-10px\"}},[(_vm.recodePlanData.repeat===0)?_c('div',{staticStyle:{\"height\":\"228px\",\"width\":\"600px\",\"overflow-y\":\"auto\",\"border\":\"1px solid rgba(87,111,140,1)\",\"paddingBottom\":\"20px\",\"background\":\"#163C69\"}},_vm._l((_vm.timeArr),function(item,index){return _c('div',{key:index,staticStyle:{\"marginTop\":\"20px\",\"display\":\"flex\",\"justify-content\":\"flex-start\",\"align-items\":\"center\",\"marginLeft\":\"20px\"},on:{\"mouseenter\":function($event){return _vm.moveIn(index)}}},[_c('TimePicker',{staticClass:\"exportInput\",staticStyle:{\"width\":\"268px\",\"margin-right\":\"21px\"},attrs:{\"type\":\"timerange\",\"placeholder\":\"开始时间 至 结束时间\",\"disabled\":_vm.isGray},on:{\"on-change\":_vm.recodeTimeChange},model:{value:(item.timeData),callback:function ($$v) {_vm.$set(item, \"timeData\", $$v)},expression:\"item.timeData\"}}),_c('Icon',{style:({cursor:_vm.timeArr.length===1||_vm.isGray?'not-allowed':'pointer',color:'#576F8C'}),attrs:{\"type\":\"ios-close-circle-outline\",\"size\":\"25\",\"disabled\":_vm.timeArr.length===1},on:{\"click\":function($event){return _vm.remove(index)}}})],1)}),0):_c('div',{staticStyle:{\"height\":\"270px\",\"width\":\"600px\",\"overflow-y\":\"auto\",\"border\":\"1px solid rgba(87,111,140,1)\",\"padding-bottom\":\"20px\",\"background\":\"#163C69\"}},_vm._l((_vm.timeArr1),function(item,index){return _c('div',{key:index,staticStyle:{\"marginTop\":\"20px\",\"marginLeft\":\"20px\",\"display\":\"flex\",\"justify-content\":\"flex-start\",\"align-items\":\"center\"},on:{\"mouseenter\":function($event){return _vm.moveIn(index)}}},[_c('DatePicker',{staticClass:\"exportInput\",staticStyle:{\"width\":\"222px\"},attrs:{\"type\":\"date\",\"placeholder\":\"请选择日期\",\"disabled\":_vm.isGray,\"options\":_vm.noRepeatDateOption},on:{\"on-change\":_vm.noRepeatDateChange},model:{value:(item.date),callback:function ($$v) {_vm.$set(item, \"date\", $$v)},expression:\"item.date\"}}),_c('TimePicker',{staticClass:\"exportInput\",staticStyle:{\"width\":\"268px\",\"margin-left\":\"10px\",\"margin-right\":\"20px\"},attrs:{\"type\":\"timerange\",\"placeholder\":\"开始时间 至 结束时间\",\"disabled\":_vm.isGray},on:{\"on-change\":_vm.noRepeatTimeChange},model:{value:(item.timeData),callback:function ($$v) {_vm.$set(item, \"timeData\", $$v)},expression:\"item.timeData\"}}),_c('Icon',{style:({cursor:_vm.timeArr1.length===1||_vm.isGray?'not-allowed':'pointer',color:'#576F8C'}),attrs:{\"type\":\"ios-close-circle-outline\",\"size\":\"25\",\"disabled\":_vm.timeArr.length===1},on:{\"click\":function($event){return _vm.remove(index)}}})],1)}),0)]),_c('FormItem',[_c('div',{staticStyle:{\"display\":\"flex\",\"justify-content\":\"space-between\"}},[_c('div',[_c('label',{staticStyle:{\"vertical-align\":\"middle\",\"margin-right\":\"10px\",\"fontSize\":\"12px\",\"color\":\"#fff\"}},[_vm._v(\"是否开启自动录制计划:\")]),_c('i-switch',{attrs:{\"size\":\"small\",\"true-color\":\"#02e8ff\",\"false-color\":\"#3f7aa6\",\"disabled\":_vm.isGray},model:{value:(_vm.recodePlanData.openPlan),callback:function ($$v) {_vm.$set(_vm.recodePlanData, \"openPlan\", $$v)},expression:\"recodePlanData.openPlan\"}})],1),_c('div',[_c('label',{staticStyle:{\"vertical-align\":\"middle\",\"margin-right\":\"10px\",\"fontSize\":\"12px\",\"color\":\"#fff\"}},[_vm._v(\"是否将此计划列表应用到其他通道?\")]),_c('i-switch',{attrs:{\"size\":\"small\",\"true-color\":\"#02e8ff\",\"false-color\":\"#3f7aa6\",\"disabled\":_vm.isGray},model:{value:(_vm.isApply),callback:function ($$v) {_vm.isApply=$$v},expression:\"isApply\"}})],1)])])],1),_c('p',{attrs:{\"slot\":\"footer\"},slot:\"footer\"}),_c('div',{staticStyle:{\"text-align\":\"center\"}},[_c('Button',{staticStyle:{\"background\":\"rgba(13,67,111,1)\",\"color\":\"rgba(199,219,244,1)\",\"marginRight\":\"50px\"},on:{\"click\":function($event){return _vm.cancelRecodePlan('recodePlan')}}},[_vm._v(\"取消\")]),_c('Button',{attrs:{\"type\":\"primary\",\"disabled\":_vm.isGray},on:{\"click\":function($event){return _vm.confirmRecodePlan('recodePlan')}}},[_vm._v(\"确定\")])],1),_c('p')],1),_c('Modal',{attrs:{\"width\":\"640\",\"id\":\"recodePlanConfirmModal_1\",\"class-name\":\"recodePlanClassName1\",\"closable\":false,\"mask-closable\":false},model:{value:(_vm.recodePlanConfirmModal),callback:function ($$v) {_vm.recodePlanConfirmModal=$$v},expression:\"recodePlanConfirmModal\"}},[_c('Form',{ref:\"formInline\",staticStyle:{\"margin-top\":\"52px\",\"padding\":\"0 68px\"}},[_c('FormItem',[_c('span',{staticStyle:{\"fontSize\":\"16px\",\"font-weight\":\"400\",\"font-family\":\"Microsoft YaHei\",\"color\":\"rgba(254,254,254,1)\"}},[_vm._v(\"是否继续遵循录制计划执行?\")]),_c('label',{staticStyle:{\"margin-left\":\"45px\"}},[_c('RadioGroup',{staticStyle:{\"color\":\"#fff\"},model:{value:(_vm.isStart),callback:function ($$v) {_vm.isStart=$$v},expression:\"isStart\"}},[_c('Radio',{attrs:{\"label\":1}},[_vm._v(\"是\")]),_c('Radio',{attrs:{\"label\":0}},[_vm._v(\"否\")])],1)],1)]),_c('FormItem',{staticStyle:{\"marginTop\":\"42px\"}},[_c('div',{staticStyle:{\"color\":\"rgba(175,188,204,1)\",\"font-weight\":\"400\",\"font-size\":\"14px\",\"font-family\":\"Microsoft YaHei\"}},[_vm._v(\" 当您选择\\\"是\\\"，打开/关闭通道后，系统后台会打开/关闭当前录制，后续从录制计划中设置的下一时间段开始按各通道录制计划执行，且会根据录制计划自动打开/关闭通道。 \")])]),_c('FormItem',[_c('div',{staticStyle:{\"color\":\"rgba(175,188,204,1)\",\"font-weight\":\"400\",\"font-size\":\"14px\",\"font-family\":\"Microsoft YaHei\"}},[_vm._v(\" 当您选择\\\"否\\\"，录制计划失效，打开通道，系统后台将一直录制；关闭通道，系统后台将停止录制，可通过手动开启录制计划中的开关，重新激活录制计划。 \")])])],1),_c('p',{staticStyle:{\"display\":\"flex\",\"justify-content\":\"center\",\"margin-top\":\"38px\",\"margin-bottom\":\"20px\"},attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('Button',{staticStyle:{\"background\":\"rgba(13,67,111,1)\",\"color\":\"rgba(199,219,244,1)\"},on:{\"click\":_vm.startOrStopCancel}},[_vm._v(\"取消\")]),_c('Button',{staticStyle:{\"margin-left\":\"49px\"},attrs:{\"type\":\"primary\",\"disabled\":_vm.isGray},on:{\"click\":_vm.startOrStopConfirm}},[_vm._v(\"确定\")])],1)],1),_c('Modal',{attrs:{\"title\":\"添加分类\"},model:{value:(_vm.addClassModal),callback:function ($$v) {_vm.addClassModal=$$v},expression:\"addClassModal\"}},[_c('Input',{staticStyle:{\"width\":\"300px\"},attrs:{\"placeholder\":\"请输入分类名称\",\"maxlength\":20},model:{value:(_vm.addClassInput),callback:function ($$v) {_vm.addClassInput=$$v},expression:\"addClassInput\"}}),_c('span',{staticStyle:{\"color\":\"#fff\"}},[_vm._v(_vm._s(_vm.addClassInput.length)+\"/20\")]),_c('Button',{staticStyle:{\"margin-left\":\"8px\"},attrs:{\"type\":\"primary\"},on:{\"click\":_vm.confirmAdd}},[_vm._v(\"确定\")]),_c('Button',{staticStyle:{\"margin-left\":\"8px\",\"background\":\"rgba(13,67,111,1)\",\"color\":\"rgba(199,219,244,1)\"},on:{\"click\":_vm.confirmCancel}},[_vm._v(\"关闭\")]),_c('p',{attrs:{\"slot\":\"footer\"},slot:\"footer\"})],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div style=\"padding:10px\">\r\n    <Card>\r\n      <p style=\"text-align:right\">\r\n        <Button class=\"btn-right\" @click=\"newCreateChannel\" :disabled=\"isGray\" style=\"background:rgba(13,67,111,1);color:rgba(199,219,244,1);\">新建通道</Button>\r\n        <Button class=\"btn-right\" @click=\"allRecodePlan\" :disabled=\"isGray\" style=\"background:rgba(13,67,111,1);color:rgba(199,219,244,1);\">录制计划</Button>\r\n        <Button class=\"btn-right\" @click=\"startRecode\" :disabled=\"isGray\" style=\"background:rgba(13,67,111,1);color:rgba(199,219,244,1);\">开启通道</Button>\r\n        <Button class=\"btn-right\" style=\"color:#F56C6C;border:1px solid #F56C6C;background:rgba(13,67,111,1)\" @click=\"stopRecode\" :disabled=\"isGray\">关闭通道</Button>\r\n      </p>\r\n      <Table \r\n        :columns=\"columnsTab\" \r\n        :data=\"channelTableData\" \r\n        @on-selection-change=\"channelChange\" \r\n        style=\"marginTop:10px\" \r\n        :height=\"tabHeight\"\r\n      ></Table>\r\n      <Page \r\n        :total=\"totalCount\" \r\n        :current=\"pageNo\" \r\n        show-total \r\n        show-sizer \r\n        show-elevator \r\n        placement=\"top\" \r\n        style=\"text-align:right;margin:20px 0\" \r\n        @on-change=\"pageChange\" \r\n        @on-page-size-change=\"sizeChange\"\r\n      />\r\n    </Card>\r\n    <!--新建通道-->\r\n    <Modal\r\n        id=\"channelNew_tab\"\r\n        v-model=\"newCreateChannelModal\"\r\n        width=\"640\"\r\n        :mask-closable=\"false\"\r\n      >\r\n        <p slot=\"header\" style=\"color:#fff;text-align:left\">\r\n          新建通道\r\n        </p>\r\n        <Form ref=\"channelNew\" :model=\"channelData\" :label-width=\"150\" :rules=\"channelData.enterProtocol==='0'||channelData.enterProtocol==='1'?channelRules:channelData.enterProtocol==='2'?channelRules1:channelRules2\" :key=\"refresh\">\r\n          <FormItem prop=\"channelName\" label=\"通道名称：\">\r\n            <Input type=\"text\" v-model=\"channelData.channelName\" placeholder=\"请输入通道名称\" style=\"width:350px\" :maxlength=\"60\"></Input>\r\n            <span style=\"color:#fff;margin-left:19px\">{{channelData.channelName.length}}/60</span>\r\n          </FormItem>\r\n          <FormItem prop=\"channelType\" label=\"通道类型：\" style=\"margin-top:-11px\">\r\n            <RadioGroup v-model=\"channelData.channelType\">\r\n              <Radio v-for=\"(item,index) of channelTypeList\" :label=\"item.metaDataValue.toString()\" :key=\"index\">\r\n                <span style=\"color:rgba(255,255,255,1);fontSize:14px\">{{item.metaDataName}}</span> \r\n              </Radio>\r\n            </RadioGroup>\r\n          </FormItem>\r\n          <FormItem prop=\"channelClass\" label=\"通道分类：\" style=\"margin-top:-15px\">\r\n            <div style=\"display:flex\">\r\n              <RadioGroup v-model=\"channelData.channelClass\" style=\"max-height:80px;max-width:320px;overflow-y:auto\">\r\n                <Radio v-for=\"(item) in channelClassAll\" :label=\"item.categoryId\" :key=\"item.categoryId\"><span style=\"color:rgba(255,255,255,1);fontSize:14px\">{{item.categoryName}}</span></Radio>\r\n              </RadioGroup>\r\n              <Button @click=\"addClass\" style=\"background:rgba(13,67,111,1);color:rgba(199,219,244,1);height:26px;margin-left:10px\">添加分类</Button>\r\n            </div>\r\n          </FormItem>\r\n          <FormItem prop=\"enterProtocol\" label=\"输入源协议：\" style=\"margin-top:-10px\">\r\n            <Select v-model=\"channelData.enterProtocol\" @on-change='change1' style=\"width:200px\">\r\n              <Option v-for=\"item in enterProtocolList\" :value=\"String(item.metaDataValue)\" :key=\"item.metaDataValue\">{{ item.metaDataName }}</Option>\r\n            </Select>\r\n          </FormItem>\r\n          <div v-if=\"channelData.enterProtocol==='0'||channelData.enterProtocol==='1'\">\r\n            <FormItem prop=\"address\" label=\"源地址(主)：\" style=\"margin-top:-9px\">\r\n              <Input type=\"text\" v-model=\"channelData.address\" :maxlength=\"100\" placeholder=\"请输入\" style=\"width:350px\"></Input>\r\n              <span style=\"color:#AFBCCC;margin-left:19px\">{{channelData.address.length}}/100</span>\r\n            </FormItem>\r\n            <FormItem prop=\"address1\" label=\"源地址(备)：\" style=\"margin-top:-4px\">\r\n              <Input type=\"text\" v-model=\"channelData.address1\" :maxlength=\"100\" placeholder=\"请输入\" style=\"width:350px\"></Input>\r\n              <span style=\"color:#AFBCCC;margin-left:19px\">{{channelData.address1.length}}/100</span>\r\n            </FormItem>\r\n            <FormItem prop=\"timeShifting\" label=\"时移时长(分钟)：\" style=\"margin-top:-2px\">\r\n              <Input type=\"textarea\" v-model=\"channelData.timeShifting\" :placeholder=\"`直播过程中可以回看时移的最长时间,不填写系统默认4个小时,即240分钟,可输入的最大值${maxShiftAndBackTimeLenth}`\" style=\"width:350px\"></Input></br>\r\n            </FormItem>\r\n            <FormItem prop=\"storageTime\" label=\"可存储的时间(分钟)：\" style=\"margin-top:-1px\">\r\n              <Input type=\"textarea\" v-model=\"channelData.storageTime\" :placeholder=\"`录制的视频,后台最长可存储的时间,不填写系统默认7天,即10080分钟,可输入的最大值${maxShiftAndBackTimeLenth}`\"  style=\"width:350px\"></Input></br>\r\n            </FormItem>\r\n            <FormItem prop=\"playProtocol\" label=\"播放协议：\" style=\"margin-top:-2px\">\r\n              <Select v-model=\"channelData.playProtocol\" style=\"width:350px\">\r\n                <Option v-for=\"(item,index) in playProtocolList\" :value=\"item.metaDataValue.toString()\" :key=\"index\">{{ item.metaDataName}}</Option>\r\n              </Select> \r\n            </FormItem>\r\n          </div>\r\n          <div v-if=\"channelData.enterProtocol==='2'\">\r\n            <FormItem prop=\"userName\" label=\"用户名：\">\r\n              <Input type=\"text\" v-model=\"channelData.userName\" :maxlength=\"100\" placeholder=\"请输入用户名\"  style=\"width:350px\"></Input>\r\n            </FormItem>\r\n              <FormItem prop=\"passWord\" label=\"密码：\">\r\n              <Input type=\"text\" v-model=\"channelData.passWord\" :maxlength=\"100\" placeholder=\"请输入用户名\"  style=\"width:350px\"></Input>\r\n            </FormItem>\r\n          </div>\r\n          <div v-if=\"channelData.enterProtocol==='3'\">\r\n            <FormItem prop=\"localSip\" label=\"本地SIP端口：\">\r\n              <Input type=\"text\" v-model=\"channelData.localSip\" placeholder=\"请输入用户名\"  style=\"width:350px\"></Input>\r\n            </FormItem>\r\n            <FormItem prop=\"sipServerId\" label=\"SIP服务器ID：\">\r\n              <Input type=\"text\" v-model=\"channelData.sipServerId\" placeholder=\"请输入用户名\"  style=\"width:350px\"></Input>\r\n            </FormItem>\r\n            <FormItem prop=\"sipServerArea\" label=\"SIP服务器域：\">\r\n              <Input type=\"text\" v-model=\"channelData.sipServerArea\"  placeholder=\"请输入用户名\"  style=\"width:350px\"></Input>\r\n            </FormItem>\r\n            <FormItem prop=\"sipServerAddress\" label=\"SIP服务器地址：\">\r\n              <Input type=\"text\" v-model=\"channelData.sipServerAddress\"  placeholder=\"请输入用户名\"  style=\"width:350px\"></Input>\r\n            </FormItem>\r\n            <FormItem prop=\"sipServerPort\" label=\"SIP服务器端口：\">\r\n              <Input type=\"text\" v-model=\"channelData.sipServerPort\"  placeholder=\"请输入用户名\"  style=\"width:350px\"></Input>\r\n            </FormItem>\r\n            <FormItem prop=\"sipUserConfirmId\" label=\"SIP用户认证ID：\">\r\n              <Input type=\"text\" v-model=\"channelData.sipUserConfirmId\"  placeholder=\"请输入用户名\"  style=\"width:350px\"></Input>\r\n            </FormItem>\r\n            <FormItem prop=\"sipPassWord\" label=\"密码：\">\r\n              <Input type=\"text\" v-model=\"channelData.sipPassWord\"  placeholder=\"请输入用户名\"  style=\"width:350px\"></Input>\r\n            </FormItem>\r\n            <FormItem prop=\"registerActiveTime\" label=\"注册有效期(秒)：\">\r\n              <Input type=\"text\" v-model=\"channelData.registerActiveTime\"  placeholder=\"请输入用户名\"  style=\"width:350px\"></Input>\r\n            </FormItem>\r\n            <FormItem prop=\"heartbeatPeriod\" label=\"心跳周期(秒)：\">\r\n              <Input type=\"text\" v-model=\"channelData.heartbeatPeriod\"  placeholder=\"请输入用户名\"  style=\"width:350px\"></Input>\r\n            </FormItem>\r\n          </div>\r\n          <div  v-if=\"channelData.enterProtocol==='4'\">\r\n            <FormItem prop=\"gkIsStart\" label=\"启用GK：\">\r\n              <Select v-model=\"channelData.gkIsStart\" style=\"width:200px\">\r\n                <Option value=\"0\">启用</Option>\r\n                <Option value=\"1\">禁用</Option>\r\n              </Select> \r\n            </FormItem>\r\n            <FormItem prop=\"gkAddress\" label=\"GK地址：\">\r\n              <Input type=\"text\" v-model=\"channelData.gkAddress\"    style=\"width:350px\"></Input>\r\n            </FormItem>\r\n            <FormItem prop=\"E164\" label=\"E.164：\">\r\n              <Input type=\"text\" v-model=\"channelData.E164\"  placeholder=\"请输入用户名\"  style=\"width:350px\"></Input>\r\n            </FormItem>\r\n            <FormItem prop=\"H3231D\" label=\"H.3231D：\">\r\n              <Input type=\"text\" v-model=\"channelData.H3231D\"  placeholder=\"请输入用户名\"  style=\"width:350px\"></Input>\r\n            </FormItem>\r\n            <FormItem prop=\"gkUserName\" label=\"用户名：\">\r\n              <Input type=\"text\" v-model=\"channelData.gkUserName\"  placeholder=\"请输入用户名\"  style=\"width:350px\"></Input>\r\n            </FormItem>\r\n            <FormItem prop=\"gkPassword\" label=\"密码：\">\r\n              <Input type=\"text\" v-model=\"channelData.gkPassword\"  placeholder=\"请输入用户名\"  style=\"width:350px\"></Input>\r\n            </FormItem>\r\n          </div>\r\n          <div  v-if=\"channelData.enterProtocol==='5'\">\r\n            <FormItem prop=\"internetPort\" label=\"网络出口：\">\r\n              <RadioGroup v-model=\"channelData.internetPort\">\r\n                <Radio label=\"LAN\">\r\n                    <span>LAN</span>\r\n                </Radio>\r\n                <Radio label=\"WAN\">\r\n                  <span>WAN</span>\r\n                </Radio>\r\n              </RadioGroup>\r\n            </FormItem>\r\n            <FormItem prop=\"transferType\" label=\"传输类型：\">\r\n              <Select v-model=\"channelData.transferType\" style=\"width:200px\">\r\n                <Option value=\"UDP\">UDP</Option>\r\n              </Select> \r\n            </FormItem>\r\n            <FormItem prop=\"registerServer\" label=\"注册服务器：\">\r\n              <Select v-model=\"channelData.registerServer\" style=\"width:200px\">\r\n                <Option value=\"0\">启用</Option>\r\n                <Option value=\"1\">禁用</Option>\r\n              </Select> \r\n            </FormItem>\r\n            <FormItem prop=\"domainAddress\" label=\"域名地址：\">\r\n              <Input type=\"text\" v-model=\"channelData.domainAddress\"  placeholder=\"请输入域名地址\" style=\"width:300px\"></Input>\r\n            </FormItem>\r\n            <FormItem prop=\"serverAddress\" label=\"服务器地址：\">\r\n              <Input type=\"text\" v-model=\"channelData.serverAddress\"  placeholder=\"请输入服务器地址\" style=\"width:300px\"></Input>\r\n            </FormItem>\r\n            <FormItem prop=\"interUserName\" label=\"用户名：\">\r\n              <Input type=\"text\" v-model=\"channelData.interUserName\"  placeholder=\"请输入用户名\" style=\"width:300px\"></Input>\r\n            </FormItem>\r\n            <FormItem prop=\"interPassword\" label=\"密码：\">\r\n              <Input type=\"text\" v-model=\"channelData.interPassword\"  placeholder=\"请输入密码\" style=\"width:300px\"></Input>\r\n            </FormItem>\r\n          </div>\r\n       </Form>\r\n       <p slot=\"footer\">\r\n          <div style=\"text-align:center;margin-top:-5px\">\r\n            <Button style=\"background:rgba(13,67,111,1);color:rgba(199,219,244,1);margin-right:50px\" @click=\"cancelCreateChannel\">取消</Button>\r\n            <Button type=\"primary\" :loading=\"channelNewLoading\" @click=\"confirmCreateChannel('channelNew')\">确定</Button>\r\n          </div>\r\n       </p>\r\n    </Modal>\r\n\r\n    <!--修改通道-->\r\n     <Modal\r\n        v-model=\"editChannelModal\"\r\n        :mask-closable=\"false\"\r\n        width=\"600\"\r\n        id=\"channelEdit_tab\"\r\n       >\r\n      <p slot=\"header\">\r\n        修改通道\r\n      </p>\r\n      <Form ref=\"channelEdit\" :model=\"channelData\" :label-width=\"150\" :rules=\"channelRules\">\r\n        <FormItem prop=\"channelName\" label=\"通道名称：\">\r\n            <Input type=\"text\" v-model=\"channelData.channelName\" placeholder=\"请输入通道名称\" style=\"width:350px\" :disabled=\"isGray\" :maxlength=\"60\"></Input>\r\n            <span style=\"color:#fff\">{{channelData.channelName.length}}/60</span>\r\n        </FormItem>\r\n          <FormItem prop=\"address\" label=\"源地址(主)：\">\r\n            <Input type=\"text\" v-model=\"channelData.address\" :maxlength=\"100\" placeholder=\"请输入地址\" style=\"width:350px\" :disabled=\"isGray\"></Input>\r\n            <span style=\"color:#fff\">{{channelData.address.length}}/100</span>\r\n        </FormItem>\r\n          <FormItem prop=\"address1\" label=\"源地址(备)：\">\r\n            <Input type=\"text\" v-model=\"channelData.address1\" :maxlength=\"100\" placeholder=\"请输入地址\" style=\"width:350px\" :disabled=\"isGray\"></Input>\r\n            <span style=\"color:#fff\">{{channelData.address1.length}}/100</span>\r\n        </FormItem>\r\n          <FormItem prop=\"timeShifting\" label=\"时移时长(分钟)：\">\r\n          <Input type=\"textarea\" v-model=\"channelData.timeShifting\" :placeholder=\"`直播过程中可以回看时移的最长时间,不填写系统默认4个小时,即240分钟,可输入的最大值${maxShiftAndBackTimeLenth}`\" style=\"width:350px\" :disabled=\"isGray\"></Input></br>\r\n        </FormItem>\r\n          <FormItem prop=\"storageTime\" label=\"可存储的时间(分钟)：\">\r\n          <Input type=\"textarea\" v-model=\"channelData.storageTime\" :placeholder=\"`录制的视频,后台最长可存储的时间,不填写系统默认7天,即10080分钟,可输入的最大值${maxShiftAndBackTimeLenth}`\" style=\"width:350px\" :disabled=\"isGray\"></Input></br>\r\n        </FormItem>\r\n        <FormItem prop=\"playProtocol\" label=\"播放协议：\">\r\n          <Select v-model=\"channelData.playProtocol\" style=\"width:350px\" :disabled=\"isGray\">\r\n            <Option v-for=\"(item,index) in playProtocolList\" :value=\"item.metaDataValue.toString()\" :key=\"index\">{{ item.metaDataName }}</Option>\r\n          </Select> \r\n        </FormItem>\r\n      </Form>\r\n       <p slot=\"footer\">\r\n          <div style=\"text-align:center\">\r\n            <Button style=\"background:rgba(13,67,111,1);color:rgba(199,219,244,1);margin-right:50px\" @click=\"cancelEditChannel\">取消</Button>\r\n            <Button type=\"primary\" @click=\"confirmEditChannel('channelEdit')\" :loading=\"channelEditLoading\" :disabled=\"isGray\">确定</Button>\r\n          </div>\r\n       </p>\r\n    </Modal>\r\n     <!--录制计划-->\r\n    <Modal\r\n        v-model=\"recodePlanModal\"\r\n        title=\"录制计划\"\r\n        width=\"640\"\r\n        id=\"recodePlanModal\"\r\n      >\r\n        <Form ref=\"recodePlan\" style=\"margin:10px 20px\">\r\n          <FormItem>\r\n            <div style=\"display:flex;justify-content:space-between\">\r\n              <div>\r\n                <RadioGroup v-model=\"recodePlanData.repeat\" >\r\n                  <Radio :label=\"0\" :disabled=\"isGray\">\r\n                    <span style=\"color:#fff\">重复</span>\r\n                  </Radio>\r\n                  <Radio :label=\"1\" :disabled=\"isGray\" style=\"margin-left:20px\">\r\n                    <span style=\"color:#fff;\">不重复</span>\r\n                  </Radio>\r\n                </RadioGroup>\r\n              </div>\r\n              <Button style=\"background:rgba(13,67,111,1);color:rgba(199,219,244,1);\" :disabled=\"isGray\" @click=\"add\">新建</Button>\r\n            </div>\r\n          </FormItem>\r\n          <FormItem v-show=\"recodePlanData.repeat===0\" style=\"margin-top:-8px\">\r\n            <CheckboxGroup v-model=\"recodePlanData.weekArr\">\r\n              <Checkbox :label=\"1\" :disabled=\"isGray\" style=\"color:#fff\">周一</Checkbox>\r\n              <Checkbox :label=\"2\" :disabled=\"isGray\" style=\"color:#fff;margin-left:20px\">周二</Checkbox>\r\n              <Checkbox :label=\"3\" :disabled=\"isGray\" style=\"color:#fff;margin-left:20px\">周三</Checkbox>\r\n              <Checkbox :label=\"4\" :disabled=\"isGray\" style=\"color:#fff;;margin-left:20px\">周四</Checkbox>\r\n              <Checkbox :label=\"5\" :disabled=\"isGray\" style=\"color:#fff;;margin-left:20px\">周五</Checkbox>\r\n              <Checkbox :label=\"6\" :disabled=\"isGray\" style=\"color:#fff;;margin-left:20px\">周六</Checkbox>\r\n              <Checkbox :label=\"7\" :disabled=\"isGray\" style=\"color:#fff;;margin-left:20px\">周日</Checkbox>\r\n            </CheckboxGroup>\r\n          </FormItem>\r\n          <FormItem style=\"margin-top:-10px\">\r\n            <div style=\"height:228px;width:600px;overflow-y:auto;border:1px solid rgba(87,111,140,1);paddingBottom:20px;background:#163C69\" v-if=\"recodePlanData.repeat===0\">\r\n              <div v-for=\"(item,index) in timeArr\" :key=\"index\" style=\"marginTop:20px;display:flex;justify-content:flex-start;align-items:center;marginLeft:20px\" @mouseenter=\"moveIn(index)\">\r\n                <TimePicker type=\"timerange\" placeholder=\"开始时间 至 结束时间\" style=\"width: 268px;margin-right:21px\" class=\"exportInput\" :disabled=\"isGray\" @on-change=\"recodeTimeChange\" v-model=\"item.timeData\"></TimePicker>\r\n                <Icon type=\"ios-close-circle-outline\" size=\"25\" :disabled=\"timeArr.length===1\" :style=\"{cursor:timeArr.length===1||isGray?'not-allowed':'pointer',color:'#576F8C'}\"  @click=\"remove(index)\"/>\r\n              </div>\r\n            </div>\r\n            <div style=\"height:270px;width:600px;overflow-y:auto;border:1px solid rgba(87,111,140,1);padding-bottom:20px;background:#163C69\" v-else>\r\n              <div v-for=\"(item,index) in timeArr1\" :key=\"index\" style=\"marginTop:20px;marginLeft:20px;display:flex;justify-content:flex-start;align-items:center\"   @mouseenter=\"moveIn(index)\">\r\n                <DatePicker type=\"date\" placeholder=\"请选择日期\" style=\"width:222px\" class=\"exportInput\"  :disabled=\"isGray\" v-model=\"item.date\" :options=\"noRepeatDateOption\" @on-change=\"noRepeatDateChange\"></DatePicker>\r\n                <TimePicker type=\"timerange\" placeholder=\"开始时间 至 结束时间\" class=\"exportInput\" style=\"width: 268px;margin-left:10px;margin-right:20px\" :disabled=\"isGray\"  v-model=\"item.timeData\" @on-change=\"noRepeatTimeChange\"></TimePicker> \r\n                <Icon type=\"ios-close-circle-outline\" size=\"25\" :disabled=\"timeArr.length===1\" :style=\"{cursor:timeArr1.length===1||isGray?'not-allowed':'pointer',color:'#576F8C'}\"  @click=\"remove(index)\"/>\r\n              </div>\r\n            </div>\r\n          </FormItem>\r\n          <FormItem>\r\n            <div style=\"display:flex;justify-content:space-between\">\r\n              <div>\r\n                <label style=\"vertical-align: middle;margin-right:10px;fontSize:12px;color:#fff\">是否开启自动录制计划:</label>\r\n                <i-switch v-model=\"recodePlanData.openPlan\" size=\"small\" true-color=\"#02e8ff\" false-color=\"#3f7aa6\" :disabled=\"isGray\"/>\r\n              </div>\r\n              <div>\r\n                <label style=\"vertical-align:middle;margin-right:10px;fontSize:12px;color:#fff\">是否将此计划列表应用到其他通道?</label>\r\n                <i-switch v-model=\"isApply\" size=\"small\" true-color=\"#02e8ff\" false-color=\"#3f7aa6\" :disabled=\"isGray\"/>\r\n              </div>\r\n            </div>\r\n          </FormItem>\r\n        </Form>\r\n        <p slot=\"footer\">\r\n          <div style=\"text-align:center\">\r\n            <Button style=\"background:rgba(13,67,111,1);color:rgba(199,219,244,1);marginRight:50px\" @click=\"cancelRecodePlan('recodePlan')\">取消</Button>\r\n            <Button type=\"primary\" @click=\"confirmRecodePlan('recodePlan')\" :disabled=\"isGray\">确定</Button>\r\n          </div>\r\n        </p>\r\n    </Modal>\r\n     <!--录制计划确认框-->\r\n    <Modal\r\n        v-model=\"recodePlanConfirmModal\"\r\n        width=\"640\"\r\n        id=\"recodePlanConfirmModal_1\"\r\n        class-name=\"recodePlanClassName1\"\r\n        :closable=\"false\"\r\n        :mask-closable=\"false\"\r\n      >\r\n      <Form ref=\"formInline\" style=\"margin-top:52px;padding:0 68px\">\r\n        <FormItem>\r\n          <span style=\"fontSize:16px;font-weight:400;font-family:Microsoft YaHei;color:rgba(254,254,254,1)\">是否继续遵循录制计划执行?</span>\r\n          <label style=\"margin-left:45px\">\r\n            <RadioGroup v-model=\"isStart\" style=\"color:#fff\">\r\n              <Radio :label=\"1\">是</Radio>\r\n              <Radio :label=\"0\">否</Radio>\r\n            </RadioGroup>\r\n          </label> \r\n        </FormItem>\r\n        <FormItem style=\"marginTop:42px\">\r\n          <div style=\"color:rgba(175,188,204,1);font-weight:400;font-size:14px;font-family:Microsoft YaHei;\">\r\n            当您选择\"是\"，打开/关闭通道后，系统后台会打开/关闭当前录制，后续从录制计划中设置的下一时间段开始按各通道录制计划执行，且会根据录制计划自动打开/关闭通道。\r\n          </div>\r\n        </FormItem>\r\n        <FormItem >\r\n          <div style=\"color:rgba(175,188,204,1);font-weight:400;font-size:14px;font-family:Microsoft YaHei;\">\r\n            当您选择\"否\"，录制计划失效，打开通道，系统后台将一直录制；关闭通道，系统后台将停止录制，可通过手动开启录制计划中的开关，重新激活录制计划。\r\n          </div>\r\n        </FormItem>\r\n      </Form>\r\n      <p slot=\"footer\" style=\"display:flex;justify-content:center;margin-top:38px;margin-bottom:20px\">\r\n        <Button @click=\"startOrStopCancel\" style=\"background:rgba(13,67,111,1);color:rgba(199,219,244,1);\">取消</Button>\r\n        <Button type=\"primary\" @click=\"startOrStopConfirm\" :disabled=\"isGray\" style=\"margin-left:49px\">确定</Button>\r\n      </p>\r\n    </Modal>\r\n    <!--添加分类-->\r\n    <Modal\r\n        v-model=\"addClassModal\"\r\n        title=\"添加分类\"\r\n      >\r\n      <Input v-model=\"addClassInput\" placeholder=\"请输入分类名称\" style=\"width: 300px\" :maxlength=\"20\"/>\r\n      <span style=\"color:#fff\">{{addClassInput.length}}/20</span>\r\n      <Button type=\"primary\" @click=\"confirmAdd\" style=\"margin-left:8px\">确定</Button>\r\n      <Button  @click=\"confirmCancel\" style=\"margin-left:8px;background:rgba(13,67,111,1);color:rgba(199,219,244,1)\">关闭</Button>\r\n      <p slot=\"footer\"></p>\r\n    </Modal>\r\n  </div>\r\n</template>\r\n<script>\r\n import api from '@/api/api'\r\n  export default {\r\n    data(){\r\n      const validateTimeShifting=(rule, value, callback) => {\r\n         let reg = /^[1-9]\\d*$/\r\n            if (!value) {\r\n                callback()\r\n            } else {\r\n                if(reg.test(value)){\r\n                  callback()\r\n                }else{\r\n                  callback(new Error('请输入有效时移时长(正整数)'))\r\n                }\r\n            }\r\n      }\r\n       const validateStorageTime=(rule, value, callback) => {\r\n         let reg = /^[1-9]\\d*$/\r\n          if (!value) {\r\n              callback()\r\n          } else {\r\n              if(reg.test(value)){\r\n                callback()\r\n              }else{\r\n                callback(new Error('请输入有效可存储时长(正整数)'))\r\n              }\r\n          }\r\n      }\r\n      const validateChannelName=(rule, value, callback) => {\r\n         let reg = /^[a-zA-Z0-9_\\u4e00-\\u9fa5]+$/\r\n          if(!reg.test(value)){\r\n            callback(new Error(\"请输入中文、数字、字母、下划线\"))\r\n          }else{\r\n            callback()\r\n          }\r\n      }\r\n      /**时移校验 */\r\n    const validatemaxShift = (rule, value, callback) => {\r\n      let maxShiftAndBackTimeLenth = this.maxShiftAndBackTimeLenth\r\n      if(!value){\r\n        callback()\r\n      }else{\r\n        if(maxShiftAndBackTimeLenth<value){\r\n          callback(new Error(`可输入最大值是${maxShiftAndBackTimeLenth}`))\r\n        }else{\r\n          callback()\r\n        }\r\n      }\r\n    }\r\n     /**存储校验 */\r\n    const validatemaxStorage = (rule, value, callback) => {\r\n      let maxShiftAndBackTimeLenth = this.maxShiftAndBackTimeLenth\r\n      if(!value){\r\n        callback()\r\n      }else{\r\n        if(maxShiftAndBackTimeLenth<value){\r\n          callback(new Error(`可输入最大值是${maxShiftAndBackTimeLenth}`))\r\n        }else{\r\n          callback()\r\n        }\r\n      }\r\n    }\r\n      return {\r\n          channelNewLoading:false,//新建通道确定按钮\r\n          channelEditLoading:false,\r\n          refresh:0,\r\n          timeArr:[{\r\n            timeData:[\"\", \"\"],\r\n          }],\r\n          timeArr1:[{\r\n            date:'',\r\n            showDate:[\"\",\"\"],\r\n            timeData:[\"\", \"\"],\r\n          }],\r\n          isApply:true,\r\n          channelData:{\r\n            channelName:'',//通道名称\r\n            channelType:'0',\r\n            enterProtocol:'0',//输入源协议\r\n            address:'',\r\n            address1:'',\r\n            timeShifting:'',//时移时长\r\n            storageTime:'',//可存储时长\r\n            playProtocol:'',\r\n            channelClass:'',\r\n            userName:'',\r\n            passWord:'',\r\n            localSip:'',\r\n            sipServerId:'',\r\n            sipServerArea:'',\r\n            sipServerAddress:'',\r\n            sipServerPort:'',\r\n            sipUserConfirmId:'',\r\n            sipPassWord:'',\r\n            heartbeatPeriod:'',\r\n            gkIsStart:'0',\r\n            gkAddress:'',\r\n            E164:'',\r\n            H3231D:'',\r\n            gkUserName:'',\r\n            gkPassword:'',\r\n            internetPort:'LAN',\r\n            transferType:'UDP',\r\n            registerServer:'0',\r\n            domainAddress:'',\r\n            serverAddress:'',\r\n            interUserName:'',\r\n            interPassword:'', \r\n          },\r\n          channelId:'',\r\n          //----------------新建通道验证规则\r\n          channelRules:{\r\n              channelName: [\r\n                { required:true,message: '请输入通道名称', trigger: 'blur' },\r\n                {validator: validateChannelName, trigger: 'blur'}\r\n              ],\r\n              channelType: [\r\n                { required: true, message: '请选择通道类型', trigger: 'blur' }\r\n              ],\r\n              enterProtocol:[\r\n                { required: true, message: '请选择源协议', trigger: 'change' }\r\n              ],\r\n              address:[\r\n                { required: true, message: '请输入源地址(主)', trigger: 'blur' }\r\n              ],\r\n              address1:[\r\n                { required: true, message: '请输入源地址(备)', trigger: 'blur' }\r\n              ],\r\n              playProtocol:[\r\n                { required: true, message: '请选择播放协议', trigger: 'change' }\r\n              ],\r\n              timeShifting:[\r\n                {validator: validateTimeShifting, trigger: 'blur' },\r\n                {validator: validatemaxShift, trigger: 'blur' }\r\n              ],\r\n              storageTime:[\r\n                {validator: validateStorageTime, trigger: 'blur' },\r\n                {validator:validatemaxStorage,trigger: 'blur'}\r\n              ]\r\n          },\r\n           channelRules1:{\r\n              channelName: [\r\n                { required:true,message: '请输入通道名称', trigger: 'blur' }\r\n              ],\r\n              channelType: [\r\n                { required: true, message: '请选择通道类型', trigger: 'blur' }\r\n              ],\r\n              enterProtocol:[\r\n                { required: true, message: '请选择源协议', trigger: 'change' }\r\n              ],\r\n              address:[\r\n                { required: true, message: '请输入源地址', trigger: 'change' }\r\n              ],\r\n              playProtocol:[\r\n                { required: true, message: '请选择播放协议', trigger: 'change' }\r\n              ],\r\n              userName:[\r\n                { required: true, message: '请输入用户名称', trigger: 'change' }\r\n              ],\r\n               passWord:[\r\n                { required: true, message: '请输入密码', trigger: 'change' }\r\n              ]\r\n          },\r\n           channelRules2:{\r\n              channelName: [\r\n                { required:true,message: '请输入通道名称', trigger: 'blur' }\r\n              ],\r\n              channelType: [\r\n                { required: true, message: '请选择通道类型', trigger: 'blur' }\r\n              ],\r\n              enterProtocol:[\r\n                { required: true, message: '请选择源协议', trigger: 'change' }\r\n              ],\r\n          },\r\n          channelClassAll:[],\r\n          channelTypeList:[],\r\n          enterProtocolList:[\r\n        \r\n          ],\r\n          playProtocolList:[],\r\n          newCreateChannelModal:false,//新建通道弹窗\r\n          editChannelModal:false,//编辑通道弹窗\r\n          addClassModal:false,//添加分类弹窗\r\n          addClassInput:'',\r\n          //----------------------页面tab\r\n          columnsTab:[\r\n           {\r\n            type: 'selection',\r\n            width: 60,\r\n            align: 'center'\r\n          },\r\n          {\r\n            title: '通道名称',\r\n            key: 'channelName',\r\n            minWidth:150,\r\n          },\r\n          {\r\n            title: '类型',\r\n            minWidth:120,\r\n            key: 'channelType1'\r\n          },\r\n          {\r\n            title: '输入源协议',\r\n            minWidth:120,\r\n            key: 'sourceType1',\r\n          },\r\n           {\r\n            title: '通道ID',\r\n            key: 'id',\r\n            minWidth:110,\r\n          },\r\n          {\r\n            title: '操作',\r\n            key:'handle',\r\n            width: 265,\r\n            align: 'center',\r\n            fixed:'right',\r\n            render: (h, params) => {\r\n                return h('div',{\r\n                 style:{\r\n                   fontSize:'14px'\r\n                 }\r\n                },[\r\n                    h('i-switch', {\r\n                        props: {\r\n                          size:'small',\r\n                          value:params.row.isStartRecord===0?true:false,//0关闭 1开启\r\n                          disabled:this.isGray,\r\n                          'true-color':'#02E8FF',\r\n                          'false-color':'#3f7aa6'\r\n                        },\r\n                        style:{\r\n                           marginRight:'14px'\r\n                        },\r\n                         on: {\r\n                          'on-change': (flag) => {\r\n                            this.recodePlanConfirmModal =true\r\n                            this.oneOrBatchRecode = 0\r\n                            this.isStartFlag = flag\r\n                            this.row = params.row\r\n                          }\r\n                        }\r\n                    }),\r\n                     h('span', {\r\n                        props: {\r\n                            type: 'text',\r\n                        },\r\n                        style:{\r\n                           marginRight:'9px',\r\n                           color:'#02E8FF',\r\n                           cursor:'pointer',\r\n                           fontSize:'14px'\r\n                        },\r\n                        on: {\r\n                          click: () => {\r\n                            this.showEditChannel(params.row.channelId)\r\n                          }\r\n                        }\r\n\r\n                    },'修改基本信息'),\r\n                     h('span', {\r\n                        style:{\r\n                           marginRight:'10px',\r\n                           color:'#02E8FF',\r\n                           cursor:'pointer',\r\n                           fontSize:'14px'\r\n                        },\r\n                        on: {\r\n                          click: () => {\r\n                            this.searchRecordPlanList(params.row)\r\n                          }\r\n                        }\r\n                    },'录制计划'),\r\n                    h('Poptip',{\r\n                      props:{\r\n                        confirm: true,\r\n                        title:'您确定要删除该通道吗?',\r\n                        transfer: true,\r\n                        width: 100,\r\n                        wordWrap: true\r\n                      },\r\n                      on: {\r\n                        'on-ok': () => {\r\n                          if(!this.isGray){\r\n                            this.deleteChannel(params.row.channelId)\r\n                          }\r\n                        },\r\n                        'on-cancel':()=>{\r\n             \r\n                        }\r\n                      }\r\n                    },[\r\n                        h('span',{\r\n                          style:{\r\n                            cursor: 'pointer',\r\n                            color:'#02E8FF',\r\n                            display:this.isGray?'none':''\r\n                          },\r\n                      },'删除'),\r\n                    ]),\r\n                    h('span',{\r\n                       style:{\r\n                            cursor: 'not-allowed',\r\n                            color:'gray',\r\n                            display:this.isGray?'':'none'\r\n                          },\r\n                    },'删除') \r\n              ]);\r\n            }\r\n          }\r\n        ],\r\n        channelTableData:[],\r\n        isStart:1,\r\n        isStartFlag:true,\r\n        row:{},\r\n        //-------------------------录制计划\r\n        recodeParamData:{},\r\n        recodePlanConfirmModal:false,\r\n        oneOrBatchRecode:0,//单个还是批量录制0 单个 1 批量\r\n        recodePlanModal:false,\r\n        activeIndex:0,\r\n        recodePlanData:{\r\n           openPlan:false,\r\n           repeat:0,\r\n           weekArr:[]\r\n        },\r\n        //========================分页\r\n        activeName:'',\r\n        totalCount:0,\r\n        pageNo:1,\r\n        pageSize:10,\r\n        selectArr:[],\r\n        isGray:false,\r\n        recodeFlag:0,//录制计划标识0单个 1批量\r\n        noRepeatDateOption: {\r\n          disabledDate (date) {\r\n            return date && date.valueOf() < Date.now() - 86400000;\r\n          }\r\n        },\r\n        maxShiftAndBackTimeLenth:0,\r\n\r\n        base:1,   // 分辨率自适应 计算后的倍数\r\n        tabHeight:0,  // 分辨率自适应调整：表格的高度\r\n      }\r\n    },\r\n    created(){\r\n      this.isGray = ((JSON.parse(localStorage.getItem('loginRes'))).user.operationPermissions) == 1 ? false:true; //是否需要置灰（无权限操作需要）\r\n      let selectAllData = JSON.parse(localStorage.getItem('selectAllData'))\r\n      //输入协议\r\n      this.enterProtocolList = selectAllData[2].metaDictList\r\n      //通道类型\r\n      this.channelTypeList = selectAllData[6].metaDictList\r\n      //播放协议\r\n      this.playProtocolList = selectAllData[3].metaDictList\r\n      this.channelData.playProtocol = this.playProtocolList[0].metaDataValue.toString()\r\n      console.log('哈哈哈',selectAllData)\r\n      //查询分类\r\n      this.searchRecordCategoryList()\r\n      this.getPublicConfig()\r\n    },\r\n    mounted(){\r\n      this.autoFix();\r\n    },\r\n    methods:{\r\n      /** 自适应 */\r\n      autoFix(){\r\n        let vm = this;\r\n        this.getDom();\r\n        window.onresize = function(){\r\n          vm.getDom();\r\n        }\r\n      },\r\n\r\n      /** 获取窗口的宽和高 */\r\n      getDom(){\r\n        let width = window.innerWidth;\r\n        let height = window.innerHeight;\r\n        this.base = (width-160)/(1024-160);\r\n        this.tabHeight = height - 350;  // 表格页面有“过滤搜索条件”card，表格上方有Button，则采用该方式计算。\r\n        // this.tabHeight = height - 325;  // 表格页面有“过滤搜索条件”card，表格上方无Button，则采用该方式计算。\r\n        // this.tabHeight = height - 275;  // 表格页面无 “过滤搜索条件”card,但表格上方有Button，则采用该方式计算。\r\n        // this.tabHeight = height - 250;   // 表格页面无 “过滤搜索条件”card,表格上方无Button，则采用该方式计算。\r\n        this.tabToParent();\r\n      },\r\n\r\n      /** 子组件向父组件传值：将子组件的base传给父组件 */\r\n      tabToParent(){\r\n        this.$emit('tabEvent', this.base);\r\n      },\r\n\r\n      /**获取公共配置 */\r\n      getPublicConfig(){\r\n        api.getPublicConfig({}).then(res=>{\r\n          this.maxShiftAndBackTimeLenth = res.result.maxShiftAndBackTimeLenth\r\n        })\r\n      },\r\n      init(){\r\n        this.columnsTab.forEach(item=>{\r\n          if(item.key==\"handle\"){\r\n            item.render = (h, params) => {\r\n                return h('div',{\r\n                 style:{\r\n                   fontSize:'14px'\r\n                 }\r\n                },[\r\n                    h('i-switch', {\r\n                        props: {\r\n                          size:'small',\r\n                          value:params.row.isStartRecord===0?true:false,//0关闭 1开启\r\n                          disabled:this.isGray,\r\n                          'true-color':'#02E8FF',\r\n                          'false-color':'#3f7aa6'\r\n                        },\r\n                        style:{\r\n                           marginRight:'14px'\r\n                        },\r\n                         on: {\r\n                          'on-change': (flag) => {\r\n                            this.recodePlanConfirmModal =true\r\n                            this.oneOrBatchRecode = 0\r\n                            this.isStartFlag = flag\r\n                            this.row = params.row\r\n                          }\r\n                        }\r\n                    }),\r\n                     h('span', {\r\n                        props: {\r\n                            type: 'text',\r\n                        },\r\n                        style:{\r\n                           marginRight:'9px',\r\n                           color:'#02E8FF',\r\n                           cursor:'pointer',\r\n                           fontSize:'14px'\r\n                        },\r\n                        on: {\r\n                          click: () => {\r\n                            this.showEditChannel(params.row.channelId)\r\n                          }\r\n                        }\r\n\r\n                    },'修改基本信息'),\r\n                     h('span', {\r\n                        style:{\r\n                           marginRight:'10px',\r\n                           color:'#02E8FF',\r\n                           cursor:'pointer',\r\n                           fontSize:'14px'\r\n                        },\r\n                        on: {\r\n                          click: () => {\r\n                            this.searchRecordPlanList(params.row)\r\n                          }\r\n                        }\r\n                    },'录制计划'),\r\n                    h('Poptip',{\r\n                      props:{\r\n                        confirm: true,\r\n                        title:'您确定要删除该通道吗?',\r\n                        transfer: true,\r\n                        width: 100,\r\n                        wordWrap: true\r\n                      },\r\n                      on: {\r\n                        'on-ok': () => {\r\n                          if(!this.isGray){\r\n                            this.deleteChannel(params.row.channelId)\r\n                          }\r\n                        },\r\n                        'on-cancel':()=>{\r\n             \r\n                        }\r\n                      }\r\n                    },[\r\n                        h('span',{\r\n                          style:{\r\n                            cursor: 'pointer',\r\n                            color:'#02E8FF',\r\n                            display:this.isGray?'none':''\r\n                          },\r\n                      },'删除'),\r\n                    ]),\r\n                    h('span',{\r\n                       style:{\r\n                            cursor: 'not-allowed',\r\n                            color:'gray',\r\n                            display:this.isGray?'':'none'\r\n                          },\r\n                    },'删除') \r\n              ]);\r\n            }\r\n          }\r\n        })\r\n      },\r\n      //通道切换\r\n      channelChange(selection){\r\n        this.selectArr = []\r\n        for(let item of selection){\r\n          this.selectArr.push(item.channelId)\r\n        }\r\n      },\r\n      //记录当前更换日期项\r\n      moveIn(index){\r\n        this.activeIndex = index\r\n      },\r\n      recodeTimeChange(arr){\r\n        console.log('activeIndex',this.activeIndex)\r\n        this.timeArr[this.activeIndex].timeData = arr\r\n      },\r\n      noRepeatDateChange(val){\r\n        console.log('变化',val)\r\n        if(new Date(val).valueOf() < (Date.now() - 24*3600*1000)) {\r\n          this.$Message.info(\"请选择今后的日期\");\r\n          this.timeArr1[this.activeIndex].date = ''\r\n          this.timeArr1[this.activeIndex].showDate = [\"\",\"\"]\r\n        } else {\r\n          this.timeArr1[this.activeIndex].date = val\r\n          this.timeArr1[this.activeIndex].showDate = val\r\n        }\r\n      },\r\n      noRepeatTimeChange(arr){\r\n        this.timeArr1[this.activeIndex].timeData = arr\r\n      },\r\n      change1(){\r\n        this.refresh++\r\n      },\r\n        //查询全部分类\r\n      searchRecordCategoryList(){\r\n        let param = {\r\n          name:'',\r\n          pageNo:-1,\r\n        }\r\n        api.searchRecordCategoryList(param).then(res=>{\r\n          console.log('分类',res)\r\n          this.channelClassAll = res.result\r\n        })\r\n      },\r\n      add(){\r\n        if(this.recodePlanData.repeat === 0){\r\n          this.timeArr.push({\r\n            timeData:[\"\", \"\"],\r\n          })\r\n        }else{\r\n          this.timeArr1.push({\r\n            date:'',\r\n            showDate:'',\r\n            timeData:[\"\", \"\"],\r\n          })\r\n        }\r\n      },\r\n      remove(index){\r\n         if(this.recodePlanData.repeat === 0){\r\n          if(!this.isGray&&this.timeArr.length!==1){\r\n            this.timeArr.splice(index,1)\r\n          }\r\n        }else{\r\n          if(!this.isGray&&this.timeArr1.length!==1){\r\n            this.timeArr1.splice(index,1)\r\n          }\r\n        }\r\n      },\r\n      //------------------------通道相关接口\r\n      showChannelList(name){\r\n        this.activeName = name\r\n        this.pageNo = 1\r\n        this.pageSize = 10\r\n        this.searchRecordChannelList(name)\r\n      },\r\n      //查询通道列表\r\n      searchRecordChannelList(name){\r\n         let param = {\r\n           channelName:name,\r\n           pageNo:this.pageNo,\r\n           pageSize:this.pageSize\r\n        }\r\n        api.searchRecordChannelList(param).then(res=>{\r\n          console.log('通道列表',res)\r\n          this.selectArr = []\r\n          this.channelTableData = res.result\r\n          this.totalCount = res.count\r\n          if(res.result&&res.result.length){\r\n            for(let item of res.result){\r\n              item.channelType1 = item.channelType === 0?'视频+音频': item.channelType === 1?'纯视频':'纯音频'\r\n              item.sourceType1 = item.sourceType === '0'?'TS/UDP':item.sourceType === '1'?'RTP':item.sourceType === '2'?'ONVIF':item.sourceType === '3'?'GB28181':item.sourceType === '4'?'H.323':'SIP'\r\n            }\r\n            this.init()\r\n             //=============更新缓存\r\n            let arr = sessionStorage.getItem('monitorState')?JSON.parse(sessionStorage.getItem('monitorState')):[]\r\n            if(arr){\r\n              for(let val of arr){\r\n                for(let val1 of res.result){\r\n                  if(val.channelId === val1.channelId){\r\n                    val.business.isRecording = val1.isStartRecord === 0?true:false\r\n                  }\r\n                }\r\n              }\r\n              sessionStorage.setItem('monitorState',JSON.stringify(arr))\r\n            }\r\n          }else if(res.result&&!res.result.length&&this.pageNo>1){\r\n            this.pageNo--\r\n            this.searchRecordChannelList(name)\r\n          }\r\n        },err=>{\r\n          this.selectArr = []\r\n        })\r\n      },\r\n      //新建通道\r\n      newCreateChannel(){\r\n        //打开新建弹窗时清空数据\r\n        this.$refs['channelNew'].resetFields()\r\n        this.channelData.enterProtocol = '0'\r\n        this.channelData.channelClass = ''\r\n        //初始化分类\r\n        console.log(this.channelClassAll)\r\n        this.newCreateChannelModal = true\r\n      },\r\n       //确定创建通道\r\n      confirmCreateChannel(name){\r\n        let vm = this\r\n         this.$refs[name].validate((valid) => {\r\n            if (valid) {\r\n              let param = {}\r\n\r\n              // let flag1 = this.channelData.address.startsWith(\"UDP://\");\r\n              // let flag2 = this.channelData.address.startsWith(\"udp://\");\r\n              // let flag3 = this.channelData.address1.startsWith(\"UDP://\");\r\n              // let flag4 = this.channelData.address1.startsWith(\"udp://\");\r\n\r\n              // if ((!flag1 && !flag2) || (!flag3 && !flag4)) {\r\n              //   this.$Message.info('源地址格式不正确，请输入以“UDP://”或“udp://”开头的源地址');\r\n              //   return false;\r\n              // }\r\n\r\n              /** 修改 禅道2325bug */\r\n              let flag1 = this.channelData.address.startsWith(\"udp://\");\r\n              let flag2 = this.channelData.address1.startsWith(\"udp://\");\r\n              if (!flag1 || !flag2) {\r\n                this.$Message.info('源地址格式不正确，请输入以“udp://”开头的源地址');\r\n                return false;\r\n              }\r\n\r\n              console.log('id',this.channelData.channelClass)\r\n              if(vm.channelData.enterProtocol === '0'){\r\n                 param={\r\n                  userId:JSON.parse(localStorage['loginRes']).user.userId,\r\n                  channelName:this.channelData.channelName,\r\n                  channelType:this.channelData.channelType,\r\n                  categoryId:this.channelData.channelClass,\r\n                  sourceType:this.channelData.enterProtocol,//输入性协议\r\n                  tsudpSource:this.channelData.address,//源地址\r\n                  tsudpBakSource:this.channelData.address1,\r\n                  tsudpStoreTimelength:this.channelData.storageTime,//可存储时长\r\n                  tsudpShiftTimeLength:this.channelData.timeShifting,//时移时长\r\n                  tsudpPlayType:this.channelData.playProtocol,//udp播放协议\r\n                }\r\n              }else if(this.channelData.enterProtocol ===\"1\"){\r\n                param={\r\n                  userId:JSON.parse(localStorage['loginRes']).user.userId,\r\n                  channelName:this.channelData.channelName,\r\n                  channelType:this.channelData.channelType,\r\n                  categoryId:this.channelData.channelClass,\r\n                  sourceType:this.channelData.enterProtocol,//输入性协议\r\n                  rtpSource:this.channelData.address,//源地址\r\n                  rtpBakSource:this.channelData.address1,\r\n                  rtpStoreTimelength:this.channelData.storageTime,//可存储时长\r\n                  rtpShiftTimeLength:this.channelData.timeShifting,//时移时长\r\n                  rtpPlayType:this.channelData.playProtocol,//rtp播放协议\r\n                }  \r\n              }\r\n              this.channelNewLoading = true\r\n              api.createChannel(param).then(res=>{\r\n                this.$Message.success('通道创建成功')\r\n                this.newCreateChannelModal = false\r\n                this.channelNewLoading = false\r\n                this.searchRecordChannelList(this.activeName)\r\n              },err=>{\r\n                this.channelNewLoading = false\r\n              })\r\n            } else {\r\n               this.$Message.info('请输入符合规则的内容')\r\n            }\r\n        })\r\n      },\r\n      //取消创建通道\r\n      cancelCreateChannel(name){\r\n        this.newCreateChannelModal = false\r\n      },\r\n      //编辑通道打开\r\n      showEditChannel(id){\r\n        this.channelId = id\r\n        //打开时先清空数据\r\n        this.$refs['channelEdit'].resetFields()\r\n        this.editChannelModal = true\r\n        //查询详情\r\n        let param = {\r\n          channelId:id\r\n        }\r\n        api.selectChannelDetail(param).then(res=>{\r\n          console.log(res)\r\n          this.channelData.channelName = res.result.channelName\r\n          this.channelData.channelType = res.result.channelType\r\n          this.channelData.enterProtocol = res.result.sourceType\r\n          if(res.result.sourceType === '0'){\r\n            this.channelData.playProtocol = res.result.tsudpPlayType\r\n            this.channelData.timeShifting = res.result.tsudpShiftTimeLength\r\n            this.channelData.storageTime = res.result.tsudpStoreTimelength\r\n            this.channelData.address = res.result.tsudpSource\r\n            this.channelData.address1 = res.result.tsudpBakSource?res.result.tsudpBakSource:''\r\n          }else if(res.result.sourceType === '1'){\r\n            this.channelData.address = res.result.rtpSource\r\n            this.channelData.address1 = res.result.rtpBakSource?res.result.rtpBakSource:''\r\n            this.channelData.playProtocol = res.result.rtpPlayType\r\n            this.channelData.timeShifting = res.result.rtpShiftTimeLength\r\n            this.channelData.storageTime = res.result.rtpStoreTimelength\r\n          }\r\n        })\r\n      },\r\n     //编辑通道确认\r\n      confirmEditChannel(name){\r\n        this.$refs[name].validate((valid) => {\r\n          if (valid) {\r\n            let param = {}\r\n\r\n            // let flag1 = this.channelData.address.startsWith(\"UDP://\");\r\n            // let flag2 = this.channelData.address.startsWith(\"udp://\");\r\n            // let flag3 = this.channelData.address1.startsWith(\"UDP://\");\r\n            // let flag4 = this.channelData.address1.startsWith(\"udp://\");\r\n\r\n            // if ((!flag1 && !flag2) || (!flag3 && !flag4)) {\r\n            //   this.$Message.info('源地址格式不正确，请输入以“UDP://”或“udp://”开头的源地址');\r\n            //   return false;\r\n            // }\r\n\r\n            /** 修改 禅道2325bug */\r\n            let flag1 = this.channelData.address.startsWith(\"udp://\");\r\n            let flag2 = this.channelData.address1.startsWith(\"udp://\");\r\n            if (!flag1 || !flag2) {\r\n              this.$Message.info('源地址格式不正确，请输入以“udp://”开头的源地址');\r\n              return false;\r\n            }\r\n\r\n            if(this.channelData.enterProtocol === '0'){\r\n               param = {\r\n                  userId:JSON.parse(localStorage['loginRes']).user.userId,\r\n                  channelId:this.channelId,\r\n                  channelName:this.channelData.channelName,\r\n                  channelType:this.channelData.channelType,\r\n                  tsudpSource:this.channelData.address,\r\n                  tsudpBakSource:this.channelData.address1,\r\n                  sourceType:this.channelData.enterProtocol,\r\n                  tsudpStoreTimelength:this.channelData.storageTime,\r\n                  tsudpShiftTimeLength:this.channelData.timeShifting,\r\n                  tsudpPlayType:this.channelData.playProtocol\r\n                }\r\n            }else if(this.channelData.enterProtocol === '1'){\r\n              param = {\r\n                  userId:JSON.parse(localStorage['loginRes']).user.userId,\r\n                  channelId:this.channelId,\r\n                  channelName:this.channelData.channelName,\r\n                  channelType:this.channelData.channelType,\r\n                  rtpSource:this.channelData.address,\r\n                  rtpBakSource:this.channelData.address1,\r\n                  sourceType:this.channelData.enterProtocol,\r\n                  rtpStoreTimelength:this.channelData.storageTime,\r\n                  rtpShiftTimeLength:this.channelData.timeShifting,\r\n                  rtpPlayType:this.channelData.playProtocol\r\n                }\r\n            }\r\n            this.channelEditLoading = true\r\n            api.modifyChannel(param).then(res=>{\r\n              this.$Message.success('通道编辑成功');\r\n              this.editChannelModal = false\r\n              this.channelEditLoading = false\r\n              this.searchRecordChannelList(this.activeName)\r\n            },err=>{\r\n              this.channelEditLoading = false\r\n            })\r\n          } else {\r\n            this.$Message.error('请输入符合规则的内容');\r\n          }\r\n        })\r\n      },\r\n       //取消编辑通道\r\n      cancelEditChannel(){\r\n        this.editChannelModal = false\r\n      },\r\n\r\n      //===============开始录制\r\n      startRecode(){\r\n        if(!this.selectArr.length){\r\n          this.$Message.info('请选择通道,再进行操作')\r\n          return false\r\n        }\r\n        this.recodePlanConfirmModal = true\r\n        this.oneOrBatchRecode = 1\r\n        this.isStartFlag = true\r\n      },\r\n      //=========================停止录制\r\n      stopRecode(){\r\n        if(!this.selectArr.length){\r\n          this.$Message.info('请先选择通道,在进行操作')\r\n          return false\r\n        }\r\n        this.recodePlanConfirmModal = true\r\n        this.oneOrBatchRecode = 1\r\n        this.isStartFlag = false\r\n      },\r\n      //添加分类\r\n      addClass(){\r\n        this.addClassModal = true\r\n        this.addClassInput = ''\r\n      },\r\n      //分类确认添加\r\n      confirmAdd(){\r\n        if(!this.addClassInput){\r\n           this.$Message.info('请输入分类名称')\r\n           return false\r\n        }else{\r\n          let reg = /^[a-zA-Z0-9_\\u4e00-\\u9fa5]+$/\r\n          if(!reg.test(this.addClassInput)) {\r\n            this.$Message.info(\"请输入中文、数字、字母、下划线\")\r\n            return false\r\n          }\r\n          // else{\r\n          //   for(let item of this.channelClassAll){\r\n          //    if(item.name === this.addClassInput) {\r\n          //      this.$Message.info(\"分类名称已存在\")\r\n          //      return false\r\n          //    }\r\n          //   }\r\n          // }\r\n\r\n          let param = {\r\n            name:this.addClassInput\r\n          }\r\n          api.createCategory(param).then(res=>{\r\n            this.searchRecordCategoryList()\r\n            this.addClassModal = false\r\n          })\r\n        }\r\n      },\r\n      /**分类确认取消 */\r\n      confirmCancel(){\r\n        this.addClassModal = false\r\n      },\r\n      //删除通道\r\n      deleteChannel(id){\r\n        let param = {\r\n          channelId:id\r\n        }\r\n        api.deleteChannel(param).then(res=>{\r\n          this.$Message.success('通道删除成功')\r\n          this.searchRecordChannelList(this.activeName)\r\n        })\r\n      },\r\n      //录制计划\r\n      searchRecordPlanList(Row){\r\n         console.log('ROW',Row)\r\n         console.log(Row.autoRecordPlan)\r\n         this.recodeFlag = 0\r\n         this.recodeParamData = Row\r\n         this.recodePlanData.openPlan = Row.autoRecordPlan//是否开启自动计划\r\n         let param = {\r\n           channelId:Row.channelId,\r\n           pageNo:-1,\r\n         }\r\n         api.searchRecordPlanList(param).then(res=>{\r\n           if(res.result){\r\n             let result = res.result\r\n             //====如果有数据\r\n             if(result.length){\r\n                 //是否是重复\r\n                 this.recodePlanData.repeat = result[0].type\r\n                if(this.recodePlanData.repeat === 0){\r\n                  //如果是重复\r\n                  let recodeWeek = result[0].weekday //记录第一条数据周几\r\n                  let arr = []//记录一天的数据\r\n                  this.recodePlanData.weekArr = []\r\n                  this.timeArr = []\r\n                    for(let index in result){\r\n                      if(result[index].weekday === recodeWeek){\r\n                        arr.push(result[index])\r\n                      }\r\n                      if(!this.recodePlanData.weekArr.includes(result[index].weekday)){\r\n                        this.recodePlanData.weekArr.push(result[index].weekday)\r\n                      }\r\n                    }\r\n                    //每一天的时间\r\n                    if(arr.length){\r\n                        for(let key in arr){\r\n                          let obj ={\r\n                            timeData:[arr[key].startDate,arr[key].endDate]\r\n                          }\r\n                          this.timeArr.push(obj)\r\n                        }\r\n                    }\r\n                   this.timeArr1 = [{\r\n                    date:'',\r\n                    showDate:[\"\",\"\"],\r\n                    timeData:[\"\", \"\"],\r\n                  }]\r\n                }else{\r\n                  this.timeArr = [{\r\n                    timeData:[\"\", \"\"],\r\n                  }],\r\n                  this.recodePlanData.weekArr = []\r\n                  //不重复\r\n                  console.log('不重复页面',result)\r\n                  this.timeArr1 = []\r\n                  for(let item of result){\r\n                    let obj ={}\r\n                    obj.date = item.startDate.split(\" \")[0]\r\n                    obj.showDate = item.startDate.split(\" \")[0]\r\n                    obj.timeData = [item.startDate.split(\" \")[1],item.endDate.split(\" \")[1]]\r\n                    this.timeArr1.push(obj)\r\n                  }\r\n                }\r\n             } else {\r\n               //不含有数据时初始化状态\r\n                this.timeArr=[{timeData:[\"\", \"\"],}]\r\n                this.timeArr1=[{date:'',timeData:[\"\", \"\"],showDate:[\"\", \"\"]}]\r\n                this.recodePlanData.repeat = 0\r\n                this.recodePlanData.weekArr = []\r\n             }\r\n           }\r\n            this.recodePlanModal = true\r\n            //是否应用到其他频道\r\n            this.isApply = Row.applyOtherChannel\r\n         })\r\n      },\r\n      //确定录制计划\r\n      confirmRecodePlan(){\r\n        let param\r\n        if(this.recodeFlag === 0){\r\n           let planList = []\r\n          if(this.recodePlanData.repeat ===0){\r\n            let flag = false //是否日期时间没有选择\r\n            let isSameFlag = false //是否起始时间一致\r\n            if(!this.recodePlanData.weekArr.length){\r\n              this.$Message.info('请选择周期')\r\n              return false\r\n            }\r\n            for(let item of this.recodePlanData.weekArr){\r\n              for(let item1 of this.timeArr){\r\n                if(!item1.timeData[0]||!item1.timeData[1]){\r\n                  flag = true\r\n                  break\r\n                }\r\n                if(item1.timeData[0]===item1.timeData[1]){\r\n                  isSameFlag = true\r\n                  break\r\n                }\r\n                let obj = {}\r\n                obj.type = 0,\r\n                obj.weekday = item\r\n                obj.startDate = item1.timeData[0]\r\n                obj.endDate = item1.timeData[1]\r\n                planList.push(obj)\r\n              }\r\n            }\r\n            if(flag){\r\n              this.$Message.info('请选择开始时间和结束时间')\r\n              return false\r\n            }\r\n            if(isSameFlag){\r\n              this.$Message.info('结束时间不可与开始时间相同')\r\n              return false\r\n            }\r\n            param = {\r\n              channelIdList:[this.recodeParamData.channelId],\r\n              autoRecordPlan:this.recodePlanData.openPlan,\r\n              applyOtherChannel:this.isApply,\r\n              planList\r\n          }\r\n          console.log('重复参数',param)\r\n          }else{\r\n            let dataFlag = false\r\n            let timeFlag = false\r\n            let timeEqualFlag = false\r\n            let timeStartFlag = false\r\n            let timeEndFlag = false\r\n            for(let item of this.timeArr1){\r\n              console.log(item.date)\r\n              if(!item.date){\r\n                dataFlag = true\r\n                break\r\n              }\r\n              if(!item.timeData[0]||!item.timeData[1]){\r\n                timeFlag = true\r\n                break\r\n              }\r\n              if(item.timeData[0] === item.timeData[1]){\r\n                timeEqualFlag = true\r\n                break\r\n              }\r\n              if(new Date(item.date + \" \" + item.timeData[1]).valueOf() < new Date().valueOf()) {\r\n                timeEndFlag = true\r\n              }\r\n              if(!timeEndFlag && new Date(item.date + \" \" + item.timeData[0]).valueOf() < new Date().valueOf()) {\r\n                timeStartFlag = true\r\n              }\r\n              let obj = {}\r\n              obj.type = 1,\r\n              obj.startDate = item.showDate+' '+item.timeData[0]\r\n              obj.endDate = item.showDate+' '+item.timeData[1]\r\n              planList.push(obj)\r\n            }\r\n            if(dataFlag){\r\n              this.$Message.info('请选择日期')\r\n              return false\r\n            }\r\n            if(timeFlag){\r\n              this.$Message.info('请选择开始时间和结束时间')\r\n              return false\r\n            }\r\n            if(timeEqualFlag){\r\n              this.$Message.info('结束时间不可与开始时间相同')\r\n              return false\r\n            }\r\n            if(timeEndFlag){\r\n                this.$Message.info('请注意，结束时间早于当前时间的计划将不会被执行！')\r\n            }\r\n            if(timeStartFlag){\r\n                this.$Message.info('请注意，部分计划的开始时间早于当前时间！')\r\n            }\r\n            //不重复\r\n            param = {\r\n              channelIdList:[this.recodeParamData.channelId],\r\n              autoRecordPlan:this.recodePlanData.openPlan,\r\n              applyOtherChannel:this.isApply?true:false,\r\n              planList\r\n            }\r\n          }\r\n          console.log('不重复参数',param)\r\n          api.addOrUpdatePlan(param).then(res=>{\r\n            this.$Message.success('添加录制计划成功')\r\n            this.recodePlanModal = false\r\n            //刷新列表\r\n            this.searchRecordChannelList(this.activeName)\r\n          })\r\n        }else{\r\n          /**批量录制 */\r\n          let channelIdList = []\r\n          for(let channelId of this.selectArr){\r\n            channelIdList.push(channelId)\r\n          }\r\n          let planList = []\r\n          if(this.recodePlanData.repeat ===0){\r\n            let flag = false //是否日期时间没有选择\r\n            let isSameFlag = false //是否起始时间一致\r\n            if(!this.recodePlanData.weekArr.length){\r\n              this.$Message.info('请选择周期')\r\n              return false\r\n            }\r\n            for(let item of this.recodePlanData.weekArr){\r\n              for(let item1 of this.timeArr){\r\n                if(!item1.timeData[0]||!item1.timeData[1]){\r\n                  flag = true\r\n                  break\r\n                }\r\n                if(item1.timeData[0]===item1.timeData[1]){\r\n                  isSameFlag = true\r\n                  break\r\n                }\r\n                let obj = {}\r\n                obj.type = 0,\r\n                obj.weekday = item\r\n                obj.startDate = item1.timeData[0]\r\n                obj.endDate = item1.timeData[1]\r\n                planList.push(obj)\r\n              }\r\n            }\r\n            if(flag){\r\n              this.$Message.info('请选择开始时间和结束时间')\r\n              return false\r\n            }\r\n            if(isSameFlag){\r\n              this.$Message.info('结束时间不可与开始时间相同')\r\n              return false\r\n            }\r\n            param = {\r\n              channelIdList:channelIdList,\r\n              autoRecordPlan:this.recodePlanData.openPlan,\r\n              applyOtherChannel:this.isApply,\r\n              planList\r\n          }\r\n          console.log('重复参数',param)\r\n          }else{\r\n            let dataFlag = false\r\n            let timeFlag = false\r\n            let timeEqualFlag = false\r\n            let timeStartFlag = false\r\n            let timeEndFlag = false\r\n            for(let item of this.timeArr1){\r\n              console.log(item.date)\r\n              if(!item.date){\r\n                dataFlag = true\r\n                break\r\n              }\r\n              if(!item.timeData[0]||!item.timeData[1]){\r\n                timeFlag = true\r\n                break\r\n              }\r\n              if(item.timeData[0] === item.timeData[1]){\r\n                timeEqualFlag = true\r\n                break\r\n              }\r\n              if(new Date(item.date + \" \" + item.timeData[1]).valueOf() < new Date().valueOf()) {\r\n                timeEndFlag = true\r\n              }\r\n              if(!timeEndFlag && new Date(item.date + \" \" + item.timeData[0]).valueOf() < new Date().valueOf()) {\r\n                timeStartFlag = true\r\n              }\r\n              let obj = {}\r\n              obj.type = 1,\r\n              obj.startDate = item.showDate+' '+item.timeData[0]\r\n              obj.endDate = item.showDate+' '+item.timeData[1]\r\n              planList.push(obj)\r\n            }\r\n            if(dataFlag){\r\n              this.$Message.info('请选择日期')\r\n              return false\r\n            }\r\n            if(timeFlag){\r\n              this.$Message.info('请选择开始时间和结束时间')\r\n              return false\r\n            }\r\n            if(timeEqualFlag){\r\n              this.$Message.info('结束时间不可与开始时间相同')\r\n              return false\r\n            }\r\n            if(timeEndFlag){\r\n                this.$Message.info('请注意，结束时间早于当前时间的计划将不会被执行！')\r\n            }\r\n            if(timeStartFlag){\r\n                this.$Message.info('请注意，部分计划的开始时间早于当前时间！')\r\n            }\r\n            //不重复\r\n            param = {\r\n              channelIdList:channelIdList,\r\n              autoRecordPlan:this.recodePlanData.openPlan,\r\n              applyOtherChannel:this.isApply?true:false,\r\n              planList\r\n            }\r\n          }\r\n          console.log('不重复参数',param)\r\n          api.addOrUpdatePlan(param).then(res=>{\r\n            this.$Message.success('添加录制计划成功')\r\n            this.recodePlanModal = false\r\n            //刷新列表\r\n            this.searchRecordChannelList(this.activeName)\r\n          })\r\n        }\r\n       \r\n      },\r\n      //批量录制打开\r\n      allRecodePlan(){\r\n        if(!this.selectArr.length){\r\n          this.$Message.info('请选择通道,在进行操作')\r\n          return false\r\n        }\r\n        //批量录制\r\n        this.recodeFlag = 1\r\n        this.recodePlanData.repeat = 0\r\n        this.timeArr = []\r\n        this.recodePlanData.weekArr = []\r\n        this.recodePlanData.openPlan = false\r\n        this.isApply = true\r\n        this.recodePlanModal = true\r\n        this.timeArr=[{timeData:[\"\", \"\"]}],\r\n        this.timeArr1=[{date:'',showDate:[\"\",\"\"],timeData:[\"\", \"\"]}]\r\n      },\r\n      //取消录制计划\r\n      cancelRecodePlan(){\r\n        this.recodePlanModal = false\r\n      },\r\n      startOrStopConfirm(){\r\n        //批量\r\n        if(this.oneOrBatchRecode){\r\n          //开启\r\n          if(this.isStartFlag){\r\n            let param = {\r\n              isStartRecord:0,//是否开启录制0开始 1关闭\r\n              autoRecordPlan:this.isStart,//是否开启自动录制计划 0关闭 1开启\r\n              channelIdList:this.selectArr\r\n            }\r\n            api.startOrStopRecord(param).then(res=>{\r\n              this.$Message.success('录制已启动')\r\n              this.recodePlanConfirmModal = false\r\n              this.searchRecordChannelList(this.activeName)\r\n            })\r\n          }else{\r\n            let param = {\r\n              isStartRecord:1,//是否开启录制0开始 1关闭\r\n              autoRecordPlan:this.isStart,//是否开启自动录制计划 0关闭 1开启\r\n              channelIdList:this.selectArr\r\n            }\r\n            api.startOrStopRecord(param).then(res=>{\r\n              this.$Message.success('录制已停止')\r\n              this.recodePlanConfirmModal = false\r\n              this.searchRecordChannelList(this.activeName)\r\n            })\r\n          }\r\n        }else{\r\n          if(this.isStartFlag){\r\n              let param = {\r\n              channelIdList:[this.row.channelId],\r\n              isStartRecord:0,//开启录制\r\n              autoRecordPlan:this.isStart\r\n            }\r\n            api.startOrStopRecord(param).then(res=>{\r\n              this.$Message.success('录制已开启')\r\n              this.recodePlanConfirmModal = false\r\n              this.searchRecordChannelList(this.activeName)\r\n            })\r\n          } else {\r\n             let param = {\r\n              channelIdList:[this.row.channelId],\r\n              isStartRecord:1,//关闭录制\r\n              autoRecordPlan:this.isStart\r\n            }\r\n            api.startOrStopRecord(param).then(res=>{\r\n              this.$Message.success('录制已关闭')\r\n              this.recodePlanConfirmModal = false\r\n              this.searchRecordChannelList(this.activeName)\r\n            })\r\n          }\r\n        }\r\n      },\r\n      startOrStopCancel(){\r\n        this.recodePlanConfirmModal = false\r\n        this.searchRecordChannelList(this.activeName)\r\n      },\r\n      //=========================分页部分\r\n      pageChange(page){\r\n        this.pageNo = page\r\n        this.searchRecordChannelList(this.activeName)\r\n      },\r\n      sizeChange(size){\r\n        this.pageSize = size\r\n        this.searchRecordChannelList(this.activeName)\r\n      }\r\n    }\r\n  }\r\n</script>\r\n<style>\r\n\r\n  /* #channelEdit_tab .ivu-modal-header,#channelNew_tab .ivu-modal-header{\r\n     background: #3aa7dd\r\n  }  */\r\n  #recodePlanConfirmModal_1 .ivu-modal-content{\r\n    background: #0D436F\r\n  }\r\n  #recodePlanConfirmModal_1 .ivu-modal-footer{\r\n    border-top: hidden\r\n  }\r\n  .textArea input{\r\n    height: 62px;\r\n  }\r\n  #recodePlanModal .ivu-modal-body{\r\n    padding: 0;\r\n  }\r\n  .ivu-input::-webkit-input-placeholder,\r\n  textarea::-webkit-input-placeholder {\r\n    color: #6c8cb3!important;\r\n    font-size: 14px;  \r\n  }\r\n  .recodePlanClassName1{\r\n    left: -17px;\r\n    top:15px\r\n  }\r\n .exportInput .ivu-input{\r\n    background: #0d446c!important;\r\n  } \r\n</style>\r\n\r\n\r\n\r\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./tab.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./tab.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./tab.vue?vue&type=template&id=98d29562&\"\nimport script from \"./tab.vue?vue&type=script&lang=js&\"\nexport * from \"./tab.vue?vue&type=script&lang=js&\"\nimport style0 from \"./tab.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","'use strict';\nvar $ = require('../internals/export');\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar toLength = require('../internals/to-length');\nvar notARegExp = require('../internals/not-a-regexp');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar correctIsRegExpLogic = require('../internals/correct-is-regexp-logic');\nvar IS_PURE = require('../internals/is-pure');\n\nvar nativeStartsWith = ''.startsWith;\nvar min = Math.min;\n\nvar CORRECT_IS_REGEXP_LOGIC = correctIsRegExpLogic('startsWith');\n// https://github.com/zloirock/core-js/pull/702\nvar MDN_POLYFILL_BUG = !IS_PURE && !CORRECT_IS_REGEXP_LOGIC && !!function () {\n  var descriptor = getOwnPropertyDescriptor(String.prototype, 'startsWith');\n  return descriptor && !descriptor.writable;\n}();\n\n// `String.prototype.startsWith` method\n// https://tc39.github.io/ecma262/#sec-string.prototype.startswith\n$({ target: 'String', proto: true, forced: !MDN_POLYFILL_BUG && !CORRECT_IS_REGEXP_LOGIC }, {\n  startsWith: function startsWith(searchString /* , position = 0 */) {\n    var that = String(requireObjectCoercible(this));\n    notARegExp(searchString);\n    var index = toLength(min(arguments.length > 1 ? arguments[1] : undefined, that.length));\n    var search = String(searchString);\n    return nativeStartsWith\n      ? nativeStartsWith.call(that, search, index)\n      : that.slice(index, index + search.length) === search;\n  }\n});\n","var $ = require('../internals/export');\nvar repeat = require('../internals/string-repeat');\n\n// `String.prototype.repeat` method\n// https://tc39.github.io/ecma262/#sec-string.prototype.repeat\n$({ target: 'String', proto: true }, {\n  repeat: repeat\n});\n","import mod from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./tab.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./tab.vue?vue&type=style&index=0&lang=css&\""],"sourceRoot":""}