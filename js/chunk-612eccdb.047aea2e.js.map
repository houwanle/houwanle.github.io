{"version":3,"sources":["webpack:///./src/components/SumaPlayerMain.vue?ce2b","webpack:///./src/images/login_bg.jpg","webpack:///./node_modules/core-js/modules/es.string.trim.js","webpack:///./src/components/SumaPlayerImportMain.vue?1ac3","webpack:///./src/components/SumaPlayerExportMain.vue?93eb","webpack:///./src/components/SumaPlayerExportDetail.vue?a9c2","webpack:///./src/views/recode-manage/components/player.vue?bd48","webpack:///./src/components/SumaPlayerImportDetail.vue?57a2","webpack:///./src/views/recode-manage/components/channelMonitor.vue?13d1","webpack:///./node_modules/core-js/internals/string-trim-forced.js","webpack:///./src/views/recode-manage/components/player.vue?a949","webpack:///src/views/recode-manage/components/player.vue","webpack:///./src/views/recode-manage/components/player.vue?60c6","webpack:///./src/views/recode-manage/components/player.vue?d34e","webpack:///./src/views/recode-manage/components/channelMonitor.vue?e665","webpack:///./src/components/SumaPlayerMain.vue?eddd","webpack:///src/components/SumaPlayerMain.vue","webpack:///./src/components/SumaPlayerMain.vue?9a7f","webpack:///./src/components/SumaPlayerMain.vue?f52c","webpack:///./src/components/SumaPlayerImportMain.vue?daa0","webpack:///src/components/SumaPlayerImportMain.vue","webpack:///./src/components/SumaPlayerImportMain.vue?ff46","webpack:///./src/components/SumaPlayerImportMain.vue?8ef2","webpack:///./src/components/SumaPlayerImportDetail.vue?fe14","webpack:///src/components/SumaPlayerImportDetail.vue","webpack:///./src/components/SumaPlayerImportDetail.vue?3e51","webpack:///./src/components/SumaPlayerImportDetail.vue?0f5a","webpack:///./src/components/SumaPlayerExportMain.vue?f562","webpack:///src/components/SumaPlayerExportMain.vue","webpack:///./src/components/SumaPlayerExportMain.vue?9d9a","webpack:///./src/components/SumaPlayerExportMain.vue?75a2","webpack:///./src/components/SumaPlayerExportDetail.vue?c6d3","webpack:///src/components/SumaPlayerExportDetail.vue","webpack:///./src/components/SumaPlayerExportDetail.vue?c258","webpack:///./src/components/SumaPlayerExportDetail.vue?d244","webpack:///src/views/recode-manage/components/channelMonitor.vue","webpack:///./src/views/recode-manage/components/channelMonitor.vue?e3dd","webpack:///./src/views/recode-manage/components/channelMonitor.vue?70f2"],"names":["module","exports","$","$trim","trim","forcedStringTrimMethod","target","proto","forced","this","fails","whitespaces","non","METHOD_NAME","name","render","_vm","_h","$createElement","_c","_self","attrs","model","value","callback","$$v","dottingModal","expression","ref","staticStyle","dottingName","_v","_s","length","on","dottingConfirm","dottingCancel","slot","staticRenderFns","data","created","isGray","$bus","$on","destroyed","$off","mounted","console","log","methods","getServerTime","api","recodeConfirm","recodeCancel","recodePlanConfirmModal","setQmlPlayerProperty","arr","$Message","info","channelId","startDate","endDate","type","item","business","isDotting","timestampToTime","year","setQmlPlayerServerTime","createQmlPlayer","vm","playerType","sessionStorage","setItem","mode","x","y","width","witdh","height","rows","columns","$sumaQtPlayer","createPlayer","JSON","stringify","param","prepareQmlPlayer","recodeObj","player","$set","flag","prepareQmlPlayer1","obj","playerIndex","groupIndex","playerInfo","push","prepareQmlPlayer2","destroyQmlPlayer","setVersionInfo","getVersion","res","result","versionCode","versionName","versionDescription","component","directives","rawName","showDetail","style","widthBase","marginLeft","staticClass","showChannel","canvas","_e","createMeidaNum","allShut","returnBtnLoadingStatus","returnChannel","isbrower","allowDrop","recodeSwitch","isStart","background","padding","addClass","treeData","drop","dropAble","renderContent","handleDragStart","handleDragEnter","handleDragLeave","handleDragOver","handleDragEnd","handleDrop","importClick","importDetail","importByHand","importListButton","handleUpload","innerHeight","border","position","importDateChange","importDate","addMore","_l","index","key","display","margin","marginTop","cursor","timeArr","$event","remove","createChannelProgramList","exportFileList","exportDetail","exportByList","exportListButton","exportByTime","exportTimeButton","videoViewPlyerEnd","exportDateChange","exportDate","exportType","pramName","searchRecordProgramList","tabClick","listType","selectPlanArrChange","selectPlanArr","id","getDisabledStatus1","color","ischecked","getDisabledStatus","fontSize","time","radioPlanTimeList","selectHandArrChange","selectHandArr","radioHandTimeList","addMore1","timeArr1","remove1","single","paragramView","exportFileModal","classModal","title","classNameInput","classConfirm","fileModalCancel","fileModal","exportFileName","channelData","channelType","videoType","metaDataValue","metaDataName","audioType","exportFile","fullAreaEv","cancelFullAreaEv","videoRecCreateSuccess","playEnding","dottedSuccess","changeRecode","videoName","playerId","inline","showChannelName","playLiveWithHlsUrl","liveUrl","autoplay","isAutoPlay","src","play","playVodWithHlsUrl","vodUrl","setPlayerPoster","initOptions","poster","imageUrl","setupPlayer","self","$video","$emit","err","code","resetPlayer","dispose","videoNode","document","getElementById","innerHTML","pause","props","posterUrl","String","default","watch","newV","oldV","computed","addEventListener","beforeDestroy","playUrl","channelName","playInitArr","item1","recodeInitArr","item2","selectflag","startEndSame","isCanHandleTime","playList","childObj","label","channel_name","channel_id","parent_categoryId","category_id","is_startrecord","tsudpShiftTimeLength","parent_name","category_name","children"],"mappings":"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","file":"js/chunk-612eccdb.047aea2e.js","sourcesContent":["import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SumaPlayerMain.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SumaPlayerMain.vue?vue&type=style&index=0&lang=css&\"","module.exports = __webpack_public_path__ + \"img/login_bg.b63fc266.jpg\";","'use strict';\nvar $ = require('../internals/export');\nvar $trim = require('../internals/string-trim').trim;\nvar forcedStringTrimMethod = require('../internals/string-trim-forced');\n\n// `String.prototype.trim` method\n// https://tc39.github.io/ecma262/#sec-string.prototype.trim\n$({ target: 'String', proto: true, forced: forcedStringTrimMethod('trim') }, {\n  trim: function trim() {\n    return $trim(this);\n  }\n});\n","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SumaPlayerImportMain.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SumaPlayerImportMain.vue?vue&type=style&index=0&lang=css&\"","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SumaPlayerExportMain.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SumaPlayerExportMain.vue?vue&type=style&index=0&lang=css&\"","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SumaPlayerExportDetail.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SumaPlayerExportDetail.vue?vue&type=style&index=0&lang=css&\"","import mod from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./player.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./player.vue?vue&type=style&index=0&lang=css&\"","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SumaPlayerImportDetail.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SumaPlayerImportDetail.vue?vue&type=style&index=0&lang=css&\"","import mod from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./channelMonitor.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./channelMonitor.vue?vue&type=style&index=0&lang=css&\"","var fails = require('../internals/fails');\nvar whitespaces = require('../internals/whitespaces');\n\nvar non = '\\u200B\\u0085\\u180E';\n\n// check that a method works with the correct list\n// of whitespaces and has a correct name\nmodule.exports = function (METHOD_NAME) {\n  return fails(function () {\n    return !!whitespaces[METHOD_NAME]() || non[METHOD_NAME]() != non || whitespaces[METHOD_NAME].name !== METHOD_NAME;\n  });\n};\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"monRoot\"}},[_c('Modal',{attrs:{\"width\":\"600\",\"closable\":false,\"mask-closable\":false},model:{value:(_vm.dottingModal),callback:function ($$v) {_vm.dottingModal=$$v},expression:\"dottingModal\"}},[_c('Form',{ref:\"formInline\",attrs:{\"label-width\":120}},[_c('FormItem',{attrs:{\"label\":\"请输入名称：\"}},[_c('Input',{staticStyle:{\"width\":\"200px\"},attrs:{\"size\":\"small\",\"maxlength\":20},model:{value:(_vm.dottingName),callback:function ($$v) {_vm.dottingName=$$v},expression:\"dottingName\"}}),_c('span',{staticStyle:{\"color\":\"#fff\"}},[_vm._v(_vm._s(_vm.dottingName.length)+\"/20\")]),_c('Button',{staticStyle:{\"margin-left\":\"30px\"},attrs:{\"type\":\"primary\",\"size\":\"small\"},on:{\"click\":_vm.dottingConfirm}},[_vm._v(\"确定\")]),_c('Button',{staticStyle:{\"background\":\"rgba(13,67,111,1)\",\"color\":\"rgba(199,219,244,1)\",\"margin-left\":\"10px\"},attrs:{\"size\":\"small\"},on:{\"click\":_vm.dottingCancel}},[_vm._v(\"取消\")])],1)],1),_c('p',{attrs:{\"slot\":\"footer\"},slot:\"footer\"})],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div id=\"monRoot\">\r\n     <!--录制计划确认框-->\r\n     <!-- <Modal\r\n        v-model=\"recodePlanConfirmModal\"\r\n        width=\"638\"\r\n        id=\"planModal\"\r\n        :closable=\"false\"\r\n        :mask-closable=\"false\"\r\n        :transfer=\"false\"\r\n       >\r\n       <Form ref=\"formInline\" style=\"margin-top:52px;padding:0 68px\">\r\n        <FormItem>\r\n           <span style=\"fontSize:16px;font-weight:400;font-family:Microsoft YaHei;color:rgba(254,254,254,1)\">是否继续遵循录制计划执行?</span>\r\n           <label style=\"margin-left:45px\">\r\n             <RadioGroup v-model=\"isStart\" style=\"color:#fff\">\r\n                <Radio :label=\"1\">是</Radio>\r\n                <Radio :label=\"0\">否</Radio>\r\n            </RadioGroup>\r\n          </label> \r\n         </FormItem>\r\n         <FormItem style=\"marginTop:42px\">\r\n           <div style=\"color:rgba(175,188,204,1);font-weight:400;font-size:14px;font-family:Microsoft YaHei;\">\r\n             当您选择\"是\"，打开/关闭通道后，系统后台会打开/关闭当前录制，后续从录制计划中设置的下一时间段开始按各通道录制计划执行，且会根据录制计划自动打开/关闭通道。\r\n           </div>\r\n         </FormItem>\r\n          <FormItem>\r\n           <div style=\"color:rgba(175,188,204,1);font-weight:400;font-size:14px;font-family:Microsoft YaHei;\">\r\n             当您选择\"否\"，录制计划失效，打开通道，系统后台将一直录制；关闭通道，系统后台将停止录制，可通过手动开启录制计划中的开关，重新激活录制计划。\r\n           </div>\r\n         </FormItem>\r\n      </Form>\r\n       <p slot=\"footer\" style=\"display:flex;justify-content:center;margin-top:38px;margin-bottom:20px\">\r\n           <Button @click=\"recodeCancel\" style=\"background:rgba(13,67,111,1);color:rgba(199,219,244,1);\">取消</Button>\r\n           <Button type=\"primary\" @click=\"recodeConfirm\" :disabled=\"isGray\" style=\"margin-left:49px\">确定</Button>\r\n       </p>\r\n    </Modal> -->\r\n\r\n     <!--打点-->\r\n     <Modal\r\n        v-model=\"dottingModal\"\r\n        width=\"600\"\r\n        :closable=\"false\"\r\n        :mask-closable=\"false\"\r\n       >\r\n       <Form ref=\"formInline\" :label-width=\"120\">\r\n        <FormItem label=\"请输入名称：\">\r\n           <Input style=\"width:200px\" size=\"small\" :maxlength=\"20 \" v-model=\"dottingName\"></Input>\r\n           <span style=\"color:#fff\">{{dottingName.length}}/20</span>\r\n          <Button type=\"primary\" size=\"small\"  style=\"margin-left:30px\" @click=\"dottingConfirm\">确定</Button>\r\n          <Button size=\"small\" style=\"background:rgba(13,67,111,1);color:rgba(199,219,244,1);margin-left:10px\" @click=\"dottingCancel\">取消</Button>\r\n         </FormItem>\r\n      </Form>\r\n       <p slot=\"footer\"></p>\r\n    </Modal>\r\n  </div>\r\n</template>\r\n<script>\r\n// import QWebChannel from '@/qwebchannel.js'\r\nimport api from '@/api/api'\r\nexport default {\r\n  data(){\r\n    return {\r\n     dottingName:'',\r\n     recodePlanConfirmModal:false,\r\n     dottingModal:false,\r\n     sumaQtPlayer:'',\r\n     isStart:1,//是否遵循录制计划\r\n     recodeSwitchFlag:false,//是否打开录制开关\r\n     receiveObj:{},//接收到的对象\r\n     recordPlayUrlChange:[],//播放地址初始化记录\r\n     playerType:'',\r\n     playerbaseIndex:0,//普通播放器groupindex\r\n     playerRecIndex:0,//打点播放器groupIndex\r\n     isGray:false\r\n    }\r\n  },\r\n  created(){\r\n    this.isGray = ((JSON.parse(localStorage.getItem('loginRes'))).user.operationPermissions) == 1 ? false:true;\r\n    this.$bus.$on('showPlay',param=>{\r\n      this.setQmlPlayerProperty(param)\r\n    })\r\n    this.$bus.$on('recodeSwitchFlag',val=>{\r\n      this.recodeSwitchFlag = val\r\n    })\r\n    this.$bus.$on('receiveObj',val=>{\r\n      this.receiveObj = val\r\n    })\r\n    this.$bus.$on('dottingModal',val=>{\r\n      this.dottingModal = val\r\n      this.dottingName = ''\r\n    })\r\n  },\r\n  destroyed(){\r\n    this.$bus.$off('showPlayer')\r\n    this.$bus.$off('recodeSwitchFlag')\r\n    this.$bus.$off('receiveObj')\r\n    this.$bus.$off('dottingModal')\r\n\r\n  },\r\n  mounted(){\r\n    // setTimeout(() => {\r\n    //   // console.log(000,this.$sumaQtPlayer)\r\n    //   console.log(555,this.$sumaQtPlayer);\r\n    // })\r\n    console.log(999,this.$sumaQtPlayer)\r\n     setTimeout(() => {\r\n       let vm = this\r\n      let arr  = []\r\n      if(vm.$sumaQtPlayer){\r\n        //  vm.getServerTime()/**v6.0.202007版本去掉 */\r\n        //  vm.getVersion()\r\n      }\r\n     }, 0);\r\n  },\r\n  methods:{\r\n    //获取服务器时间\r\n    getServerTime(){\r\n      api.getServerTime({}).then(res=>{\r\n      let secondTimeStamp = res.result.secondTimeStamp\r\n       this.setQmlPlayerServerTime(secondTimeStamp)\r\n      })\r\n    },\r\n    recodeConfirm(){\r\n      if(this.recodeSwitchFlag){\r\n        //========================开启录制开关\r\n         let param = {\r\n              isStartRecord:0,//是否开启录制0开始 1关闭\r\n              autoRecordPlan:this.isStart,//是否开启自动录制计划 0关闭 1开启\r\n              channelIdList:[this.receiveObj.channelId]\r\n            }\r\n            let arr = JSON.parse(sessionStorage.getItem('monitorState'))\r\n            api.startOrStopRecord(param).then(res=>{\r\n              this.$Message.success('录制已启动')\r\n              this.$emit('changeRecode')\r\n              this.recodePlanConfirmModal = false\r\n               /**显示播放器 */\r\n              let param = [{\r\n                groupIndex:-2,\r\n                playerIndex:-2,\r\n                channelId:'',\r\n                business:{},\r\n                player:{\r\n                  isVisible:true\r\n                }\r\n              }]\r\n              this.setQmlPlayerProperty(param)\r\n              //录制操作成功后重新设置状态\r\n              for(let item of arr){\r\n                if(item.playerIndex === this.receiveObj.playerIndex){\r\n                  item.business.isRecording = true\r\n                }else{\r\n                  //判断其他窗口是否有相同通道\r\n                  if(item.channelId === this.receiveObj.channelId){\r\n                    item.business.isRecording = true\r\n                  }\r\n                }\r\n              }\r\n              this.setQmlPlayerProperty(arr)\r\n              sessionStorage.setItem('monitorState',JSON.stringify(arr))\r\n            },err=>{\r\n              //操作失败重置\r\n               this.setQmlPlayerProperty(arr)\r\n            })\r\n      }else{\r\n        let param = {\r\n              isStartRecord:1,//是否开启录制0开始 1关闭\r\n              autoRecordPlan:this.isStart,//是否开启自动录制计划 0关闭 1开启\r\n              channelIdList:[this.receiveObj.channelId]\r\n            }\r\n            let arr = JSON.parse(sessionStorage.getItem('monitorState'))\r\n            api.startOrStopRecord(param).then(res=>{\r\n              this.$Message.success('录制已关闭')\r\n              this.$emit('changeRecode')\r\n              this.recodePlanConfirmModal = false\r\n               /**显示播放器 */\r\n              let param = [{\r\n                  groupIndex:-2,\r\n                  playerIndex:-2,\r\n                  channelId:'',\r\n                  business:{},\r\n                  player:{\r\n                    isVisible:true\r\n                  }\r\n                }]\r\n                this.setQmlPlayerProperty(param)\r\n              //录制操作成功后重新设置状态\r\n              for(let item of arr){\r\n                if(item.playerIndex === this.receiveObj.playerIndex){\r\n                  item.business.isRecording = false\r\n                }else{\r\n                  if(item.channelId === this.receiveObj.channelId){\r\n                    item.business.isRecording = false\r\n                  }\r\n                }\r\n              }\r\n              this.setQmlPlayerProperty(arr)\r\n              sessionStorage.setItem('monitorState',JSON.stringify(arr))\r\n            },err=>{\r\n               this.setQmlPlayerProperty(arr)\r\n               this.recodePlanConfirmModal = false\r\n            })\r\n      }\r\n    },\r\n    //===录制关闭\r\n    recodeCancel(){\r\n      this.recodePlanConfirmModal = false\r\n      let arr = JSON.parse(sessionStorage.getItem('monitorState'))\r\n      this.setQmlPlayerProperty(arr)\r\n      /**显示播放器 */\r\n      let param = [{\r\n          groupIndex:-2,\r\n          playerIndex:-2,\r\n          channelId:'',\r\n          business:{},\r\n          player:{\r\n            isVisible:true\r\n          }\r\n        }]\r\n        this.setQmlPlayerProperty(param)\r\n    },\r\n    /** 打点确认 */\r\n    dottingConfirm(){\r\n      if(!this.dottingName){\r\n        this.$Message.info('请输入打点名称')\r\n        return false\r\n      }else if(!(this.dottingName.trim())){\r\n        this.$Message.info('名称不能仅包含空格')\r\n        return false\r\n      }\r\n      let  arr = JSON.parse(sessionStorage.getItem('monitorState'))\r\n      let startTime = ''\r\n      for(let item of arr){\r\n        if(item.playerIndex === this.receiveObj.playerIndex){\r\n          startTime = item.timestamp\r\n          break\r\n        }\r\n      }\r\n      //======================创建手动打点列表掉接口部分\r\n      let param = {\r\n        channelId:this.receiveObj.channelId,\r\n        name:this.dottingName,\r\n        startDate:this.timestampToTime(startTime),\r\n        endDate:this.timestampToTime(this.receiveObj.timestamp),\r\n        type:'2'\r\n      }\r\n      api.createChannelProgram(param).then(res=>{\r\n        this.$Message.success('导播节目添加成功')\r\n        this.$emit('dottedSuccess')\r\n        //创建成功后\r\n          for(let item of arr){\r\n            if(item.playerIndex === this.receiveObj.playerIndex){\r\n              item.business.isDotting = false\r\n            }else{\r\n              if(item.channelId === this.receiveObj.channelId){\r\n                item.business.isDotting = false\r\n              }\r\n            }\r\n          }\r\n          this.setQmlPlayerProperty(arr)\r\n          sessionStorage.setItem('monitorState',JSON.stringify(arr))\r\n          this.dottingModal = false\r\n      },err=>{\r\n        //如果打点失败重置\r\n        this.setQmlPlayerProperty(arr)\r\n      })\r\n    },\r\n    //打点取消\r\n    dottingCancel(){\r\n      let  arr = JSON.parse(sessionStorage.getItem('monitorState'))\r\n      this.dottingModal = false\r\n      this.setQmlPlayerProperty(arr)\r\n    },\r\n    //转化unit时间戳时间格式\r\n    timestampToTime(timestamp){\r\n      let  date = new Date(timestamp * 1000)\r\n      let year = date.getFullYear()\r\n      let month = (date.getMonth()+1 < 10 ? '0'+(date.getMonth()+1) : date.getMonth()+1)\r\n      let day = date.getDate()\r\n      let hour = date.getHours()\r\n      let min = date.getMinutes()\r\n      let s = date.getSeconds()\r\n      return year+\"-\"+month+'-'+day + ' '+hour+\":\"+min+\":\"+s\r\n    },\r\n    //设置服务器时间\r\n    setQmlPlayerServerTime(serverUnixTimestamp) {\r\n        var jsonDemo = {\r\n          serverUnixTimestamp,\r\n        };\r\n        this.$sumaQtPlayer.setServerTime(JSON.stringify(jsonDemo), function (\r\n          callback\r\n        ) {\r\n         \r\n        });\r\n    },\r\n    //创建播放器\r\n    createQmlPlayer(x,y,witdh,height,rows,columns,mode){\r\n      let vm = this\r\n       //记录现在创造播放器类型\r\n      vm.playerType = 'rec'\r\n      sessionStorage.setItem('playerType','rec')\r\n      let param = {\r\n        mode:mode,\r\n        x: x,\r\n        y: y,\r\n        width: witdh,\r\n        height: height,\r\n        rows: rows,\r\n        columns: columns,\r\n      };\r\n      this.$sumaQtPlayer.createPlayer(JSON.stringify(param), function (\r\n        callback\r\n      ) {\r\n        let res = JSON.parse(callback)\r\n          if(res.status === 'OK'){\r\n           \r\n            //创建成功时，每次回复播放地址，恢复打点和录制中与否的状态\r\n            //1.创建成功后恢复播放\r\n            vm.prepareQmlPlayer1()\r\n            //2恢复打点和录制状态\r\n              let arr = JSON.parse(sessionStorage.getItem('monitorState'))\r\n              if(arr){\r\n                vm.setQmlPlayerProperty(arr)\r\n              }\r\n          }\r\n      })\r\n    },\r\n    //初始化播放器（拖拽）\r\n    prepareQmlPlayer(x,y,channelName,channelId,channelUrl,recodeFlag,timeshiftTotalInSec){\r\n      let vm = this\r\n        let param = [\r\n          {\r\n            x: x,\r\n            y: y,\r\n            groupIndex:-1,\r\n            playerIndex: -1, //playerIndex不为-1，则优先使用playerIndex初始化\r\n            playerInfo: {\r\n              channelId: channelId,\r\n              channelName:channelName,\r\n              channelUrl: channelUrl,\r\n              timeshiftTotalInSec:timeshiftTotalInSec\r\n            },\r\n          },\r\n        ];\r\n        this.recordPlayUrlChange = sessionStorage.getItem('initPlay')?JSON.parse(sessionStorage.getItem('initPlay')):[]\r\n        this.$sumaQtPlayer.preparePlayer(JSON.stringify(param), function (\r\n          callback\r\n        ) {\r\n          let callbackObj = JSON.parse(callback)\r\n          //====================拖拽进行初始化录制开关\r\n          if(callbackObj.status===\"OK\"){\r\n            let recodeObj = [{\r\n              playerIndex:callbackObj.data[0].playerIndex,\r\n              groupIndex:callbackObj.data[0].groupIndex,\r\n              channelId:callbackObj.data[0].channelId,\r\n               business: {\r\n                  isRecording: recodeFlag,\r\n                  isDotting: false\r\n                },\r\n                player: {}\r\n            }]\r\n            vm.setQmlPlayerProperty(recodeObj)\r\n            //存储录制信息\r\n            if(!sessionStorage.getItem('monitorState')){\r\n              //如果拖拽时无存储信息就存下来\r\n              sessionStorage.setItem('monitorState',JSON.stringify(recodeObj))\r\n            }else{\r\n              let arr = JSON.parse(sessionStorage.getItem('monitorState'))\r\n              let flag = true\r\n              for(let item of arr){\r\n                if(item.playerIndex === recodeObj[0].playerIndex){\r\n                  flag = false\r\n                  item.channelId = recodeObj[0].channelId\r\n                  item.business = recodeObj[0].business\r\n                  item.player = recodeObj[0].player\r\n                  sessionStorage.setItem('monitorState',JSON.stringify(arr))\r\n                }\r\n              }\r\n              if(flag){\r\n                arr.push(recodeObj[0])\r\n                sessionStorage.setItem('monitorState',JSON.stringify(arr))\r\n              }\r\n            }\r\n            //记录数据作为第二次进入页面初始化播放器（重置播放地址）\r\n            var obj = {}\r\n            obj.x =100\r\n            obj.y =100\r\n            obj.playerIndex = JSON.parse(callback).data[0].playerIndex\r\n            obj.groupIndex = JSON.parse(callback).data[0].groupIndex\r\n            obj.playerInfo = { \r\n              channelId,\r\n              channelName,\r\n              channelUrl,\r\n              timeshiftTotalInSec\r\n            }\r\n            let flag = true//是否不重复\r\n            for(let item of vm.recordPlayUrlChange){\r\n              if(item.playerIndex === obj.playerIndex){\r\n                //如果playerIndex相同替换\r\n                // item = JSON.parse(JSON.stringify(obj))\r\n                for(let key in obj){\r\n                  vm.$set(item,key,obj[key])\r\n                }\r\n                flag = false\r\n                break\r\n              }\r\n            }\r\n            if(flag){\r\n              vm.recordPlayUrlChange.push(obj)\r\n            }\r\n            sessionStorage.setItem('initPlay',JSON.stringify(vm.recordPlayUrlChange))\r\n          }\r\n        });\r\n    },\r\n    //第二次页面进入初始\r\n    prepareQmlPlayer1(){\r\n        let vm = this\r\n        let param = []\r\n        this.recordPlayUrlChange = sessionStorage.getItem('initPlay')?JSON.parse(sessionStorage.getItem('initPlay')):[]\r\n        if(!this.recordPlayUrlChange.length){\r\n          //如果为空就不初始化视频\r\n          return false\r\n        }\r\n        for(let item of this.recordPlayUrlChange){\r\n          let obj = {}\r\n          obj.x =100\r\n          obj.y =100\r\n          obj.playerIndex = item.playerIndex\r\n          obj.groupIndex = item.groupIndex\r\n          obj.playerInfo = item.playerInfo\r\n          param.push(obj)\r\n        }\r\n        this.$sumaQtPlayer.preparePlayer(JSON.stringify(param), function (\r\n          callback\r\n        ) {\r\n          \r\n        });\r\n    },\r\n    //初始化播放流\r\n    prepareQmlPlayer2(param){\r\n        this.$sumaQtPlayer.preparePlayer(JSON.stringify(param), function (\r\n          callback\r\n        ) {\r\n          \r\n        });\r\n    },\r\n     //设定播放器\r\n     setQmlPlayerProperty(param){\r\n        this.$sumaQtPlayer.setPlayerProperty(JSON.stringify(param), function (\r\n          callback\r\n        ) {\r\n        });\r\n     },\r\n     //调整播放器\r\n     adjustQmlPlayer(param){\r\n        this.$sumaQtPlayer.adjustPlayer(JSON.stringify(param), function (callback) {\r\n        });\r\n     },\r\n     //替换video\r\n     replaceVideoWithPlayer1(param){\r\n       let vm = this\r\n        vm.playerType = 'base'\r\n        sessionStorage.setItem('playerType','base')\r\n        this.$sumaQtPlayer.replaceVideoWithPlayer(JSON.stringify(param),function(callback){\r\n         \r\n        })\r\n     },\r\n    //销毁播放器\r\n    destroyQmlPlayer(param){\r\n     this.$sumaQtPlayer.destroyPlayer(JSON.stringify(param),function (callback) {\r\n      });\r\n    },\r\n    //播放器添加版本号\r\n    setVersionInfo(param){\r\n     this.$sumaQtPlayer.setVersionInfo(JSON.stringify(param),function (callback) {\r\n  \r\n      });\r\n    },\r\n    //获取版本号\r\n    getVersion(){\r\n      let obj={}\r\n      api.getVersion(obj).then(res=>{\r\n        res.result\r\n        let param = {\r\n          versionCode:0,\r\n          versionName:res.result,\r\n          versionDescription:''\r\n        }\r\n        this.setVersionInfo(param)\r\n      })\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style>\r\n  .planModal .ivu-modal-wrap[style]{position: static;}\r\n  .planModal .ivu-modal{\r\n    top: 0\r\n  }\r\n  .ivu-modal-mask{\r\n    display: none\r\n  }\r\n  .monRoot{\r\n    position: absolute;\r\n    left: 50%;\r\n    top:50%;\r\n    transform: translate(-50%,-50%);\r\n  }\r\n  .planModal .ivu-modal-body{\r\n    height: 340px\r\n  }\r\n</style>\r\n\r\n\r\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./player.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./player.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./player.vue?vue&type=template&id=c4a7b424&\"\nimport script from \"./player.vue?vue&type=script&lang=js&\"\nexport * from \"./player.vue?vue&type=script&lang=js&\"\nimport style0 from \"./player.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticStyle:{\"width\":\"100%\",\"height\":\"38px\",\"background\":\"rgba(13,67,111,1)\",\"box-shadow\":\"0px 2px 10px 0px rgba(0, 0, 0, 0.05)\",\"font-size\":\"14px\",\"font-family\":\"Microsoft YaHei\",\"font-weight\":\"400\",\"color\":\"rgba(255,255,255,1)\",\"padding-left\":\"24px\",\"line-height\":\"38px\"}},[_vm._v(\" 通道监控 \")]),_c('div',{staticStyle:{\"marginTop\":\"10px\"}},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.showDetail),expression:\"!showDetail\"}],staticStyle:{\"display\":\"flex\",\"justify-content\":\"flex-start\"}},[_c('Card',{style:({width:674*_vm.widthBase+'px',marginLeft:'10px'})},[_c('div',{attrs:{\"id\":\"chnnel_mon_left\"}},[_c('div',{staticStyle:{\"display\":\"flex\",\"justify-content\":\"space-between\"}},[_c('p',{staticClass:\"showRate\",staticStyle:{\"height\":\"50px\",\"lineHeight\":\"50px\",\"width\":\"60%\"}},[_c('Tabs',{on:{\"on-click\":_vm.showChannel},model:{value:(_vm.canvas),callback:function ($$v) {_vm.canvas=$$v},expression:\"canvas\"}},[_c('TabPane',{attrs:{\"label\":\"2*2画面\",\"name\":\"2*2\"}}),(false)?_c('TabPane',{attrs:{\"label\":\"3*3画面\",\"name\":\"3*3\"}}):_vm._e(),(_vm.createMeidaNum>=4)?_c('TabPane',{attrs:{\"label\":\"4*4画面\",\"name\":\"4*4\"}}):_vm._e()],1)],1),_c('div',[_c('Button',{staticClass:\"btn-right\",attrs:{\"type\":\"primary\"},on:{\"click\":_vm.allShut}},[_vm._v(\"全部关闭\")]),_c('Button',{staticClass:\"btn-right\",staticStyle:{\"background\":\"rgba(13,67,111,1)\",\"color\":\"rgba(199,219,244,1)\"},attrs:{\"loading\":_vm.returnBtnLoadingStatus},on:{\"click\":_vm.returnChannel}},[_vm._v(\"返回通道管理\")])],1)]),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.isbrower),expression:\"!isbrower\"}],staticStyle:{\"width\":\"100%\",\"height\":\"75%\",\"border\":\"1px solid gray\",\"display\":\"flex\",\"flex-wrap\":\"wrap\",\"position\":\"relative\",\"background\":\"#263c4d\"},attrs:{\"id\":\"showVideoPlayer\"},on:{\"dragover\":_vm.allowDrop}},[_c('div',{staticClass:\"monRoot\"},[_c('Modal',{staticClass:\"planModal\",attrs:{\"width\":\"638\",\"closable\":false,\"mask-closable\":false,\"transfer\":false},model:{value:(_vm.recodePlanConfirmModal),callback:function ($$v) {_vm.recodePlanConfirmModal=$$v},expression:\"recodePlanConfirmModal\"}},[_c('Form',{ref:\"formInline\",staticStyle:{\"margin-top\":\"52px\",\"padding\":\"0 68px\"}},[_c('FormItem',[_c('span',{staticStyle:{\"fontSize\":\"16px\",\"font-weight\":\"400\",\"font-family\":\"Microsoft YaHei\",\"color\":\"rgba(254,254,254,1)\"}},[_vm._v(\"是否继续遵循录制计划执行?\")]),_c('label',{staticStyle:{\"margin-left\":\"45px\"}},[_c('RadioGroup',{staticStyle:{\"color\":\"#fff\"},on:{\"on-change\":_vm.recodeSwitch},model:{value:(_vm.isStart),callback:function ($$v) {_vm.isStart=$$v},expression:\"isStart\"}},[_c('Radio',{attrs:{\"label\":1}},[_vm._v(\"是\")]),_c('Radio',{attrs:{\"label\":0}},[_vm._v(\"否\")])],1)],1)]),_c('FormItem',{staticStyle:{\"marginTop\":\"42px\"}},[_c('div',{staticStyle:{\"color\":\"rgba(175,188,204,1)\",\"font-weight\":\"400\",\"font-size\":\"14px\",\"font-family\":\"Microsoft YaHei\"}},[_vm._v(\" 当您选择\\\"是\\\"，打开/关闭通道后，系统后台会打开/关闭当前录制，后续从录制计划中设置的下一时间段开始按各通道录制计划执行，且会根据录制计划自动打开/关闭通道。 \")])]),_c('FormItem',[_c('div',{staticStyle:{\"color\":\"rgba(175,188,204,1)\",\"font-weight\":\"400\",\"font-size\":\"14px\",\"font-family\":\"Microsoft YaHei\"}},[_vm._v(\" 当您选择\\\"否\\\"，录制计划失效，打开通道，系统后台将一直录制；关闭通道，系统后台将停止录制，可通过手动开启录制计划中的开关，重新激活录制计划。 \")])])],1),_c('p',{staticStyle:{\"display\":\"flex\",\"justify-content\":\"center\",\"margin-top\":\"38px\",\"margin-bottom\":\"20px\"},attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('Button',{staticStyle:{\"background\":\"rgba(13,67,111,1)\",\"color\":\"rgba(199,219,244,1)\"},on:{\"click\":_vm.recodeCancel}},[_vm._v(\"取消\")]),_c('Button',{staticStyle:{\"margin-left\":\"49px\"},attrs:{\"type\":\"primary\",\"disabled\":_vm.isGray},on:{\"click\":_vm.recodeConfirm}},[_vm._v(\"确定\")])],1)],1)],1)]),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.isbrower),expression:\"isbrower\"}],staticClass:\"mainvideo\",on:{\"dragover\":_vm.allowDrop}},[_c('SumaPlayerMain',{ref:\"videoMain\",staticStyle:{\"width\":\"100%\",\"height\":\"100%\"}})],1)])]),_c('div',{style:({width:160*_vm.widthBase+'px',background:'rgba(22,60,105,1)','margin-left':10*_vm.widthBase+'px',padding:'0 6px'}),attrs:{\"id\":\"treeCard\"}},[_c('div',[_c('p',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.showDetail),expression:\"!showDetail\"}],staticStyle:{\"height\":\"50px\",\"lineHeight\":\"50px\",\"width\":\"35%\"}},[_c('Button',{staticStyle:{\"background\":\"rgba(13,67,111,1)\",\"color\":\"rgba(199,219,244,1)\"},attrs:{\"disabled\":_vm.isGray},on:{\"click\":_vm.addClass}},[_vm._v(\"添加分类\")])],1),_c('div',{staticStyle:{\"width\":\"100%\",\"overflow-y\":\"auto\",\"font-size\":\"14px\"},attrs:{\"id\":\"elTree\"}},[_c('el-tree',{attrs:{\"data\":_vm.treeData,\"draggable\":\"\",\"default-expand-all\":true,\"expand-on-click-node\":false,\"allow-drop\":_vm.drop,\"allow-drag\":_vm.dropAble,\"render-content\":_vm.renderContent},on:{\"node-drag-start\":_vm.handleDragStart,\"node-drag-enter\":_vm.handleDragEnter,\"node-drag-leave\":_vm.handleDragLeave,\"node-drag-over\":_vm.handleDragOver,\"node-drag-end\":_vm.handleDragEnd,\"node-drop\":_vm.handleDrop}})],1)])])],1),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.showDetail),expression:\"showDetail\"}],staticStyle:{\"marginTop\":\"10px\"}},[_c('Card',[_c('div',{staticClass:\"btn_change\"},[_c('p',{staticClass:\"showRate\"},[_c('Tabs',{staticStyle:{\"width\":\"222px\",\"font-size\":\"14px\"},on:{\"on-click\":_vm.importClick}},[_c('TabPane',{attrs:{\"label\":\"导播列表录入\",\"name\":\"import\"}}),_c('TabPane',{attrs:{\"label\":\"回看及导出\",\"name\":\"export\"}})],1)],1),_c('p',{staticClass:\"showRate\",staticStyle:{\"margin-left\":\"30px\",\"width\":\"332px\"}},[_c('Tabs',{on:{\"on-click\":_vm.showChannel},model:{value:(_vm.canvas),callback:function ($$v) {_vm.canvas=$$v},expression:\"canvas\"}},[_c('TabPane',{attrs:{\"label\":\"2*2画面\",\"name\":\"2*2\"}}),(_vm.createMeidaNum>=3)?_c('TabPane',{attrs:{\"label\":\"3*3画面\",\"name\":\"3*3\"}}):_vm._e(),(_vm.createMeidaNum>=4)?_c('TabPane',{attrs:{\"label\":\"4*4画面\",\"name\":\"4*4\"}}):_vm._e()],1)],1),_c('Button',{staticStyle:{\"margin-left\":\"30px\"},attrs:{\"type\":\"primary\",\"disabled\":_vm.isGray},on:{\"click\":_vm.allShut}},[_vm._v(\"全部关闭\")]),_c('Button',{staticClass:\"btn-right\",staticStyle:{\"background\":\"rgba(13,67,111,1)\",\"color\":\"rgba(199,219,244,1)\"},attrs:{\"loading\":_vm.returnBtnLoadingStatus},on:{\"click\":_vm.returnChannel}},[_vm._v(\"返回通道管理\")])],1),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.flag == 'import'),expression:\"flag == 'import'\"}]},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.importDetail),expression:\"!importDetail\"}]},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.isbrower),expression:\"!isbrower\"}],staticStyle:{\"width\":\"100%\",\"height\":\"0\",\"border\":\"1px solid gray\",\"position\":\"relative\",\"background\":\"#263c4d\"},attrs:{\"id\":\"importPlayer\"}},[_c('div',{staticClass:\"monRoot\"},[_c('Modal',{staticClass:\"planModal\",attrs:{\"width\":\"638\",\"closable\":false,\"mask-closable\":false,\"transfer\":false},model:{value:(_vm.recodePlanConfirmModal),callback:function ($$v) {_vm.recodePlanConfirmModal=$$v},expression:\"recodePlanConfirmModal\"}},[_c('Form',{ref:\"formInline\",staticStyle:{\"margin-top\":\"52px\",\"padding\":\"0 68px\"}},[_c('FormItem',[_c('span',{staticStyle:{\"fontSize\":\"16px\",\"font-weight\":\"400\",\"font-family\":\"Microsoft YaHei\",\"color\":\"rgba(254,254,254,1)\"}},[_vm._v(\"是否继续遵循录制计划执行?\")]),_c('label',{staticStyle:{\"margin-left\":\"45px\"}},[_c('RadioGroup',{staticStyle:{\"color\":\"#fff\"},on:{\"on-change\":_vm.recodeSwitch},model:{value:(_vm.isStart),callback:function ($$v) {_vm.isStart=$$v},expression:\"isStart\"}},[_c('Radio',{attrs:{\"label\":1}},[_vm._v(\"是\")]),_c('Radio',{attrs:{\"label\":0}},[_vm._v(\"否\")])],1)],1)]),_c('FormItem',{staticStyle:{\"marginTop\":\"42px\"}},[_c('div',{staticStyle:{\"color\":\"rgba(175,188,204,1)\",\"font-weight\":\"400\",\"font-size\":\"14px\",\"font-family\":\"Microsoft YaHei\"}},[_vm._v(\" 当您选择\\\"是\\\"，打开/关闭通道后，系统后台会打开/关闭当前录制，后续从录制计划中设置的下一时间段开始按各通道录制计划执行，且会根据录制计划自动打开/关闭通道。 \")])]),_c('FormItem',[_c('div',{staticStyle:{\"color\":\"rgba(175,188,204,1)\",\"font-weight\":\"400\",\"font-size\":\"14px\",\"font-family\":\"Microsoft YaHei\"}},[_vm._v(\" 当您选择\\\"否\\\"，录制计划失效，打开通道，系统后台将一直录制；关闭通道，系统后台将停止录制，可通过手动开启录制计划中的开关，重新激活录制计划。 \")])])],1),_c('p',{staticStyle:{\"display\":\"flex\",\"justify-content\":\"center\",\"margin-top\":\"38px\",\"margin-bottom\":\"20px\"},attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('Button',{staticStyle:{\"background\":\"rgba(13,67,111,1)\",\"color\":\"rgba(199,219,244,1)\"},on:{\"click\":_vm.recodeCancel}},[_vm._v(\"取消\")]),_c('Button',{staticStyle:{\"margin-left\":\"49px\"},attrs:{\"type\":\"primary\",\"disabled\":_vm.isGray},on:{\"click\":_vm.recodeConfirm}},[_vm._v(\"确定\")])],1)],1)],1)]),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.isbrower),expression:\"isbrower\"}]},[_c('SumaPlayerImportMain',{ref:\"videoImportMain\",staticStyle:{\"width\":\"100%\",\"height\":\"100%\"}})],1),_c('div',{staticClass:\"btn-right\",staticStyle:{\"width\":\"100%\",\"display\":\"flex\",\"justify-content\":\"center\",\"marginTop\":\"30px\",\"align-items\":\"center\"}},[_c('Button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.importByHand}},[_vm._v(_vm._s(_vm.importListButton))]),_c('Upload',{staticStyle:{\"marginTop\":\"8px\"},attrs:{\"action\":\"//jsonplaceholder.typicode.com/posts/\",\"before-upload\":_vm.handleUpload}},[_c('Button',{staticClass:\"btn-right\",staticStyle:{\"background\":\"rgba(13,67,111,1)\",\"color\":\"rgba(199,219,244,1)\"},attrs:{\"disabled\":_vm.isGray}},[_vm._v(\"从文件导入\")])],1)],1)]),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.importDetail),expression:\"importDetail\"}],staticStyle:{\"display\":\"flex\",\"justify-content\":\"space-between\"}},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.isbrower),expression:\"!isbrower\"}],staticStyle:{\"width\":\"62.5%\"}},[_c('div',{style:({width:'100%',height:this.innerHeight-460+'px','padding-top':'56.25%',border:'1px solid #3aa7dd',position:'relative',background:'#263c4d'}),attrs:{\"id\":\"fullArea\"}},[_c('div',{staticClass:\"monRoot\"},[_c('Modal',{staticClass:\"planModal\",attrs:{\"width\":\"638\",\"closable\":false,\"mask-closable\":false,\"transfer\":false},model:{value:(_vm.recodePlanConfirmModal),callback:function ($$v) {_vm.recodePlanConfirmModal=$$v},expression:\"recodePlanConfirmModal\"}},[_c('Form',{ref:\"formInline\",staticStyle:{\"margin-top\":\"52px\",\"padding\":\"0 68px\"}},[_c('FormItem',[_c('span',{staticStyle:{\"fontSize\":\"16px\",\"font-weight\":\"400\",\"font-family\":\"Microsoft YaHei\",\"color\":\"rgba(254,254,254,1)\"}},[_vm._v(\"是否继续遵循录制计划执行?\")]),_c('label',{staticStyle:{\"margin-left\":\"45px\"}},[_c('RadioGroup',{staticStyle:{\"color\":\"#fff\"},on:{\"on-change\":_vm.recodeSwitch},model:{value:(_vm.isStart),callback:function ($$v) {_vm.isStart=$$v},expression:\"isStart\"}},[_c('Radio',{attrs:{\"label\":1}},[_vm._v(\"是\")]),_c('Radio',{attrs:{\"label\":0}},[_vm._v(\"否\")])],1)],1)]),_c('FormItem',{staticStyle:{\"marginTop\":\"42px\"}},[_c('div',{staticStyle:{\"color\":\"rgba(175,188,204,1)\",\"font-weight\":\"400\",\"font-size\":\"14px\",\"font-family\":\"Microsoft YaHei\"}},[_vm._v(\" 当您选择\\\"是\\\"，打开/关闭通道后，系统后台会打开/关闭当前录制，后续从录制计划中设置的下一时间段开始按各通道录制计划执行，且会根据录制计划自动打开/关闭通道。 \")])]),_c('FormItem',[_c('div',{staticStyle:{\"color\":\"rgba(175,188,204,1)\",\"font-weight\":\"400\",\"font-size\":\"14px\",\"font-family\":\"Microsoft YaHei\"}},[_vm._v(\" 当您选择\\\"否\\\"，录制计划失效，打开通道，系统后台将一直录制；关闭通道，系统后台将停止录制，可通过手动开启录制计划中的开关，重新激活录制计划。 \")])])],1),_c('p',{staticStyle:{\"display\":\"flex\",\"justify-content\":\"center\",\"margin-top\":\"38px\",\"margin-bottom\":\"20px\"},attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('Button',{staticStyle:{\"background\":\"rgba(13,67,111,1)\",\"color\":\"rgba(199,219,244,1)\"},on:{\"click\":_vm.recodeCancel}},[_vm._v(\"取消\")]),_c('Button',{staticStyle:{\"margin-left\":\"49px\"},attrs:{\"type\":\"primary\",\"disabled\":_vm.isGray},on:{\"click\":_vm.recodeConfirm}},[_vm._v(\"确定\")])],1)],1)],1)]),_c('div',{staticClass:\"btn-right\",staticStyle:{\"width\":\"100%\",\"display\":\"flex\",\"justify-content\":\"center\",\"marginTop\":\"30px\",\"align-items\":\"center\"}},[_c('Button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.importByHand}},[_vm._v(_vm._s(_vm.importListButton))]),_c('Upload',{staticStyle:{\"marginTop\":\"8px\"},attrs:{\"action\":\"//jsonplaceholder.typicode.com/posts/\",\"before-upload\":_vm.handleUpload}},[_c('Button',{staticClass:\"btn-right\",staticStyle:{\"background\":\"rgba(13,67,111,1)\",\"color\":\"rgba(199,219,244,1)\"},attrs:{\"disabled\":_vm.isGray}},[_vm._v(\"从文件导入\")])],1)],1)]),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.isbrower),expression:\"isbrower\"}],staticStyle:{\"width\":\"62.5%\"}},[_c('SumaPlayerImportDetail',{ref:\"videoImportDetail\",staticStyle:{\"width\":\"100%\",\"height\":\"100%\"}})],1),_c('div',{staticStyle:{\"width\":\"37.5%\"}},[_c('Form',{staticStyle:{\"width\":\"95%\",\"margin\":\"0px auto\"},attrs:{\"label-width\":83,\"label-position\":\"left\",\"id\":\"importFormId\"}},[_c('FormItem',{attrs:{\"label\":\"日期：\"}},[_c('DatePicker',{style:({width:200*_vm.widthBase+'px'}),attrs:{\"type\":\"date\",\"placeholder\":\"请选择日期\"},on:{\"on-change\":_vm.importDateChange},model:{value:(_vm.importDate),callback:function ($$v) {_vm.importDate=$$v},expression:\"importDate\"}})],1),_c('FormItem',{attrs:{\"label\":\"导播列表：\"}},[_c('div',{staticStyle:{\"display\":\"flex\",\"align-items\":\"center\"}},[_c('Button',{staticStyle:{\"background\":\"rgba(13,67,111,1)\",\"color\":\"rgba(199,219,244,1)\",\"marginBottom\":\"6px\"},attrs:{\"disabled\":_vm.isGray},on:{\"click\":_vm.addMore}},[_vm._v(\"新建\")])],1)])],1),_c('div',{staticStyle:{\"width\":\"95%\",\"height\":\"400px\",\"border\":\"1px solid #3aa7dd\",\"border-radius\":\"5px\",\"margin\":\"7px auto\",\"background\":\"rgba(22,60,105,1)\",\"overflow-y\":\"auto\",\"overflow-x\":\"hidden\"},attrs:{\"id\":\"importList\"}},_vm._l((_vm.timeArr),function(item,index){return _c('div',{key:index,style:({width:278*_vm.widthBase+'px',display:'flex',margin:'5px','align-items':'center','border-bottom':'1px solid #576F8C',padding:'20px 0'})},[_c('div',[_c('TimePicker',{style:({width:237*_vm.widthBase+'px'}),attrs:{\"type\":\"timerange\",\"placeholder\":\"起始时间 - 结束时间\",\"editable\":false,\"disabled\":_vm.isGray,\"placement\":\"bottom-start\",\"transfer\":true,\"transfer-class-name\":\"timerTransfer\"},model:{value:(item.value1),callback:function ($$v) {_vm.$set(item, \"value1\", $$v)},expression:\"item.value1\"}}),_c('br'),_c('Input',{style:({width:237*_vm.widthBase+'px',marginTop:'10px'}),attrs:{\"placeholder\":\"请输入名称\",\"disabled\":_vm.isGray},model:{value:(item.name1),callback:function ($$v) {_vm.$set(item, \"name1\", $$v)},expression:\"item.name1\"}})],1),_c('div',{staticStyle:{\"margin-left\":\"4px\"}},[_c('Icon',{style:({cursor:_vm.timeArr.length===1||_vm.isGray?'not-allowed':'pointer'}),attrs:{\"type\":\"ios-close-circle-outline\",\"size\":\"30\",\"disabled\":_vm.timeArr.length===1},on:{\"click\":function($event){return _vm.remove(index)}}})],1)])}),0),_c('div',{staticStyle:{\"text-align\":\"center\",\"margin\":\"20px 0px\"}},[_c('Button',{attrs:{\"type\":\"primary\",\"disabled\":_vm.isGray},on:{\"click\":_vm.createChannelProgramList}},[_vm._v(\"保存\")]),_c('Button',{staticClass:\"btn-right\",staticStyle:{\"background\":\"rgba(13,67,111,1)\",\"color\":\"rgba(199,219,244,1)\"},attrs:{\"disabled\":_vm.isGray},on:{\"click\":_vm.exportFileList}},[_vm._v(\"导出\")])],1)],1)])]),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.flag=='export'),expression:\"flag=='export'\"}]},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.exportDetail),expression:\"!exportDetail\"}]},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.isbrower),expression:\"!isbrower\"}],staticStyle:{\"width\":\"100%\",\"height\":\"0\",\"border\":\"1px solid gray\",\"position\":\"relative\",\"background\":\"#263c4d\"},attrs:{\"id\":\"exportPlayer\"}},[_c('div',{staticClass:\"monRoot\"},[_c('Modal',{staticClass:\"planModal\",attrs:{\"width\":\"638\",\"closable\":false,\"mask-closable\":false,\"transfer\":false},model:{value:(_vm.recodePlanConfirmModal),callback:function ($$v) {_vm.recodePlanConfirmModal=$$v},expression:\"recodePlanConfirmModal\"}},[_c('Form',{ref:\"formInline\",staticStyle:{\"margin-top\":\"52px\",\"padding\":\"0 68px\"}},[_c('FormItem',[_c('span',{staticStyle:{\"fontSize\":\"16px\",\"font-weight\":\"400\",\"font-family\":\"Microsoft YaHei\",\"color\":\"rgba(254,254,254,1)\"}},[_vm._v(\"是否继续遵循录制计划执行?\")]),_c('label',{staticStyle:{\"margin-left\":\"45px\"}},[_c('RadioGroup',{staticStyle:{\"color\":\"#fff\"},on:{\"on-change\":_vm.recodeSwitch},model:{value:(_vm.isStart),callback:function ($$v) {_vm.isStart=$$v},expression:\"isStart\"}},[_c('Radio',{attrs:{\"label\":1}},[_vm._v(\"是\")]),_c('Radio',{attrs:{\"label\":0}},[_vm._v(\"否\")])],1)],1)]),_c('FormItem',{staticStyle:{\"marginTop\":\"42px\"}},[_c('div',{staticStyle:{\"color\":\"rgba(175,188,204,1)\",\"font-weight\":\"400\",\"font-size\":\"14px\",\"font-family\":\"Microsoft YaHei\"}},[_vm._v(\" 当您选择\\\"是\\\"，打开/关闭通道后，系统后台会打开/关闭当前录制，后续从录制计划中设置的下一时间段开始按各通道录制计划执行，且会根据录制计划自动打开/关闭通道。 \")])]),_c('FormItem',[_c('div',{staticStyle:{\"color\":\"rgba(175,188,204,1)\",\"font-weight\":\"400\",\"font-size\":\"14px\",\"font-family\":\"Microsoft YaHei\"}},[_vm._v(\" 当您选择\\\"否\\\"，录制计划失效，打开通道，系统后台将一直录制；关闭通道，系统后台将停止录制，可通过手动开启录制计划中的开关，重新激活录制计划。 \")])])],1),_c('p',{staticStyle:{\"display\":\"flex\",\"justify-content\":\"center\",\"margin-top\":\"38px\",\"margin-bottom\":\"20px\"},attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('Button',{staticStyle:{\"background\":\"rgba(13,67,111,1)\",\"color\":\"rgba(199,219,244,1)\"},on:{\"click\":_vm.recodeCancel}},[_vm._v(\"取消\")]),_c('Button',{staticStyle:{\"margin-left\":\"49px\"},attrs:{\"type\":\"primary\",\"disabled\":_vm.isGray},on:{\"click\":_vm.recodeConfirm}},[_vm._v(\"确定\")])],1)],1)],1)]),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.isbrower),expression:\"isbrower\"}]},[_c('SumaPlayerExportMain',{ref:\"videoExportMain\"})],1),_c('div',{staticClass:\"btn-right\",staticStyle:{\"width\":\"100%\",\"display\":\"flex\",\"justify-content\":\"center\",\"marginTop\":\"38px\",\"marginBottom\":\"8px\",\"align-items\":\"center\"}},[_c('Button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.exportByList}},[_vm._v(_vm._s(_vm.exportListButton))]),_c('Button',{staticStyle:{\"margin-left\":\"30px\"},attrs:{\"type\":\"primary\"},on:{\"click\":_vm.exportByTime}},[_vm._v(_vm._s(_vm.exportTimeButton))])],1)]),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.exportDetail),expression:\"exportDetail\"}]},[_c('div',{staticStyle:{\"display\":\"flex\",\"justify-content\":\"space-between\"}},[_c('div',{staticStyle:{\"width\":\"62.5%\"}},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.isbrower),expression:\"!isbrower\"}],staticStyle:{\"width\":\"100%\",\"height\":\"0\",\"padding-top\":\"56.25%\",\"border\":\"1px solid #3aa7dd\",\"position\":\"relative\",\"background\":\"#263c4d\"},attrs:{\"id\":\"fullArea1\"}},[_c('div',{staticClass:\"monRoot\"},[_c('Modal',{staticClass:\"planModal\",attrs:{\"width\":\"638\",\"closable\":false,\"mask-closable\":false,\"transfer\":false},model:{value:(_vm.recodePlanConfirmModal),callback:function ($$v) {_vm.recodePlanConfirmModal=$$v},expression:\"recodePlanConfirmModal\"}},[_c('Form',{ref:\"formInline\",staticStyle:{\"margin-top\":\"52px\",\"padding\":\"0 68px\"}},[_c('FormItem',[_c('span',{staticStyle:{\"fontSize\":\"16px\",\"font-weight\":\"400\",\"font-family\":\"Microsoft YaHei\",\"color\":\"rgba(254,254,254,1)\"}},[_vm._v(\"是否继续遵循录制计划执行?\")]),_c('label',{staticStyle:{\"margin-left\":\"45px\"}},[_c('RadioGroup',{staticStyle:{\"color\":\"#fff\"},on:{\"on-change\":_vm.recodeSwitch},model:{value:(_vm.isStart),callback:function ($$v) {_vm.isStart=$$v},expression:\"isStart\"}},[_c('Radio',{attrs:{\"label\":1}},[_vm._v(\"是\")]),_c('Radio',{attrs:{\"label\":0}},[_vm._v(\"否\")])],1)],1)]),_c('FormItem',{staticStyle:{\"marginTop\":\"42px\"}},[_c('div',{staticStyle:{\"color\":\"rgba(175,188,204,1)\",\"font-weight\":\"400\",\"font-size\":\"14px\",\"font-family\":\"Microsoft YaHei\"}},[_vm._v(\" 当您选择\\\"是\\\"，打开/关闭通道后，系统后台会打开/关闭当前录制，后续从录制计划中设置的下一时间段开始按各通道录制计划执行，且会根据录制计划自动打开/关闭通道。 \")])]),_c('FormItem',[_c('div',{staticStyle:{\"color\":\"rgba(175,188,204,1)\",\"font-weight\":\"400\",\"font-size\":\"14px\",\"font-family\":\"Microsoft YaHei\"}},[_vm._v(\" 当您选择\\\"否\\\"，录制计划失效，打开通道，系统后台将一直录制；关闭通道，系统后台将停止录制，可通过手动开启录制计划中的开关，重新激活录制计划。 \")])])],1),_c('p',{staticStyle:{\"display\":\"flex\",\"justify-content\":\"center\",\"margin-top\":\"38px\",\"margin-bottom\":\"20px\"},attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('Button',{staticStyle:{\"background\":\"rgba(13,67,111,1)\",\"color\":\"rgba(199,219,244,1)\"},on:{\"click\":_vm.recodeCancel}},[_vm._v(\"取消\")]),_c('Button',{staticStyle:{\"margin-left\":\"49px\"},attrs:{\"type\":\"primary\",\"disabled\":_vm.isGray},on:{\"click\":_vm.recodeConfirm}},[_vm._v(\"确定\")])],1)],1)],1)]),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.isbrower),expression:\"isbrower\"}]},[_c('SumaPlayerExportDetail',{ref:\"videoExportDetail\",on:{\"plyerEnd\":_vm.videoViewPlyerEnd}})],1),_c('div',{staticClass:\"btn-right\",staticStyle:{\"width\":\"100%\",\"display\":\"flex\",\"justify-content\":\"center\",\"marginTop\":\"30px\",\"align-items\":\"center\"}},[_c('Button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.exportByList}},[_vm._v(_vm._s(_vm.exportListButton))]),_c('Button',{staticStyle:{\"margin-left\":\"30px\"},attrs:{\"type\":\"primary\"},on:{\"click\":_vm.exportByTime}},[_vm._v(_vm._s(_vm.exportTimeButton))])],1)]),_c('div',{staticStyle:{\"width\":\"37.5%\"}},[_c('Form',{staticStyle:{\"width\":\"95%\",\"margin\":\"0px auto\"},attrs:{\"label-width\":40,\"label-position\":\"left\"}},[_c('FormItem',{attrs:{\"label\":\"日期\"}},[_c('DatePicker',{staticStyle:{\"width\":\"200px\"},attrs:{\"type\":\"date\",\"placeholder\":\"请选择日期\"},on:{\"on-change\":_vm.exportDateChange},model:{value:(_vm.exportDate),callback:function ($$v) {_vm.exportDate=$$v},expression:\"exportDate\"}})],1)],1),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.exportType==1),expression:\"exportType==1\"}],staticStyle:{\"width\":\"95%\",\"height\":\"442px\",\"border\":\"1px solid #3aa7dd\",\"border-radius\":\"5px\",\"background\":\"rgba(22,60,105,1)\",\"overflow\":\"auto\",\"margin\":\"0 auto\"},attrs:{\"id\":\"exportListMenu\"}},[_c('div',{staticStyle:{\"margin\":\"20px 15px\",\"display\":\"flex\"}},[_c('Input',{staticStyle:{\"width\":\"100%\"},attrs:{\"placeholder\":\"请输入关键字\"},model:{value:(_vm.pramName),callback:function ($$v) {_vm.pramName=$$v},expression:\"pramName\"}}),_c('Button',{staticStyle:{\"width\":\"80px\",\"margin-left\":\"10px\"},attrs:{\"type\":\"primary\"},on:{\"click\":_vm.searchRecordProgramList}},[_vm._v(\"查询\")])],1),_c('div',{staticClass:\"showRate\"},[_c('Tabs',{on:{\"on-click\":_vm.tabClick},model:{value:(_vm.listType),callback:function ($$v) {_vm.listType=$$v},expression:\"listType\"}},[_c('TabPane',{attrs:{\"label\":\"计划列表\",\"id\":\"plan\"}},[_c('div',{staticStyle:{\"height\":\"300px\",\"overflow-y\":\"auto\"},attrs:{\"id\":\"exportListPlanMenu\"}},[_c('CheckboxGroup',{attrs:{\"vertical\":\"\"},on:{\"on-change\":_vm.selectPlanArrChange},model:{value:(_vm.selectPlanArr),callback:function ($$v) {_vm.selectPlanArr=$$v},expression:\"selectPlanArr\"}},_vm._l((_vm.radioPlanTimeList),function(item,index){return _c('div',{key:index,staticStyle:{\"marginBottom\":\"18px\",\"padding-left\":\"10px\"}},[_c('Checkbox',{attrs:{\"label\":item.id,\"disabled\":_vm.getDisabledStatus1(item)}},[_c('span',{style:({color:item.ischecked?'#2d8cf0':!_vm.getDisabledStatus(item)?'#fff':'gray',fontSize:'14px'})},[_vm._v(\" \"+_vm._s(item.time)+\" \"+_vm._s(item.name))])])],1)}),0),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.radioPlanTimeList.length===0),expression:\"radioPlanTimeList.length===0\"}]},[_c('p',{staticStyle:{\"fontWeight\":\"600\",\"padding-left\":\"20px\"}},[_vm._v(\"暂无节目单\")])])],1)]),_c('TabPane',{attrs:{\"label\":\"手动打点列表\"}},[_c('div',{staticStyle:{\"height\":\"300px\",\"overflow-y\":\"auto\",\"color\":\"fff\"},attrs:{\"id\":\"exportListHandMenu\"}},[_c('CheckboxGroup',{on:{\"on-change\":_vm.selectHandArrChange},model:{value:(_vm.selectHandArr),callback:function ($$v) {_vm.selectHandArr=$$v},expression:\"selectHandArr\"}},_vm._l((_vm.radioHandTimeList),function(item,index){return _c('div',{key:index,staticStyle:{\"marginBottom\":\"18px\",\"padding-left\":\"10px\"}},[_c('Checkbox',{attrs:{\"label\":item.id,\"disabled\":_vm.getDisabledStatus1(item)}},[_c('span',{style:({color:item.ischecked?'#2d8cf0':!_vm.getDisabledStatus(item)?'#fff':'gray',fontSize:'14px'})},[_vm._v(\" \"+_vm._s(item.time)+\" \"+_vm._s(item.name))])])],1)}),0),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.radioHandTimeList.length===0),expression:\"radioHandTimeList.length===0\"}]},[_c('p',{staticStyle:{\"fontWeight\":\"600\",\"padding-left\":\"20px\"}},[_vm._v(\"暂无节目单\")])])],1)])],1)],1)]),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.exportType==2),expression:\"exportType==2\"}],staticStyle:{\"display\":\"flex\",\"justify-content\":\"space-between\",\"align-items\":\"center\",\"margin\":\"10px\"}},[_c('p',{staticStyle:{\"color\":\"rgba(255,255,255,1)\",\"font-size\":\"14px\"}},[_vm._v(\"按时间段导出\")]),_c('Button',{staticStyle:{\"background\":\"rgba(13,67,111,1)\",\"color\":\"rgba(199,219,244,1)\"},attrs:{\"disabled\":_vm.isGray},on:{\"click\":_vm.addMore1}},[_vm._v(\"新建\")])],1),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.exportType==2),expression:\"exportType==2\"}],staticStyle:{\"width\":\"95%\",\"height\":\"400px\",\"border\":\"1px solid #3aa7dd\",\"border-radius\":\"5px\",\"margin\":\"0 auto\",\"background\":\"rgba(22,60,105,1)\",\"overflow\":\"auto\"},attrs:{\"id\":\"exportTimeMenu\"}},_vm._l((_vm.timeArr1),function(item,index){return _c('div',{key:index,staticStyle:{\"display\":\"flex\",\"margin\":\"0 5px\",\"align-items\":\"center\",\"border-bottom\":\"1px solid #576F8C\",\"padding\":\"20px 0\"}},[_c('TimePicker',{staticClass:\"exportInput\",staticStyle:{\"width\":\"100%\",\"margin-right\":\"10px\"},attrs:{\"type\":\"timerange\",\"placeholder\":\"起始时间 - 结束时间\",\"disabled\":_vm.isGray,\"transfer-class-name\":\"timerTransfer\",\"transfer\":true},model:{value:(item.value1),callback:function ($$v) {_vm.$set(item, \"value1\", $$v)},expression:\"item.value1\"}}),_c('div',[_c('Icon',{style:({cursor:_vm.timeArr1.length===1||_vm.isGray?'not-allowed':'pointer'}),attrs:{\"type\":\"ios-close-circle-outline\",\"size\":\"25\",\"color\":\"#576F8C\"},on:{\"click\":function($event){return _vm.remove1(index)}}})],1)],1)}),0),_c('div',{staticClass:\"btn-right\",staticStyle:{\"display\":\"flex\",\"marginTop\":\"20px\",\"align-items\":\"center\"}},[_c('Checkbox',{staticStyle:{\"margin-right\":\"30px\"},attrs:{\"disabled\":_vm.isGray},model:{value:(_vm.single),callback:function ($$v) {_vm.single=$$v},expression:\"single\"}},[_c('span',{staticStyle:{\"fontSize\":\"14px\",\"color\":\"#fff\"}},[_vm._v(\" 合并导出 \")])]),_c('Button',{staticStyle:{\"background\":\"rgba(13,67,111,1)\",\"color\":\"rgba(199,219,244,1)\",\"margin-right\":\"10px\"},attrs:{\"type\":\"primary\",\"disabled\":_vm.isGray},on:{\"click\":_vm.paragramView}},[_vm._v(\"预览\")]),_c('Button',{attrs:{\"type\":\"primary\",\"disabled\":_vm.isGray},on:{\"click\":_vm.exportFileModal}},[_vm._v(\" 导出文件 \")])],1)],1)])])])])],1)]),_c('Modal',{attrs:{\"mask-closable\":false},model:{value:(_vm.classModal),callback:function ($$v) {_vm.classModal=$$v},expression:\"classModal\"}},[_c('p',{staticStyle:{\"fontWeight\":\"700\",\"color\":\"#fff\"}},[_vm._v(_vm._s(_vm.title))]),_c('p',[_c('Input',{staticStyle:{\"width\":\"300px\"},attrs:{\"maxlength\":20},model:{value:(_vm.classNameInput),callback:function ($$v) {_vm.classNameInput=$$v},expression:\"classNameInput\"}}),_c('span',{staticStyle:{\"color\":\"#fff\",\"margin-right\":\"15px\"}},[_vm._v(_vm._s(_vm.classNameInput.length)+\"/20\")]),_c('Button',{staticClass:\"btn-right\",attrs:{\"type\":\"primary\",\"size\":\"small\"},on:{\"click\":_vm.classConfirm}},[_vm._v(\"确定\")])],1),_c('p',{attrs:{\"slot\":\"footer\"},slot:\"footer\"})]),_c('Modal',{attrs:{\"footer-hide\":\"\",\"title\":\"导出设置\",\"mask-closable\":false,\"width\":680},on:{\"on-cancel\":_vm.fileModalCancel},model:{value:(_vm.fileModal),callback:function ($$v) {_vm.fileModal=$$v},expression:\"fileModal\"}},[_c('div',{staticStyle:{\"display\":\"flex\",\"justify-content\":\"center\",\"align-items\":\"center\",\"margin-top\":\"100px\"}},[_c('Form',{ref:\"formInline\",attrs:{\"label-position\":\"right\",\"label-width\":100}},[_c('FormItem',{attrs:{\"label\":\"导出文件名称\"}},[_c('Input',{staticStyle:{\"width\":\"350px\"},attrs:{\"placeholder\":\"请输入\",\"disabled\":_vm.isGray||!_vm.single},model:{value:(_vm.exportFileName),callback:function ($$v) {_vm.exportFileName=$$v},expression:\"exportFileName\"}})],1),_c('FormItem',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.channelData.channelType==0||_vm.channelData.channelType==1),expression:\"channelData.channelType==0||channelData.channelType==1\"}],attrs:{\"label\":\"视频格式\"}},[_c('Select',{staticStyle:{\"width\":\"350px\"},attrs:{\"disabled\":_vm.isGray},model:{value:(_vm.videoType),callback:function ($$v) {_vm.videoType=$$v},expression:\"videoType\"}},_vm._l((_vm.videoList),function(item){return _c('Option',{key:item.metaDataValue,attrs:{\"value\":item.metaDataName}},[_vm._v(_vm._s(item.metaDataName))])}),1)],1),_c('FormItem',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.channelData.channelType==2),expression:\"channelData.channelType==2\"}],attrs:{\"label\":\"音频格式\"}},[_c('Select',{staticStyle:{\"width\":\"350px\"},attrs:{\"disabled\":_vm.isGray,\"id\":\"audioTypeId\"},model:{value:(_vm.audioType),callback:function ($$v) {_vm.audioType=$$v},expression:\"audioType\"}},_vm._l((_vm.audioList),function(item){return _c('Option',{key:item.metaDataValue,attrs:{\"value\":item.metaDataName}},[_vm._v(_vm._s(item.metaDataName))])}),1)],1)],1)],1),_c('div',{staticStyle:{\"display\":\"flex\",\"justify-content\":\"center\",\"align-items\":\"center\",\"margin-top\":\"140px\",\"margin-bottom\":\"10px\"}},[_c('Button',{staticStyle:{\"background\":\"rgba(13,67,111,1)\",\"color\":\"rgba(199,219,244,1)\",\"margin-right\":\"50px\"},attrs:{\"type\":\"primary\"},on:{\"click\":_vm.fileModalCancel}},[_vm._v(\"取消\")]),_c('Button',{attrs:{\"type\":\"primary\",\"disabled\":_vm.isGray},on:{\"click\":_vm.exportFile}},[_vm._v(\"确定\")])],1)]),_c('div',[_c('player',{ref:\"player\",on:{\"fullArea\":_vm.fullAreaEv,\"cancelFullArea\":_vm.cancelFullAreaEv,\"isRecCreate\":_vm.videoRecCreateSuccess,\"isRecEnd\":_vm.playEnding,\"dottedSuccess\":_vm.dottedSuccess,\"changeRecode\":_vm.changeRecode}})],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticStyle:{\"position\":\"relative\"}},[_c('div',{staticClass:\"videoNameClass\"},[_vm._v(\" \"+_vm._s(_vm.videoName)+\" \")]),_c('video',{ref:\"video\",staticClass:\"video-js vjs-default-skin vjs-big-play-centered\",attrs:{\"id\":_vm.playerId,\"controls\":\"\",\"x5-playsinline\":\"true\",\"playsinline\":\"true\",\"webkit-playsinline\":\"\"}})])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div>\n     <div style=\"position:relative\">\n        <div class=\"videoNameClass\">\n          {{videoName}}\n        </div>\n        <video\n          :id=\"playerId\"\n          ref=\"video\"\n          controls\n          class=\"video-js vjs-default-skin vjs-big-play-centered\"\n          x5-playsinline=\"true\"\n          playsinline=\"true\"\n          webkit-playsinline\n        ></video>\n      </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data: () => ({\n    player: null,\n    playerId: \"suma-player\",\n    initOptions: {\n      // playbackRates: [0.25, 0.5, 1.0, 1.5, 2.0], //播放速度\n      autoplay: true, //如果true,浏览器准备好时开始播放。\n      muted: false, // 默认情况下将会消除任何音频。\n      loop: false, // 导致视频一结束就重新开始。\n      preload: \"auto\", // auto浏览器选择最佳行为,立即开始加载视频（如果浏览器支持）\n      //language: 'zh-CN',\n      aspectRatio: \"16:7\", // 播放器的比例。用冒号分隔的两个数字（例如\"16:9\"或\"4:3\"）\n      fluid: true, // 当true时，播放器将拥有流体大小。换句话说，它将按比例缩放以适应其容器。\n      // sources: [\n      //   {\n      //     type: \"application/x-mpegURL\",\n      //     src: \"http://27.36.62.161:8060/live/fourthgrade_1500.m3u8?ci=123\" //url地址\n      //   }\n      // ],\n      poster: \"\", //你的封面地址\n      // width: document.documentElement.clientWidth,\n      notSupportedMessage: \"此视频暂无法播放，请稍后再试\", //无法播放媒体源时显示的默认信息。\n      controlBar: {\n        // currentTimeDisplay: true,\n        // timeDivider: true,\n        // durationDisplay: true,\n        // remainingTimeDisplay: false,\n        // fullscreenToggle: true, //全屏按钮\n        // volumePanel: {\n        //   inline: false\n        // }\n        // 定制播放器相关按钮顺序\n        children: [\n          { name: \"playToggle\" }, // 播放按钮\n          {\n            name: \"volumePanel\", // 音量控制\n            inline: false // 不使用水平方式\n          },\n          { name: \"currentTimeDisplay\" }, // 当前已播放时间\n          { name: \"progressControl\" }, // 播放进度条\n          { name: \"durationDisplay\" }, // 总时间\n          // {\n          //   // 倍数播放\n          //   name: \"playbackRateMenuButton\",\n          //   playbackRates: [0.5, 1, 1.5, 2, 2.5]\n          // },\n          { name: \"FullscreenToggle\" } // 全屏\n        ]\n      },\n      errorDisplay: true,\n      // posterImage: false,\n      bigPlayButton: true,\n      textTrackDisplay: false,\n    },\n    height:0,\n    videoName:''\n  }),\n  methods: {\n    showChannelName(name){\n      this.videoName = name\n    },\n    /**\n     * 播放HLS直播\n     * liveUrl 直播播放地址\n     * siAutoPlay 是否自动播放\n     */\n    playLiveWithHlsUrl(liveUrl, isAutoPlay = true) {\n      if (this.player != null) {\n        console.log(\"playLiveWithHlsUrl:\" + liveUrl);\n        // this.player.reset();\n        this.player.autoplay(isAutoPlay);\n        // this.player.options.playbackRates = [];\n        this.player.src({\n          type: \"application/x-mpegURL\",\n          src: liveUrl\n        });\n        if (true == isAutoPlay) {\n          this.player.play();\n        }\n      }\n    },\n    /**\n     * 播放HLS点播\n     * vodUrl 点播播放地址\n     * siAutoPlay 是否自动播放\n     */\n    playVodWithHlsUrl(vodUrl, isAutoPlay = true) {\n      if (this.player != null) {\n        console.log(\"playVodWithHlsUrl:\" + vodUrl);\n        // this.player.reset();\n        this.player.autoplay(isAutoPlay);\n        // this.initOptions.playbackRates = [0.25, 0.5, 1.0, 1.5, 2.0];\n        this.player.src({\n          type: \"application/x-mpegURL\",\n          src: vodUrl\n        });\n        if (true == isAutoPlay) {\n          this.player.play();\n        }\n      }\n    },\n    /**\n     * 设置播放器封面，也可使用props中的posterUrl参数\n     */\n    setPlayerPoster(imageUrl) {\n      this.initOptions.poster = imageUrl;\n      if (this.player != null) {\n        // this.player.posterImage.setSrc(imageUrl);\n        this.player.poster(imageUrl);\n      }\n    },\n    /**\n     * 初始化播放器\n     */\n    setupPlayer() {\n      const vm = this;\n      // document.addEventListener(\n      //   \"WeixinJSBridgeReady\",\n      //   function() {\n      //     vm.player.play();\n      //   },\n      //   false\n      // );\n      var self = this;\n      console.log(\"setup_sumaPalyer\" + JSON.stringify(this.initOptions));\n      this.player = this.$video(this.playerId, this.initOptions, function() {\n        //相关事件可参考https://html.spec.whatwg.org/multipage/media.html#mediaevents\n        this.on(\"loadstart\", () => {\n          console.log(\"loadstart\");\n        });\n        // 进度条变化时回调\n        // this.on(\"progress\", () => {\n        //   console.log(\"progress\");\n        // });\n        this.on(\"suspend\", () => {\n          console.log(\"suspend\");\n        });\n        this.on(\"abort\", () => {\n          console.log(\"abort\");\n        });\n        this.on(\"emptied\", () => {\n          console.log(\"emptied\");\n        });\n        this.on(\"stalled\", () => {\n          console.log(\"stalled\");\n        });\n        //首次加载视频的媒体信息时回调（针对一个视频地址仅会触发一次）\n        this.on(\"loadedmetadata\", () => {\n          console.log(\"loadedmetadata\");\n          self.$emit(\"suma-player-loadedmetadata\", self);\n        });\n        this.on(\"loadeddata\", () => {\n          console.log(\"loadeddata\");\n        });\n        this.on(\"canplay\", () => {\n          console.log(\"canplay\");\n        });\n        this.on(\"canplaythrough\", () => {\n          console.log(\"canplaythrough\");\n        });\n        this.on(\"playing\", () => {\n          console.log(\"playing\");\n        });\n        this.on(\"waiting\", () => {\n          console.log(\"waiting\");\n        });\n        this.on(\"seeking\", () => {\n          console.log(\"seeking\");\n        });\n        this.on(\"seeked\", () => {\n          console.log(\"seeked\");\n        });\n        this.on(\"ended\", () => {\n          console.log(\"ended\");\n          self.$emit('plyerEnd')\n        });\n        this.on(\"durationchange\", () => {\n          console.log(\"durationchange\");\n        });\n        // 当前播放时间变化时回调\n        // this.on(\"timeupdate\", () => {\n        //   console.log(\"timeupdate\");\n        // });\n        this.on(\"pause\", () => {\n          console.log(\"pause\");\n        });\n        this.on(\"ratechange\", () => {\n          console.log(\"ratechange\");\n        });\n        this.on(\"resize\", () => {\n          console.log(\"resize\");\n        });\n        this.on(\"loadstart\", () => {\n          console.log(\"loadstart\");\n        });\n        this.on(\"loadstart\", () => {\n          console.log(\"loadstart\");\n        });\n        this.on(\"loadstart\", () => {\n          console.log(\"loadstart\");\n        });\n        this.on(\"ready\", () => {\n          // 播放事件发生时, 立刻调整音量至用户已设置过的音量\n          // this.volume(vm.video.volume);\n          console.log(\"player_ready\");\n          // this.play(); //test\n          self.$emit(\"suma-player-ready\", self);\n        });\n        this.on(\"play\", () => {\n          // 播放事件发生时, 立刻调整音量至用户已设置过的音量\n          // this.volume(vm.video.volume);\n          console.log(\"player_play\");\n          self.$emit(\"suma-player-play\", self);\n        });\n\n        this.on(\"volumechange\", () => {\n          // 音量调整事件\n          // vm.video.volume = this.volume();\n          // window.localStorage.volume = this.volume();\n        });\n\n        this.on(\"error\", () => {\n          // 因为网络加载失败时 重新尝试\n          let err = this.error();\n          if (err.code === 2) {\n            // 判断是否是网络加载问题\n            let buffTime = this.bufferedEnd() - 6;\n            this.load(vm.src);\n            this.currentTime(buffTime);\n            this.play();\n          } else {\n            // 非网络错误\n            // vm.alert.err(err.message);\n            // this.dispose();\n            // this.reset();\n            // this.src({});\n          }\n          console.log(\"sumapalyer_error:\" + JSON.stringify(err));\n        });\n      });\n    },\n    /**\n     * 重置播放器至初始状态\n     */\n    resetPlayer() {\n      if (this.player != null) {\n        console.log(\"player_reset\");\n        //dispose()销毁旧播放器，将会删除整个<video>标签，所以需要重新添加videoNode\n        this.player.dispose();\n        // var videoNode =\n        //   \"<video id='\" +\n        //   this.playerId +\n        //   \"' ref='video' controls class='video-js vjs-default-skin vjs-big-play-centered' x5-playsinline='true' playsinline='true' webkit-playsinline ></video>\";\n        var videoNode = `<video\n          id=\"${this.playerId}\"\n          ref=\"video\"\n          controls\n          class=\"video-js vjs-default-skin vjs-big-play-centered\"\n          x5-playsinline=\"true\"\n          playsinline=\"true\"\n          webkit-playsinline >\n          </video>`;\n        document.getElementById(\"suma-player-parent\").innerHTML += videoNode;\n        this.setupPlayer();\n        //TODO:目前仍存在部分问题，重置播放器后，iOS版微信上无法自动起播\n      }\n    },\n    //暂停\n    pause() {\n      if (this.player != null) {\n        this.player.pause();\n        console.log('player',this.player)\n      }\n    }\n  },\n  props: {\n    // options: {\n    //   type: Object,\n    //   required: true\n    // }\n    posterUrl: {\n      type: String,\n      default: \"\"\n    }\n  },\n  watch: {\n    // src() {\n    //   this.player.src(this.src);\n    // }\n    posterUrl(newV, oldV) {\n      console.log(\"posterUrl_new:\" + newV + \" old:\" + oldV);\n      this.setPlayerPoster(newV);\n    }\n  },\n  computed: {\n    // src() {\n    //   return this.options.sources[0].src;\n    // },\n    // video() {\n    //   return this.$store.state.video;\n    // }\n  },\n  mounted() {\n    console.log(\"player_startMounted\");\n    const vm = this;\n    document.addEventListener(\n      \"WeixinJSBridgeReady\",\n      function() {\n        vm.player.play();\n      },\n      false\n    );\n\n    this.setupPlayer();\n\n    console.log(\"player_mounted\");\n    //------------------计算替换div高度\n     var w = window.innerWidth;\n     this.height = w/16*9\n\n  },\n  beforeDestroy() {\n    //在组件销毁时同时销毁播放器，避免组件重入时播放器显示异常\n    this.player.dispose();\n  }\n};\n</script>\n\n<style>\n.vjs-big-play-button {\n  height: 3em !important;\n  width: 3em !important;\n  line-height: 3em !important;\n  border-radius: 50% !important;\n  margin-top: -1.5em !important;\n}\n\n.vjs-button > .vjs-icon-placeholder:before {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 2em;\n}\n\n.vjs-playback-rate .vjs-playback-rate-value {\n  font-size: 1.8em;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.vjs-control-bar {\n  background: rgba(0, 0, 0, 0.8) !important;\n}\n\n/* 此设置可以保证当前播放时间与总时间可以正常显示 */\n.video-js .vjs-time-control {\n  display: block !important;\n}\n\n/* .video-js .vjs-remaining-time {\n  display: none !important;\n} */\n\n.video-js .vjs-play-progress,\n.video-js .vjs-volume-level {\n  background: linear-gradient(to right, #fc8200, #ffa604) !important;\n}\n\n/* 此选择器可控制音量进度条圆钮 */\n.video-js .vjs-volume-level:before {\n  /* top: -0.333333333333333em !important; */\n  /* top: -1em !important; */\n  /* right: 1em !important; */\n  left: -0.45em !important; /*修正音量条拖动圆钮显示不居中问题*/\n}\n\n/* 此选择器可控制播放进度条圆钮 */\n/* .video-js .vjs-play-progress:before {\n  top: 0em !important;\n} */\n\n.video-js:hover .vjs-big-play-button,\n.vjs-custom-skin > .video-js .vjs-big-play-button:focus,\n.vjs-custom-skin > .video-js .vjs-big-play-button:active {\n  background: linear-gradient(to right, #fc8200, #ffa604) !important;\n  opacity: 0.7;\n}\n\n.vjs-big-play-button .vjs-icon-placeholder {\n  font-size: 70px !important;\n}\n\n.vjs-error .vjs-error-display:before {\n  color: #fff !important;\n  content: \"X\" !important;\n  font-family: Arial, Helvetica, sans-serif !important;\n  font-size: 4.5em !important;\n  left: 0 !important;\n  line-height: 1.8 !important;\n  margin-top: -0.5em !important;\n  position: absolute !important;\n  text-shadow: 0.05em 0.05em 0.1em #000 !important;\n  text-align: center !important;\n  top: 50% !important;\n  vertical-align: middle !important;\n  width: 100% !important;\n}\nvideo {\n\tobject-fit:fill;\n\twidth:100%;\n\theight:100%;\n}\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SumaPlayerMain.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SumaPlayerMain.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./SumaPlayerMain.vue?vue&type=template&id=58ee9b86&\"\nimport script from \"./SumaPlayerMain.vue?vue&type=script&lang=js&\"\nexport * from \"./SumaPlayerMain.vue?vue&type=script&lang=js&\"\nimport style0 from \"./SumaPlayerMain.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticStyle:{\"position\":\"relative\"}},[_c('div',{staticClass:\"videoNameClass\"},[_vm._v(\" \"+_vm._s(_vm.videoName)+\" \")]),_c('video',{ref:\"video\",staticClass:\"video-js vjs-default-skin vjs-big-play-centered\",attrs:{\"id\":_vm.playerId,\"controls\":\"\",\"x5-playsinline\":\"true\",\"playsinline\":\"true\",\"webkit-playsinline\":\"\"}})])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div>\n     <div  style=\"position:relative\">\n         <div class=\"videoNameClass\">\n          {{videoName}}\n        </div>\n        <video\n          :id=\"playerId\"\n          ref=\"video\"\n          controls\n          class=\"video-js vjs-default-skin vjs-big-play-centered\"\n          x5-playsinline=\"true\"\n          playsinline=\"true\"\n          webkit-playsinline\n        ></video>\n      </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data: () => ({\n    player: null,\n    playerId: \"suma-player1\",\n    initOptions: {\n      // playbackRates: [0.25, 0.5, 1.0, 1.5, 2.0], //播放速度\n      autoplay: true, //如果true,浏览器准备好时开始播放。\n      muted: false, // 默认情况下将会消除任何音频。\n      loop: false, // 导致视频一结束就重新开始。\n      preload: \"auto\", // auto浏览器选择最佳行为,立即开始加载视频（如果浏览器支持）\n      //language: 'zh-CN',\n      aspectRatio: \"16:7\", // 播放器的比例。用冒号分隔的两个数字（例如\"16:9\"或\"4:3\"）\n      fluid: true, // 当true时，播放器将拥有流体大小。换句话说，它将按比例缩放以适应其容器。\n      // sources: [\n      //   {\n      //     type: \"application/x-mpegURL\",\n      //     src: \"http://27.36.62.161:8060/live/fourthgrade_1500.m3u8?ci=123\" //url地址\n      //   }\n      // ],\n      poster: \"\", //你的封面地址\n      // width: document.documentElement.clientWidth,\n      notSupportedMessage: \"此视频暂无法播放，请稍后再试\", //无法播放媒体源时显示的默认信息。\n      controlBar: {\n        // currentTimeDisplay: true,\n        // timeDivider: true,\n        // durationDisplay: true,\n        // remainingTimeDisplay: false,\n        // fullscreenToggle: true, //全屏按钮\n        // volumePanel: {\n        //   inline: false\n        // }\n        // 定制播放器相关按钮顺序\n        children: [\n          { name: \"playToggle\" }, // 播放按钮\n          {\n            name: \"volumePanel\", // 音量控制\n            inline: false // 不使用水平方式\n          },\n          { name: \"currentTimeDisplay\" }, // 当前已播放时间\n          { name: \"progressControl\" }, // 播放进度条\n          { name: \"durationDisplay\" }, // 总时间\n          // {\n          //   // 倍数播放\n          //   name: \"playbackRateMenuButton\",\n          //   playbackRates: [0.5, 1, 1.5, 2, 2.5]\n          // },\n          { name: \"FullscreenToggle\" } // 全屏\n        ]\n      },\n      errorDisplay: true,\n      // posterImage: false,\n      bigPlayButton: true,\n      textTrackDisplay: false\n    },\n    height:0,\n    videoName:''\n  }),\n  methods: {\n    showChannelName(name){\n      this.videoName = name\n    },\n    /**\n     * 播放HLS直播\n     * liveUrl 直播播放地址\n     * siAutoPlay 是否自动播放\n     */\n    playLiveWithHlsUrl(liveUrl, isAutoPlay = true) {\n      if (this.player != null) {\n        console.log(\"playLiveWithHlsUrl:\" + liveUrl);\n        // this.player.reset();\n        this.player.autoplay(isAutoPlay);\n        // this.player.options.playbackRates = [];\n        this.player.src({\n          type: \"application/x-mpegURL\",\n          src: liveUrl\n        });\n        if (true == isAutoPlay) {\n          this.player.play();\n        }\n      }\n    },\n    /**\n     * 播放HLS点播\n     * vodUrl 点播播放地址\n     * siAutoPlay 是否自动播放\n     */\n    playVodWithHlsUrl(vodUrl, isAutoPlay = true) {\n      if (this.player != null) {\n        console.log(\"playVodWithHlsUrl:\" + vodUrl);\n        // this.player.reset();\n        this.player.autoplay(isAutoPlay);\n        // this.initOptions.playbackRates = [0.25, 0.5, 1.0, 1.5, 2.0];\n        this.player.src({\n          type: \"application/x-mpegURL\",\n          src: vodUrl\n        });\n        if (true == isAutoPlay) {\n          this.player.play();\n        }\n      }\n    },\n    /**\n     * 设置播放器封面，也可使用props中的posterUrl参数\n     */\n    setPlayerPoster(imageUrl) {\n      this.initOptions.poster = imageUrl;\n      if (this.player != null) {\n        // this.player.posterImage.setSrc(imageUrl);\n        this.player.poster(imageUrl);\n      }\n    },\n    /**\n     * 初始化播放器\n     */\n    setupPlayer() {\n      const vm = this;\n      // document.addEventListener(\n      //   \"WeixinJSBridgeReady\",\n      //   function() {\n      //     vm.player.play();\n      //   },\n      //   false\n      // );\n      var self = this;\n      console.log(\"setup_sumaPalyer\" + JSON.stringify(this.initOptions));\n      this.player = this.$video(this.playerId, this.initOptions, function() {\n        //相关事件可参考https://html.spec.whatwg.org/multipage/media.html#mediaevents\n        this.on(\"loadstart\", () => {\n          console.log(\"loadstart\");\n        });\n        // 进度条变化时回调\n        // this.on(\"progress\", () => {\n        //   console.log(\"progress\");\n        // });\n        this.on(\"suspend\", () => {\n          console.log(\"suspend\");\n        });\n        this.on(\"abort\", () => {\n          console.log(\"abort\");\n        });\n        this.on(\"emptied\", () => {\n          console.log(\"emptied\");\n        });\n        this.on(\"stalled\", () => {\n          console.log(\"stalled\");\n        });\n        //首次加载视频的媒体信息时回调（针对一个视频地址仅会触发一次）\n        this.on(\"loadedmetadata\", () => {\n          console.log(\"loadedmetadata\");\n          self.$emit(\"suma-player-loadedmetadata\", self);\n        });\n        this.on(\"loadeddata\", () => {\n          console.log(\"loadeddata\");\n        });\n        this.on(\"canplay\", () => {\n          console.log(\"canplay\");\n        });\n        this.on(\"canplaythrough\", () => {\n          console.log(\"canplaythrough\");\n        });\n        this.on(\"playing\", () => {\n          console.log(\"playing\");\n        });\n        this.on(\"waiting\", () => {\n          console.log(\"waiting\");\n        });\n        this.on(\"seeking\", () => {\n          console.log(\"seeking\");\n        });\n        this.on(\"seeked\", () => {\n          console.log(\"seeked\");\n        });\n        this.on(\"ended\", () => {\n          console.log(\"ended\");\n          self.$emit('plyerEnd')\n        });\n        this.on(\"durationchange\", () => {\n          console.log(\"durationchange\");\n        });\n        // 当前播放时间变化时回调\n        // this.on(\"timeupdate\", () => {\n        //   console.log(\"timeupdate\");\n        // });\n        this.on(\"pause\", () => {\n          console.log(\"pause\");\n        });\n        this.on(\"ratechange\", () => {\n          console.log(\"ratechange\");\n        });\n        this.on(\"resize\", () => {\n          console.log(\"resize\");\n        });\n        this.on(\"loadstart\", () => {\n          console.log(\"loadstart\");\n        });\n        this.on(\"loadstart\", () => {\n          console.log(\"loadstart\");\n        });\n        this.on(\"loadstart\", () => {\n          console.log(\"loadstart\");\n        });\n        this.on(\"ready\", () => {\n          // 播放事件发生时, 立刻调整音量至用户已设置过的音量\n          // this.volume(vm.video.volume);\n          console.log(\"player_ready\");\n          // this.play(); //test\n          self.$emit(\"suma-player-ready\", self);\n        });\n        this.on(\"play\", () => {\n          // 播放事件发生时, 立刻调整音量至用户已设置过的音量\n          // this.volume(vm.video.volume);\n          console.log(\"player_play\");\n          self.$emit(\"suma-player-play\", self);\n        });\n\n        this.on(\"volumechange\", () => {\n          // 音量调整事件\n          // vm.video.volume = this.volume();\n          // window.localStorage.volume = this.volume();\n        });\n\n        this.on(\"error\", () => {\n          // 因为网络加载失败时 重新尝试\n          let err = this.error();\n          if (err.code === 2) {\n            // 判断是否是网络加载问题\n            let buffTime = this.bufferedEnd() - 6;\n            this.load(vm.src);\n            this.currentTime(buffTime);\n            this.play();\n          } else {\n            // 非网络错误\n            // vm.alert.err(err.message);\n            // this.dispose();\n            // this.reset();\n            // this.src({});\n          }\n          console.log(\"sumapalyer_error:\" + JSON.stringify(err));\n        });\n      });\n    },\n    /**\n     * 重置播放器至初始状态\n     */\n    resetPlayer() {\n      if (this.player != null) {\n        console.log(\"player_reset\");\n        //dispose()销毁旧播放器，将会删除整个<video>标签，所以需要重新添加videoNode\n        this.player.dispose();\n        // var videoNode =\n        //   \"<video id='\" +\n        //   this.playerId +\n        //   \"' ref='video' controls class='video-js vjs-default-skin vjs-big-play-centered' x5-playsinline='true' playsinline='true' webkit-playsinline ></video>\";\n        var videoNode = `<video\n          id=\"${this.playerId}\"\n          ref=\"video\"\n          controls\n          class=\"video-js vjs-default-skin vjs-big-play-centered\"\n          x5-playsinline=\"true\"\n          playsinline=\"true\"\n          webkit-playsinline >\n          </video>`;\n        document.getElementById(\"suma-player-parent\").innerHTML += videoNode;\n        this.setupPlayer();\n        //TODO:目前仍存在部分问题，重置播放器后，iOS版微信上无法自动起播\n      }\n    },\n    //暂停\n    pause() {\n      if (this.player != null) {\n        this.player.pause();\n        console.log('player',this.player)\n      }\n    }\n  },\n  props: {\n    // options: {\n    //   type: Object,\n    //   required: true\n    // }\n    posterUrl: {\n      type: String,\n      default: \"\"\n    }\n  },\n  watch: {\n    // src() {\n    //   this.player.src(this.src);\n    // }\n    posterUrl(newV, oldV) {\n      console.log(\"posterUrl_new:\" + newV + \" old:\" + oldV);\n      this.setPlayerPoster(newV);\n    }\n  },\n  computed: {\n    // src() {\n    //   return this.options.sources[0].src;\n    // },\n    // video() {\n    //   return this.$store.state.video;\n    // }\n  },\n  mounted() {\n    console.log(\"player_startMounted\");\n    const vm = this;\n    document.addEventListener(\n      \"WeixinJSBridgeReady\",\n      function() {\n        vm.player.play();\n      },\n      false\n    );\n\n    this.setupPlayer();\n\n    console.log(\"player_mounted\");\n    //------------------计算替换div高度\n     var w = window.innerWidth;\n     this.height = w/16*9\n\n  },\n  beforeDestroy() {\n    //在组件销毁时同时销毁播放器，避免组件重入时播放器显示异常\n    this.player.dispose();\n  }\n};\n</script>\n\n<style>\n.vjs-big-play-button {\n  height: 3em !important;\n  width: 3em !important;\n  line-height: 3em !important;\n  border-radius: 50% !important;\n  margin-top: -1.5em !important;\n}\n\n.vjs-button > .vjs-icon-placeholder:before {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 2em;\n}\n\n.vjs-playback-rate .vjs-playback-rate-value {\n  font-size: 1.8em;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.vjs-control-bar {\n  background: rgba(0, 0, 0, 0.8) !important;\n}\n\n/* 此设置可以保证当前播放时间与总时间可以正常显示 */\n.video-js .vjs-time-control {\n  display: block !important;\n}\n\n/* .video-js .vjs-remaining-time {\n  display: none !important;\n} */\n\n.video-js .vjs-play-progress,\n.video-js .vjs-volume-level {\n  background: linear-gradient(to right, #fc8200, #ffa604) !important;\n}\n\n/* 此选择器可控制音量进度条圆钮 */\n.video-js .vjs-volume-level:before {\n  /* top: -0.333333333333333em !important; */\n  /* top: -1em !important; */\n  /* right: 1em !important; */\n  left: -0.45em !important; /*修正音量条拖动圆钮显示不居中问题*/\n}\n\n/* 此选择器可控制播放进度条圆钮 */\n/* .video-js .vjs-play-progress:before {\n  top: 0em !important;\n} */\n\n.video-js:hover .vjs-big-play-button,\n.vjs-custom-skin > .video-js .vjs-big-play-button:focus,\n.vjs-custom-skin > .video-js .vjs-big-play-button:active {\n  background: linear-gradient(to right, #fc8200, #ffa604) !important;\n  opacity: 0.7;\n}\n\n.vjs-big-play-button .vjs-icon-placeholder {\n  font-size: 70px !important;\n}\n\n.vjs-error .vjs-error-display:before {\n  color: #fff !important;\n  content: \"X\" !important;\n  font-family: Arial, Helvetica, sans-serif !important;\n  font-size: 4.5em !important;\n  left: 0 !important;\n  line-height: 1.8 !important;\n  margin-top: -0.5em !important;\n  position: absolute !important;\n  text-shadow: 0.05em 0.05em 0.1em #000 !important;\n  text-align: center !important;\n  top: 50% !important;\n  vertical-align: middle !important;\n  width: 100% !important;\n}\nvideo {\n\tobject-fit:fill;\n\twidth:100%;\n\theight:100%;\n}\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SumaPlayerImportMain.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SumaPlayerImportMain.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./SumaPlayerImportMain.vue?vue&type=template&id=e3de1030&\"\nimport script from \"./SumaPlayerImportMain.vue?vue&type=script&lang=js&\"\nexport * from \"./SumaPlayerImportMain.vue?vue&type=script&lang=js&\"\nimport style0 from \"./SumaPlayerImportMain.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticStyle:{\"position\":\"relative\"}},[_c('div',{staticClass:\"videoNameClass\"},[_vm._v(\" \"+_vm._s(_vm.videoName)+\" \")]),_c('video',{ref:\"video\",staticClass:\"video-js vjs-default-skin vjs-big-play-centered\",attrs:{\"id\":_vm.playerId,\"controls\":\"\",\"x5-playsinline\":\"true\",\"playsinline\":\"true\",\"webkit-playsinline\":\"\"}})])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div>\n     <div  style=\"position:relative\">\n         <div class=\"videoNameClass\">\n          {{videoName}}\n        </div>\n        <video\n          :id=\"playerId\"\n          ref=\"video\"\n          controls\n          class=\"video-js vjs-default-skin vjs-big-play-centered\"\n          x5-playsinline=\"true\"\n          playsinline=\"true\"\n          webkit-playsinline\n        ></video>\n      </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data: () => ({\n    player: null,\n    playerId: \"suma-player2\",\n    initOptions: {\n      // playbackRates: [0.25, 0.5, 1.0, 1.5, 2.0], //播放速度\n      autoplay: true, //如果true,浏览器准备好时开始播放。\n      muted: false, // 默认情况下将会消除任何音频。\n      loop: false, // 导致视频一结束就重新开始。\n      preload: \"auto\", // auto浏览器选择最佳行为,立即开始加载视频（如果浏览器支持）\n      //language: 'zh-CN',\n      aspectRatio: \"16:7\", // 播放器的比例。用冒号分隔的两个数字（例如\"16:9\"或\"4:3\"）\n      fluid: true, // 当true时，播放器将拥有流体大小。换句话说，它将按比例缩放以适应其容器。\n      // sources: [\n      //   {\n      //     type: \"application/x-mpegURL\",\n      //     src: \"http://27.36.62.161:8060/live/fourthgrade_1500.m3u8?ci=123\" //url地址\n      //   }\n      // ],\n      poster: \"\", //你的封面地址\n      // width: document.documentElement.clientWidth,\n      notSupportedMessage: \"此视频暂无法播放，请稍后再试\", //无法播放媒体源时显示的默认信息。\n      controlBar: {\n        // currentTimeDisplay: true,\n        // timeDivider: true,\n        // durationDisplay: true,\n        // remainingTimeDisplay: false,\n        // fullscreenToggle: true, //全屏按钮\n        // volumePanel: {\n        //   inline: false\n        // }\n        // 定制播放器相关按钮顺序\n        children: [\n          { name: \"playToggle\" }, // 播放按钮\n          {\n            name: \"volumePanel\", // 音量控制\n            inline: false // 不使用水平方式\n          },\n          { name: \"currentTimeDisplay\" }, // 当前已播放时间\n          { name: \"progressControl\" }, // 播放进度条\n          { name: \"durationDisplay\" }, // 总时间\n          // {\n          //   // 倍数播放\n          //   name: \"playbackRateMenuButton\",\n          //   playbackRates: [0.5, 1, 1.5, 2, 2.5]\n          // },\n          { name: \"FullscreenToggle\" } // 全屏\n        ]\n      },\n      errorDisplay: true,\n      // posterImage: false,\n      bigPlayButton: true,\n      textTrackDisplay: false\n    },\n    height:0,\n    videoName:''\n  }),\n  methods: {\n    showChannelName(name){\n      this.videoName = name\n    },\n    /**\n     * 播放HLS直播\n     * liveUrl 直播播放地址\n     * siAutoPlay 是否自动播放\n     */\n    playLiveWithHlsUrl(liveUrl, isAutoPlay = true) {\n      if (this.player != null) {\n        console.log(\"playLiveWithHlsUrl:\" + liveUrl);\n        // this.player.reset();\n        this.player.autoplay(isAutoPlay);\n        // this.player.options.playbackRates = [];\n        this.player.src({\n          type: \"application/x-mpegURL\",\n          src: liveUrl\n        });\n        if (true == isAutoPlay) {\n          this.player.play();\n        }\n      }\n    },\n    /**\n     * 播放HLS点播\n     * vodUrl 点播播放地址\n     * siAutoPlay 是否自动播放\n     */\n    playVodWithHlsUrl(vodUrl, isAutoPlay = true) {\n      if (this.player != null) {\n        console.log(\"playVodWithHlsUrl:\" + vodUrl);\n        // this.player.reset();\n        this.player.autoplay(isAutoPlay);\n        // this.initOptions.playbackRates = [0.25, 0.5, 1.0, 1.5, 2.0];\n        this.player.src({\n          type: \"application/x-mpegURL\",\n          src: vodUrl\n        });\n        if (true == isAutoPlay) {\n          this.player.play();\n        }\n      }\n    },\n    /**\n     * 设置播放器封面，也可使用props中的posterUrl参数\n     */\n    setPlayerPoster(imageUrl) {\n      this.initOptions.poster = imageUrl;\n      if (this.player != null) {\n        // this.player.posterImage.setSrc(imageUrl);\n        this.player.poster(imageUrl);\n      }\n    },\n    /**\n     * 初始化播放器\n     */\n    setupPlayer() {\n      const vm = this;\n      // document.addEventListener(\n      //   \"WeixinJSBridgeReady\",\n      //   function() {\n      //     vm.player.play();\n      //   },\n      //   false\n      // );\n      var self = this;\n      console.log(\"setup_sumaPalyer\" + JSON.stringify(this.initOptions));\n      this.player = this.$video(this.playerId, this.initOptions, function() {\n        //相关事件可参考https://html.spec.whatwg.org/multipage/media.html#mediaevents\n        this.on(\"loadstart\", () => {\n          console.log(\"loadstart\");\n        });\n        // 进度条变化时回调\n        // this.on(\"progress\", () => {\n        //   console.log(\"progress\");\n        // });\n        this.on(\"suspend\", () => {\n          console.log(\"suspend\");\n        });\n        this.on(\"abort\", () => {\n          console.log(\"abort\");\n        });\n        this.on(\"emptied\", () => {\n          console.log(\"emptied\");\n        });\n        this.on(\"stalled\", () => {\n          console.log(\"stalled\");\n        });\n        //首次加载视频的媒体信息时回调（针对一个视频地址仅会触发一次）\n        this.on(\"loadedmetadata\", () => {\n          console.log(\"loadedmetadata\");\n          self.$emit(\"suma-player-loadedmetadata\", self);\n        });\n        this.on(\"loadeddata\", () => {\n          console.log(\"loadeddata\");\n        });\n        this.on(\"canplay\", () => {\n          console.log(\"canplay\");\n        });\n        this.on(\"canplaythrough\", () => {\n          console.log(\"canplaythrough\");\n        });\n        this.on(\"playing\", () => {\n          console.log(\"playing\");\n        });\n        this.on(\"waiting\", () => {\n          console.log(\"waiting\");\n        });\n        this.on(\"seeking\", () => {\n          console.log(\"seeking\");\n        });\n        this.on(\"seeked\", () => {\n          console.log(\"seeked\");\n        });\n        this.on(\"ended\", () => {\n          console.log(\"ended\");\n          self.$emit('plyerEnd')\n        });\n        this.on(\"durationchange\", () => {\n          console.log(\"durationchange\");\n        });\n        // 当前播放时间变化时回调\n        // this.on(\"timeupdate\", () => {\n        //   console.log(\"timeupdate\");\n        // });\n        this.on(\"pause\", () => {\n          console.log(\"pause\");\n        });\n        this.on(\"ratechange\", () => {\n          console.log(\"ratechange\");\n        });\n        this.on(\"resize\", () => {\n          console.log(\"resize\");\n        });\n        this.on(\"loadstart\", () => {\n          console.log(\"loadstart\");\n        });\n        this.on(\"loadstart\", () => {\n          console.log(\"loadstart\");\n        });\n        this.on(\"loadstart\", () => {\n          console.log(\"loadstart\");\n        });\n        this.on(\"ready\", () => {\n          // 播放事件发生时, 立刻调整音量至用户已设置过的音量\n          // this.volume(vm.video.volume);\n          console.log(\"player_ready\");\n          // this.play(); //test\n          self.$emit(\"suma-player-ready\", self);\n        });\n        this.on(\"play\", () => {\n          // 播放事件发生时, 立刻调整音量至用户已设置过的音量\n          // this.volume(vm.video.volume);\n          console.log(\"player_play\");\n          self.$emit(\"suma-player-play\", self);\n        });\n\n        this.on(\"volumechange\", () => {\n          // 音量调整事件\n          // vm.video.volume = this.volume();\n          // window.localStorage.volume = this.volume();\n        });\n\n        this.on(\"error\", () => {\n          // 因为网络加载失败时 重新尝试\n          let err = this.error();\n          if (err.code === 2) {\n            // 判断是否是网络加载问题\n            let buffTime = this.bufferedEnd() - 6;\n            this.load(vm.src);\n            this.currentTime(buffTime);\n            this.play();\n          } else {\n            // 非网络错误\n            // vm.alert.err(err.message);\n            // this.dispose();\n            // this.reset();\n            // this.src({});\n          }\n          console.log(\"sumapalyer_error:\" + JSON.stringify(err));\n        });\n      });\n    },\n    /**\n     * 重置播放器至初始状态\n     */\n    resetPlayer() {\n      if (this.player != null) {\n        console.log(\"player_reset\");\n        //dispose()销毁旧播放器，将会删除整个<video>标签，所以需要重新添加videoNode\n        this.player.dispose();\n        // var videoNode =\n        //   \"<video id='\" +\n        //   this.playerId +\n        //   \"' ref='video' controls class='video-js vjs-default-skin vjs-big-play-centered' x5-playsinline='true' playsinline='true' webkit-playsinline ></video>\";\n        var videoNode = `<video\n          id=\"${this.playerId}\"\n          ref=\"video\"\n          controls\n          class=\"video-js vjs-default-skin vjs-big-play-centered\"\n          x5-playsinline=\"true\"\n          playsinline=\"true\"\n          webkit-playsinline >\n          </video>`;\n        document.getElementById(\"suma-player-parent\").innerHTML += videoNode;\n        this.setupPlayer();\n        //TODO:目前仍存在部分问题，重置播放器后，iOS版微信上无法自动起播\n      }\n    },\n    //暂停\n    pause() {\n      if (this.player != null) {\n        this.player.pause();\n        console.log('player',this.player)\n      }\n    }\n  },\n  props: {\n    // options: {\n    //   type: Object,\n    //   required: true\n    // }\n    posterUrl: {\n      type: String,\n      default: \"\"\n    }\n  },\n  watch: {\n    // src() {\n    //   this.player.src(this.src);\n    // }\n    posterUrl(newV, oldV) {\n      console.log(\"posterUrl_new:\" + newV + \" old:\" + oldV);\n      this.setPlayerPoster(newV);\n    }\n  },\n  computed: {\n    // src() {\n    //   return this.options.sources[0].src;\n    // },\n    // video() {\n    //   return this.$store.state.video;\n    // }\n  },\n  mounted() {\n    console.log(\"player_startMounted\");\n    const vm = this;\n    document.addEventListener(\n      \"WeixinJSBridgeReady\",\n      function() {\n        vm.player.play();\n      },\n      false\n    );\n\n    this.setupPlayer();\n\n    console.log(\"player_mounted\");\n    //------------------计算替换div高度\n     var w = window.innerWidth;\n     this.height = w/16*9\n\n  },\n  beforeDestroy() {\n    //在组件销毁时同时销毁播放器，避免组件重入时播放器显示异常\n    this.player.dispose();\n  }\n};\n</script>\n\n<style>\n.vjs-big-play-button {\n  height: 3em !important;\n  width: 3em !important;\n  line-height: 3em !important;\n  border-radius: 50% !important;\n  margin-top: -1.5em !important;\n}\n\n.vjs-button > .vjs-icon-placeholder:before {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 2em;\n}\n\n.vjs-playback-rate .vjs-playback-rate-value {\n  font-size: 1.8em;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.vjs-control-bar {\n  background: rgba(0, 0, 0, 0.8) !important;\n}\n\n/* 此设置可以保证当前播放时间与总时间可以正常显示 */\n.video-js .vjs-time-control {\n  display: block !important;\n}\n\n/* .video-js .vjs-remaining-time {\n  display: none !important;\n} */\n\n.video-js .vjs-play-progress,\n.video-js .vjs-volume-level {\n  background: linear-gradient(to right, #fc8200, #ffa604) !important;\n}\n\n/* 此选择器可控制音量进度条圆钮 */\n.video-js .vjs-volume-level:before {\n  /* top: -0.333333333333333em !important; */\n  /* top: -1em !important; */\n  /* right: 1em !important; */\n  left: -0.45em !important; /*修正音量条拖动圆钮显示不居中问题*/\n}\n\n/* 此选择器可控制播放进度条圆钮 */\n/* .video-js .vjs-play-progress:before {\n  top: 0em !important;\n} */\n\n.video-js:hover .vjs-big-play-button,\n.vjs-custom-skin > .video-js .vjs-big-play-button:focus,\n.vjs-custom-skin > .video-js .vjs-big-play-button:active {\n  background: linear-gradient(to right, #fc8200, #ffa604) !important;\n  opacity: 0.7;\n}\n\n.vjs-big-play-button .vjs-icon-placeholder {\n  font-size: 70px !important;\n}\n\n.vjs-error .vjs-error-display:before {\n  color: #fff !important;\n  content: \"X\" !important;\n  font-family: Arial, Helvetica, sans-serif !important;\n  font-size: 4.5em !important;\n  left: 0 !important;\n  line-height: 1.8 !important;\n  margin-top: -0.5em !important;\n  position: absolute !important;\n  text-shadow: 0.05em 0.05em 0.1em #000 !important;\n  text-align: center !important;\n  top: 50% !important;\n  vertical-align: middle !important;\n  width: 100% !important;\n}\nvideo {\n\tobject-fit:fill;\n\twidth:100%;\n\theight:100%;\n}\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SumaPlayerImportDetail.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SumaPlayerImportDetail.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./SumaPlayerImportDetail.vue?vue&type=template&id=117c3991&\"\nimport script from \"./SumaPlayerImportDetail.vue?vue&type=script&lang=js&\"\nexport * from \"./SumaPlayerImportDetail.vue?vue&type=script&lang=js&\"\nimport style0 from \"./SumaPlayerImportDetail.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticStyle:{\"position\":\"relative\"}},[_c('div',{staticClass:\"videoNameClass\"},[_vm._v(\" \"+_vm._s(_vm.videoName)+\" \")]),_c('video',{ref:\"video\",staticClass:\"video-js vjs-default-skin vjs-big-play-centered\",attrs:{\"id\":_vm.playerId,\"controls\":\"\",\"x5-playsinline\":\"true\",\"playsinline\":\"true\",\"webkit-playsinline\":\"\"}})])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div>\n     <div  style=\"position:relative\">\n         <div class=\"videoNameClass\">\n          {{videoName}}\n        </div>\n        <video\n          :id=\"playerId\"\n          ref=\"video\"\n          controls\n          class=\"video-js vjs-default-skin vjs-big-play-centered\"\n          x5-playsinline=\"true\"\n          playsinline=\"true\"\n          webkit-playsinline\n        ></video>\n      </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data: () => ({\n    player: null,\n    playerId: \"suma-player3\",\n    initOptions: {\n      // playbackRates: [0.25, 0.5, 1.0, 1.5, 2.0], //播放速度\n      autoplay: true, //如果true,浏览器准备好时开始播放。\n      muted: false, // 默认情况下将会消除任何音频。\n      loop: false, // 导致视频一结束就重新开始。\n      preload: \"auto\", // auto浏览器选择最佳行为,立即开始加载视频（如果浏览器支持）\n      //language: 'zh-CN',\n      aspectRatio: \"16:7\", // 播放器的比例。用冒号分隔的两个数字（例如\"16:9\"或\"4:3\"）\n      fluid: true, // 当true时，播放器将拥有流体大小。换句话说，它将按比例缩放以适应其容器。\n      // sources: [\n      //   {\n      //     type: \"application/x-mpegURL\",\n      //     src: \"http://27.36.62.161:8060/live/fourthgrade_1500.m3u8?ci=123\" //url地址\n      //   }\n      // ],\n      poster: \"\", //你的封面地址\n      // width: document.documentElement.clientWidth,\n      notSupportedMessage: \"此视频暂无法播放，请稍后再试\", //无法播放媒体源时显示的默认信息。\n      controlBar: {\n        // currentTimeDisplay: true,\n        // timeDivider: true,\n        // durationDisplay: true,\n        // remainingTimeDisplay: false,\n        // fullscreenToggle: true, //全屏按钮\n        // volumePanel: {\n        //   inline: false\n        // }\n        // 定制播放器相关按钮顺序\n        children: [\n          { name: \"playToggle\" }, // 播放按钮\n          {\n            name: \"volumePanel\", // 音量控制\n            inline: false // 不使用水平方式\n          },\n          { name: \"currentTimeDisplay\" }, // 当前已播放时间\n          { name: \"progressControl\" }, // 播放进度条\n          { name: \"durationDisplay\" }, // 总时间\n          // {\n          //   // 倍数播放\n          //   name: \"playbackRateMenuButton\",\n          //   playbackRates: [0.5, 1, 1.5, 2, 2.5]\n          // },\n          { name: \"FullscreenToggle\" } // 全屏\n        ]\n      },\n      errorDisplay: true,\n      // posterImage: false,\n      bigPlayButton: true,\n      textTrackDisplay: false\n    },\n    height:0,\n    videoName:''\n  }),\n  methods: {\n    showChannelName(name){\n      this.videoName = name\n    },\n    /**\n     * 播放HLS直播\n     * liveUrl 直播播放地址\n     * siAutoPlay 是否自动播放\n     */\n    playLiveWithHlsUrl(liveUrl, isAutoPlay = true) {\n      if (this.player != null) {\n        console.log(\"playLiveWithHlsUrl:\" + liveUrl);\n        // this.player.reset();\n        this.player.autoplay(isAutoPlay);\n        // this.player.options.playbackRates = [];\n        this.player.src({\n          type: \"application/x-mpegURL\",\n          src: liveUrl\n        });\n        if (true == isAutoPlay) {\n          this.player.play();\n        }\n      }\n    },\n    /**\n     * 播放HLS点播\n     * vodUrl 点播播放地址\n     * siAutoPlay 是否自动播放\n     */\n    playVodWithHlsUrl(vodUrl, isAutoPlay = true) {\n      if (this.player != null) {\n        console.log(\"playVodWithHlsUrl:\" + vodUrl);\n        // this.player.reset();\n        this.player.autoplay(isAutoPlay);\n        // this.initOptions.playbackRates = [0.25, 0.5, 1.0, 1.5, 2.0];\n        this.player.src({\n          type: \"application/x-mpegURL\",\n          src: vodUrl\n        });\n        if (true == isAutoPlay) {\n          this.player.play();\n        }\n      }\n    },\n    /**\n     * 设置播放器封面，也可使用props中的posterUrl参数\n     */\n    setPlayerPoster(imageUrl) {\n      this.initOptions.poster = imageUrl;\n      if (this.player != null) {\n        // this.player.posterImage.setSrc(imageUrl);\n        this.player.poster(imageUrl);\n      }\n    },\n    /**\n     * 初始化播放器\n     */\n    setupPlayer() {\n      const vm = this;\n      // document.addEventListener(\n      //   \"WeixinJSBridgeReady\",\n      //   function() {\n      //     vm.player.play();\n      //   },\n      //   false\n      // );\n      var self = this;\n      console.log(\"setup_sumaPalyer\" + JSON.stringify(this.initOptions));\n      this.player = this.$video(this.playerId, this.initOptions, function() {\n        //相关事件可参考https://html.spec.whatwg.org/multipage/media.html#mediaevents\n        this.on(\"loadstart\", () => {\n          console.log(\"loadstart\");\n        });\n        // 进度条变化时回调\n        // this.on(\"progress\", () => {\n        //   console.log(\"progress\");\n        // });\n        this.on(\"suspend\", () => {\n          console.log(\"suspend\");\n        });\n        this.on(\"abort\", () => {\n          console.log(\"abort\");\n        });\n        this.on(\"emptied\", () => {\n          console.log(\"emptied\");\n        });\n        this.on(\"stalled\", () => {\n          console.log(\"stalled\");\n        });\n        //首次加载视频的媒体信息时回调（针对一个视频地址仅会触发一次）\n        this.on(\"loadedmetadata\", () => {\n          console.log(\"loadedmetadata\");\n          self.$emit(\"suma-player-loadedmetadata\", self);\n        });\n        this.on(\"loadeddata\", () => {\n          console.log(\"loadeddata\");\n        });\n        this.on(\"canplay\", () => {\n          console.log(\"canplay\");\n        });\n        this.on(\"canplaythrough\", () => {\n          console.log(\"canplaythrough\");\n        });\n        this.on(\"playing\", () => {\n          console.log(\"playing\");\n        });\n        this.on(\"waiting\", () => {\n          console.log(\"waiting\");\n        });\n        this.on(\"seeking\", () => {\n          console.log(\"seeking\");\n        });\n        this.on(\"seeked\", () => {\n          console.log(\"seeked\");\n        });\n        this.on(\"ended\", () => {\n          console.log(\"ended\");\n          self.$emit('plyerEnd')\n        });\n        this.on(\"durationchange\", () => {\n          console.log(\"durationchange\");\n        });\n        // 当前播放时间变化时回调\n        // this.on(\"timeupdate\", () => {\n        //   console.log(\"timeupdate\");\n        // });\n        this.on(\"pause\", () => {\n          console.log(\"pause\");\n        });\n        this.on(\"ratechange\", () => {\n          console.log(\"ratechange\");\n        });\n        this.on(\"resize\", () => {\n          console.log(\"resize\");\n        });\n        this.on(\"loadstart\", () => {\n          console.log(\"loadstart\");\n        });\n        this.on(\"loadstart\", () => {\n          console.log(\"loadstart\");\n        });\n        this.on(\"loadstart\", () => {\n          console.log(\"loadstart\");\n        });\n        this.on(\"ready\", () => {\n          // 播放事件发生时, 立刻调整音量至用户已设置过的音量\n          // this.volume(vm.video.volume);\n          console.log(\"player_ready\");\n          // this.play(); //test\n          self.$emit(\"suma-player-ready\", self);\n        });\n        this.on(\"play\", () => {\n          // 播放事件发生时, 立刻调整音量至用户已设置过的音量\n          // this.volume(vm.video.volume);\n          console.log(\"player_play\");\n          self.$emit(\"suma-player-play\", self);\n        });\n\n        this.on(\"volumechange\", () => {\n          // 音量调整事件\n          // vm.video.volume = this.volume();\n          // window.localStorage.volume = this.volume();\n        });\n\n        this.on(\"error\", () => {\n          // 因为网络加载失败时 重新尝试\n          let err = this.error();\n          if (err.code === 2) {\n            // 判断是否是网络加载问题\n            let buffTime = this.bufferedEnd() - 6;\n            this.load(vm.src);\n            this.currentTime(buffTime);\n            this.play();\n          } else {\n            // 非网络错误\n            // vm.alert.err(err.message);\n            // this.dispose();\n            // this.reset();\n            // this.src({});\n          }\n          console.log(\"sumapalyer_error:\" + JSON.stringify(err));\n        });\n      });\n    },\n    /**\n     * 重置播放器至初始状态\n     */\n    resetPlayer() {\n      if (this.player != null) {\n        console.log(\"player_reset\");\n        //dispose()销毁旧播放器，将会删除整个<video>标签，所以需要重新添加videoNode\n        this.player.dispose();\n        // var videoNode =\n        //   \"<video id='\" +\n        //   this.playerId +\n        //   \"' ref='video' controls class='video-js vjs-default-skin vjs-big-play-centered' x5-playsinline='true' playsinline='true' webkit-playsinline ></video>\";\n        var videoNode = `<video\n          id=\"${this.playerId}\"\n          ref=\"video\"\n          controls\n          class=\"video-js vjs-default-skin vjs-big-play-centered\"\n          x5-playsinline=\"true\"\n          playsinline=\"true\"\n          webkit-playsinline >\n          </video>`;\n        document.getElementById(\"suma-player-parent\").innerHTML += videoNode;\n        this.setupPlayer();\n        //TODO:目前仍存在部分问题，重置播放器后，iOS版微信上无法自动起播\n      }\n    },\n    //暂停\n    pause() {\n      if (this.player != null) {\n        this.player.pause();\n        console.log('player',this.player)\n      }\n    }\n  },\n  props: {\n    // options: {\n    //   type: Object,\n    //   required: true\n    // }\n    posterUrl: {\n      type: String,\n      default: \"\"\n    }\n  },\n  watch: {\n    // src() {\n    //   this.player.src(this.src);\n    // }\n    posterUrl(newV, oldV) {\n      console.log(\"posterUrl_new:\" + newV + \" old:\" + oldV);\n      this.setPlayerPoster(newV);\n    }\n  },\n  computed: {\n    // src() {\n    //   return this.options.sources[0].src;\n    // },\n    // video() {\n    //   return this.$store.state.video;\n    // }\n  },\n  mounted() {\n    console.log(\"player_startMounted\");\n    const vm = this;\n    document.addEventListener(\n      \"WeixinJSBridgeReady\",\n      function() {\n        vm.player.play();\n      },\n      false\n    );\n\n    this.setupPlayer();\n\n    console.log(\"player_mounted\");\n    //------------------计算替换div高度\n     var w = window.innerWidth;\n     this.height = w/16*9\n\n  },\n  beforeDestroy() {\n    //在组件销毁时同时销毁播放器，避免组件重入时播放器显示异常\n    this.player.dispose();\n  }\n};\n</script>\n\n<style>\n.vjs-big-play-button {\n  height: 3em !important;\n  width: 3em !important;\n  line-height: 3em !important;\n  border-radius: 50% !important;\n  margin-top: -1.5em !important;\n}\n\n.vjs-button > .vjs-icon-placeholder:before {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 2em;\n}\n\n.vjs-playback-rate .vjs-playback-rate-value {\n  font-size: 1.8em;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.vjs-control-bar {\n  background: rgba(0, 0, 0, 0.8) !important;\n}\n\n/* 此设置可以保证当前播放时间与总时间可以正常显示 */\n.video-js .vjs-time-control {\n  display: block !important;\n}\n\n/* .video-js .vjs-remaining-time {\n  display: none !important;\n} */\n\n.video-js .vjs-play-progress,\n.video-js .vjs-volume-level {\n  background: linear-gradient(to right, #fc8200, #ffa604) !important;\n}\n\n/* 此选择器可控制音量进度条圆钮 */\n.video-js .vjs-volume-level:before {\n  /* top: -0.333333333333333em !important; */\n  /* top: -1em !important; */\n  /* right: 1em !important; */\n  left: -0.45em !important; /*修正音量条拖动圆钮显示不居中问题*/\n}\n\n/* 此选择器可控制播放进度条圆钮 */\n/* .video-js .vjs-play-progress:before {\n  top: 0em !important;\n} */\n\n.video-js:hover .vjs-big-play-button,\n.vjs-custom-skin > .video-js .vjs-big-play-button:focus,\n.vjs-custom-skin > .video-js .vjs-big-play-button:active {\n  background: linear-gradient(to right, #fc8200, #ffa604) !important;\n  opacity: 0.7;\n}\n\n.vjs-big-play-button .vjs-icon-placeholder {\n  font-size: 70px !important;\n}\n\n.vjs-error .vjs-error-display:before {\n  color: #fff !important;\n  content: \"X\" !important;\n  font-family: Arial, Helvetica, sans-serif !important;\n  font-size: 4.5em !important;\n  left: 0 !important;\n  line-height: 1.8 !important;\n  margin-top: -0.5em !important;\n  position: absolute !important;\n  text-shadow: 0.05em 0.05em 0.1em #000 !important;\n  text-align: center !important;\n  top: 50% !important;\n  vertical-align: middle !important;\n  width: 100% !important;\n}\nvideo {\n\tobject-fit:fill;\n\twidth:100%;\n\theight:100%;\n}\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SumaPlayerExportMain.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SumaPlayerExportMain.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./SumaPlayerExportMain.vue?vue&type=template&id=ef83910a&\"\nimport script from \"./SumaPlayerExportMain.vue?vue&type=script&lang=js&\"\nexport * from \"./SumaPlayerExportMain.vue?vue&type=script&lang=js&\"\nimport style0 from \"./SumaPlayerExportMain.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticStyle:{\"position\":\"relative\"}},[_c('div',{staticClass:\"videoNameClass\"},[_vm._v(\" \"+_vm._s(_vm.videoName)+\" \")]),_c('video',{ref:\"video\",staticClass:\"video-js vjs-default-skin vjs-big-play-centered\",attrs:{\"id\":_vm.playerId,\"controls\":\"\",\"x5-playsinline\":\"true\",\"playsinline\":\"true\",\"webkit-playsinline\":\"\"}})])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div>\n     <div style=\"position:relative\">\n        <div class=\"videoNameClass\">\n          {{videoName}}\n        </div>\n        <video\n          :id=\"playerId\"\n          ref=\"video\"\n          controls\n          class=\"video-js vjs-default-skin vjs-big-play-centered\"\n          x5-playsinline=\"true\"\n          playsinline=\"true\"\n          webkit-playsinline\n        ></video>\n      </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data: () => ({\n    player: null,\n    playerId: \"suma-player4\",\n    initOptions: {\n      // playbackRates: [0.25, 0.5, 1.0, 1.5, 2.0], //播放速度\n      autoplay: true, //如果true,浏览器准备好时开始播放。\n      muted: false, // 默认情况下将会消除任何音频。\n      loop: false, // 导致视频一结束就重新开始。\n      preload: \"auto\", // auto浏览器选择最佳行为,立即开始加载视频（如果浏览器支持）\n      //language: 'zh-CN',\n      aspectRatio: \"16:7\", // 播放器的比例。用冒号分隔的两个数字（例如\"16:9\"或\"4:3\"）\n      fluid: true, // 当true时，播放器将拥有流体大小。换句话说，它将按比例缩放以适应其容器。\n      // sources: [\n      //   {\n      //     type: \"application/x-mpegURL\",\n      //     src: \"http://27.36.62.161:8060/live/fourthgrade_1500.m3u8?ci=123\" //url地址\n      //   }\n      // ],\n      poster: \"\", //你的封面地址\n      // width: document.documentElement.clientWidth,\n      notSupportedMessage: \"此视频暂无法播放，请稍后再试\", //无法播放媒体源时显示的默认信息。\n      controlBar: {\n        // currentTimeDisplay: true,\n        // timeDivider: true,\n        // durationDisplay: true,\n        // remainingTimeDisplay: false,\n        // fullscreenToggle: true, //全屏按钮\n        // volumePanel: {\n        //   inline: false\n        // }\n        // 定制播放器相关按钮顺序\n        children: [\n          { name: \"playToggle\" }, // 播放按钮\n          {\n            name: \"volumePanel\", // 音量控制\n            inline: false // 不使用水平方式\n          },\n          { name: \"currentTimeDisplay\" }, // 当前已播放时间\n          { name: \"progressControl\" }, // 播放进度条\n          { name: \"durationDisplay\" }, // 总时间\n          // {\n          //   // 倍数播放\n          //   name: \"playbackRateMenuButton\",\n          //   playbackRates: [0.5, 1, 1.5, 2, 2.5]\n          // },\n          { name: \"FullscreenToggle\" } // 全屏\n        ]\n      },\n      errorDisplay: true,\n      // posterImage: false,\n      bigPlayButton: true,\n      textTrackDisplay: false,\n    },\n    height:0,\n    videoName:''\n  }),\n  methods: {\n    showChannelName(name){\n      this.videoName = name\n    },\n    /**\n     * 播放HLS直播\n     * liveUrl 直播播放地址\n     * siAutoPlay 是否自动播放\n     */\n    playLiveWithHlsUrl(liveUrl, isAutoPlay = true) {\n      if (this.player != null) {\n        console.log(\"playLiveWithHlsUrl:\" + liveUrl);\n        // this.player.reset();\n        this.player.autoplay(isAutoPlay);\n        // this.player.options.playbackRates = [];\n        this.player.src({\n          type: \"application/x-mpegURL\",\n          src: liveUrl\n        });\n        if (true == isAutoPlay) {\n          this.player.play();\n        }\n      }\n    },\n    /**\n     * 播放HLS点播\n     * vodUrl 点播播放地址\n     * siAutoPlay 是否自动播放\n     */\n    playVodWithHlsUrl(vodUrl, isAutoPlay = true) {\n      if (this.player != null) {\n        console.log(\"playVodWithHlsUrl:\" + vodUrl);\n        // this.player.reset();\n        this.player.autoplay(isAutoPlay);\n        // this.initOptions.playbackRates = [0.25, 0.5, 1.0, 1.5, 2.0];\n        this.player.src({\n          type: \"application/x-mpegURL\",\n          src: vodUrl\n        });\n        if (true == isAutoPlay) {\n          this.player.play();\n        }\n      }\n    },\n    /**\n     * 设置播放器封面，也可使用props中的posterUrl参数\n     */\n    setPlayerPoster(imageUrl) {\n      this.initOptions.poster = imageUrl;\n      if (this.player != null) {\n        // this.player.posterImage.setSrc(imageUrl);\n        this.player.poster(imageUrl);\n      }\n    },\n    /**\n     * 初始化播放器\n     */\n    setupPlayer() {\n      const vm = this;\n      // document.addEventListener(\n      //   \"WeixinJSBridgeReady\",\n      //   function() {\n      //     vm.player.play();\n      //   },\n      //   false\n      // );\n      var self = this;\n      console.log(\"setup_sumaPalyer\" + JSON.stringify(this.initOptions));\n      this.player = this.$video(this.playerId, this.initOptions, function() {\n        //相关事件可参考https://html.spec.whatwg.org/multipage/media.html#mediaevents\n        this.on(\"loadstart\", () => {\n          console.log(\"loadstart\");\n        });\n        // 进度条变化时回调\n        // this.on(\"progress\", () => {\n        //   console.log(\"progress\");\n        // });\n        this.on(\"suspend\", () => {\n          console.log(\"suspend\");\n        });\n        this.on(\"abort\", () => {\n          console.log(\"abort\");\n        });\n        this.on(\"emptied\", () => {\n          console.log(\"emptied\");\n        });\n        this.on(\"stalled\", () => {\n          console.log(\"stalled\");\n        });\n        //首次加载视频的媒体信息时回调（针对一个视频地址仅会触发一次）\n        this.on(\"loadedmetadata\", () => {\n          console.log(\"loadedmetadata\");\n          self.$emit(\"suma-player-loadedmetadata\", self);\n        });\n        this.on(\"loadeddata\", () => {\n          console.log(\"loadeddata\");\n        });\n        this.on(\"canplay\", () => {\n          console.log(\"canplay\");\n        });\n        this.on(\"canplaythrough\", () => {\n          console.log(\"canplaythrough\");\n        });\n        this.on(\"playing\", () => {\n          console.log(\"playing\");\n        });\n        this.on(\"waiting\", () => {\n          console.log(\"waiting\");\n        });\n        this.on(\"seeking\", () => {\n          console.log(\"seeking\");\n        });\n        this.on(\"seeked\", () => {\n          console.log(\"seeked\");\n        });\n        this.on(\"ended\", () => {\n          console.log(\"ended\");\n          self.$emit('plyerEnd')\n        });\n        this.on(\"durationchange\", () => {\n          console.log(\"durationchange\");\n        });\n        // 当前播放时间变化时回调\n        // this.on(\"timeupdate\", () => {\n        //   console.log(\"timeupdate\");\n        // });\n        this.on(\"pause\", () => {\n          console.log(\"pause\");\n        });\n        this.on(\"ratechange\", () => {\n          console.log(\"ratechange\");\n        });\n        this.on(\"resize\", () => {\n          console.log(\"resize\");\n        });\n        this.on(\"loadstart\", () => {\n          console.log(\"loadstart\");\n        });\n        this.on(\"loadstart\", () => {\n          console.log(\"loadstart\");\n        });\n        this.on(\"loadstart\", () => {\n          console.log(\"loadstart\");\n        });\n        this.on(\"ready\", () => {\n          // 播放事件发生时, 立刻调整音量至用户已设置过的音量\n          // this.volume(vm.video.volume);\n          console.log(\"player_ready\");\n          // this.play(); //test\n          self.$emit(\"suma-player-ready\", self);\n        });\n        this.on(\"play\", () => {\n          // 播放事件发生时, 立刻调整音量至用户已设置过的音量\n          // this.volume(vm.video.volume);\n          console.log(\"player_play\");\n          self.$emit(\"suma-player-play\", self);\n        });\n\n        this.on(\"volumechange\", () => {\n          // 音量调整事件\n          // vm.video.volume = this.volume();\n          // window.localStorage.volume = this.volume();\n        });\n\n        this.on(\"error\", () => {\n          // 因为网络加载失败时 重新尝试\n          let err = this.error();\n          if (err.code === 2) {\n            // 判断是否是网络加载问题\n            let buffTime = this.bufferedEnd() - 6;\n            this.load(vm.src);\n            this.currentTime(buffTime);\n            this.play();\n          } else {\n            // 非网络错误\n            // vm.alert.err(err.message);\n            // this.dispose();\n            // this.reset();\n            // this.src({});\n          }\n          console.log(\"sumapalyer_error:\" + JSON.stringify(err));\n        });\n      });\n    },\n    /**\n     * 重置播放器至初始状态\n     */\n    resetPlayer() {\n      if (this.player != null) {\n        console.log(\"player_reset\");\n        //dispose()销毁旧播放器，将会删除整个<video>标签，所以需要重新添加videoNode\n        this.player.dispose();\n        // var videoNode =\n        //   \"<video id='\" +\n        //   this.playerId +\n        //   \"' ref='video' controls class='video-js vjs-default-skin vjs-big-play-centered' x5-playsinline='true' playsinline='true' webkit-playsinline ></video>\";\n        var videoNode = `<video\n          id=\"${this.playerId}\"\n          ref=\"video\"\n          controls\n          class=\"video-js vjs-default-skin vjs-big-play-centered\"\n          x5-playsinline=\"true\"\n          playsinline=\"true\"\n          webkit-playsinline >\n          </video>`;\n        document.getElementById(\"suma-player-parent\").innerHTML += videoNode;\n        this.setupPlayer();\n        //TODO:目前仍存在部分问题，重置播放器后，iOS版微信上无法自动起播\n      }\n    },\n    //暂停\n    pause() {\n      if (this.player != null) {\n        this.player.pause();\n        console.log('player',this.player)\n      }\n    }\n  },\n  props: {\n    // options: {\n    //   type: Object,\n    //   required: true\n    // }\n    posterUrl: {\n      type: String,\n      default: \"\"\n    }\n  },\n  watch: {\n    // src() {\n    //   this.player.src(this.src);\n    // }\n    posterUrl(newV, oldV) {\n      console.log(\"posterUrl_new:\" + newV + \" old:\" + oldV);\n      this.setPlayerPoster(newV);\n    }\n  },\n  computed: {\n    // src() {\n    //   return this.options.sources[0].src;\n    // },\n    // video() {\n    //   return this.$store.state.video;\n    // }\n  },\n  mounted() {\n    console.log(\"player_startMounted\");\n    const vm = this;\n    document.addEventListener(\n      \"WeixinJSBridgeReady\",\n      function() {\n        vm.player.play();\n      },\n      false\n    );\n\n    this.setupPlayer();\n\n    console.log(\"player_mounted\");\n    //------------------计算替换div高度\n     var w = window.innerWidth;\n     this.height = w/16*9\n\n  },\n  beforeDestroy() {\n    //在组件销毁时同时销毁播放器，避免组件重入时播放器显示异常\n    this.player.dispose();\n  }\n};\n</script>\n\n<style>\n.vjs-big-play-button {\n  height: 3em !important;\n  width: 3em !important;\n  line-height: 3em !important;\n  border-radius: 50% !important;\n  margin-top: -1.5em !important;\n}\n\n.vjs-button > .vjs-icon-placeholder:before {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 2em;\n}\n\n.vjs-playback-rate .vjs-playback-rate-value {\n  font-size: 1.8em;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.vjs-control-bar {\n  background: rgba(0, 0, 0, 0.8) !important;\n}\n\n/* 此设置可以保证当前播放时间与总时间可以正常显示 */\n.video-js .vjs-time-control {\n  display: block !important;\n}\n\n/* .video-js .vjs-remaining-time {\n  display: none !important;\n} */\n\n.video-js .vjs-play-progress,\n.video-js .vjs-volume-level {\n  background: linear-gradient(to right, #fc8200, #ffa604) !important;\n}\n\n/* 此选择器可控制音量进度条圆钮 */\n.video-js .vjs-volume-level:before {\n  /* top: -0.333333333333333em !important; */\n  /* top: -1em !important; */\n  /* right: 1em !important; */\n  left: -0.45em !important; /*修正音量条拖动圆钮显示不居中问题*/\n}\n\n/* 此选择器可控制播放进度条圆钮 */\n/* .video-js .vjs-play-progress:before {\n  top: 0em !important;\n} */\n\n.video-js:hover .vjs-big-play-button,\n.vjs-custom-skin > .video-js .vjs-big-play-button:focus,\n.vjs-custom-skin > .video-js .vjs-big-play-button:active {\n  background: linear-gradient(to right, #fc8200, #ffa604) !important;\n  opacity: 0.7;\n}\n\n.vjs-big-play-button .vjs-icon-placeholder {\n  font-size: 70px !important;\n}\n\n.vjs-error .vjs-error-display:before {\n  color: #fff !important;\n  content: \"X\" !important;\n  font-family: Arial, Helvetica, sans-serif !important;\n  font-size: 4.5em !important;\n  left: 0 !important;\n  line-height: 1.8 !important;\n  margin-top: -0.5em !important;\n  position: absolute !important;\n  text-shadow: 0.05em 0.05em 0.1em #000 !important;\n  text-align: center !important;\n  top: 50% !important;\n  vertical-align: middle !important;\n  width: 100% !important;\n}\nvideo {\n\tobject-fit:fill;\n\twidth:100%;\n\theight:100%;\n}\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SumaPlayerExportDetail.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./SumaPlayerExportDetail.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./SumaPlayerExportDetail.vue?vue&type=template&id=65d467ec&\"\nimport script from \"./SumaPlayerExportDetail.vue?vue&type=script&lang=js&\"\nexport * from \"./SumaPlayerExportDetail.vue?vue&type=script&lang=js&\"\nimport style0 from \"./SumaPlayerExportDetail.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\r\n  <div>\r\n      <div\r\n      style=\"width:100%;\r\n        height:38px;\r\n        background:rgba(13,67,111,1);\r\n        box-shadow:0px 2px 10px 0px rgba(0, 0, 0, 0.05);\r\n        font-size:14px;\r\n        font-family:Microsoft YaHei;\r\n        font-weight:400;\r\n        color:rgba(255,255,255,1);\r\n        padding-left:24px;\r\n        line-height:38px;\"\r\n    >\r\n      通道监控\r\n    </div>\r\n     <div style=\"marginTop:10px\">\r\n         <!--默认部分-->\r\n        <div style=\"display:flex;justify-content:flex-start\" v-show=\"!showDetail\">\r\n          <!--左侧部分-->\r\n          <Card :style=\"{width:674*widthBase+'px',marginLeft:'10px'}\">\r\n            <div id=\"chnnel_mon_left\">\r\n                <div style=\"display:flex;justify-content:space-between\">\r\n                    <p style=\"height:50px;lineHeight:50px;width:60%;\" class=\"showRate\">\r\n                       <Tabs  v-model=\"canvas\" @on-click=\"showChannel\">\r\n                          <TabPane label=\"2*2画面\"  name=\"2*2\"></TabPane>\r\n                          <TabPane label=\"3*3画面\"  name=\"3*3\" v-if=\"false\"></TabPane>\r\n                          <TabPane label=\"4*4画面\"  name=\"4*4\" v-if=\"createMeidaNum>=4\"></TabPane>\r\n                      </Tabs>\r\n                      \r\n                    </p>\r\n                    <div>\r\n                      <Button type=\"primary\"  class=\"btn-right\" @click=\"allShut\" >全部关闭</Button>\r\n                      <Button class=\"btn-right\" :loading=\"returnBtnLoadingStatus\" @click=\"returnChannel\" style=\"background:rgba(13,67,111,1);color:rgba(199,219,244,1);\">返回通道管理</Button>\r\n                    </div>\r\n                  </div>\r\n                <div style=\"width:100%;height:75%;border:1px solid gray;display:flex;flex-wrap:wrap;position:relative;background:#263c4d\" id=\"showVideoPlayer\" v-show=\"!isbrower\" @dragover=\"allowDrop\">\r\n                  <!-- <player ref=\"player\"  @fullArea=\"fullAreaEv\" @cancelFullArea=\"cancelFullAreaEv\" @isRecCreate=\"videoRecCreateSuccess\" @isRecEnd=\"playEnding\" @dottedSuccess=\"dottedSuccess\"  @changeRecode=\"changeRecode\" />  -->\r\n                    <!--====================================================-->\r\n                   <div class=\"monRoot\">\r\n                    <!--录制计划确认框-->\r\n                    <Modal\r\n                        v-model=\"recodePlanConfirmModal\"\r\n                        width=\"638\"\r\n                        class=\"planModal\"\r\n                        :closable=\"false\"\r\n                        :mask-closable=\"false\"\r\n                        :transfer=\"false\"\r\n                      >\r\n                      <Form ref=\"formInline\" style=\"margin-top:52px;padding:0 68px\">\r\n                        <FormItem>\r\n                          <span style=\"fontSize:16px;font-weight:400;font-family:Microsoft YaHei;color:rgba(254,254,254,1)\">是否继续遵循录制计划执行?</span>\r\n                          <label style=\"margin-left:45px\">\r\n                            <RadioGroup v-model=\"isStart\" @on-change=\"recodeSwitch\" style=\"color:#fff\">\r\n                                <Radio :label=\"1\">是</Radio>\r\n                                <Radio :label=\"0\">否</Radio>\r\n                            </RadioGroup>\r\n                          </label> \r\n                        </FormItem>\r\n                        <FormItem style=\"marginTop:42px\">\r\n                          <div style=\"color:rgba(175,188,204,1);font-weight:400;font-size:14px;font-family:Microsoft YaHei;\">\r\n                            当您选择\"是\"，打开/关闭通道后，系统后台会打开/关闭当前录制，后续从录制计划中设置的下一时间段开始按各通道录制计划执行，且会根据录制计划自动打开/关闭通道。\r\n                          </div>\r\n                        </FormItem>\r\n                          <FormItem>\r\n                          <div style=\"color:rgba(175,188,204,1);font-weight:400;font-size:14px;font-family:Microsoft YaHei;\">\r\n                            当您选择\"否\"，录制计划失效，打开通道，系统后台将一直录制；关闭通道，系统后台将停止录制，可通过手动开启录制计划中的开关，重新激活录制计划。\r\n                          </div>\r\n                        </FormItem>\r\n                      </Form>\r\n                      <p slot=\"footer\" style=\"display:flex;justify-content:center;margin-top:38px;margin-bottom:20px\">\r\n                          <Button @click=\"recodeCancel\" style=\"background:rgba(13,67,111,1);color:rgba(199,219,244,1);\">取消</Button>\r\n                          <Button type=\"primary\" @click=\"recodeConfirm\" :disabled=\"isGray\" style=\"margin-left:49px\">确定</Button>\r\n                      </p>\r\n                    </Modal>\r\n                  </div>\r\n                   <!--============================================================================-->\r\n                </div>\r\n                <div v-show=\"isbrower\" class=\"mainvideo\" @dragover=\"allowDrop\">\r\n                  <SumaPlayerMain ref=\"videoMain\"  style=\"width:100%;height:100%\"></SumaPlayerMain>\r\n                </div>\r\n            </div>\r\n          </Card>\r\n          <!-- 右侧部分 -->\r\n          <div :style=\"{width:160*widthBase+'px',background:'rgba(22,60,105,1)','margin-left':10*widthBase+'px',padding:'0 6px'}\" id=\"treeCard\">\r\n            <div> \r\n                <p style=\"height:50px;lineHeight:50px;width:35%\"  v-show=\"!showDetail\">\r\n                  <Button @click=\"addClass\" :disabled=\"isGray\" style=\"background:rgba(13,67,111,1);color:rgba(199,219,244,1);\">添加分类</Button>\r\n                </p>\r\n              <div id=\"elTree\" style=\"width:100%;overflow-y:auto;font-size:14px\">\r\n                <el-tree\r\n                    :data=\"treeData\"  \r\n                    draggable\r\n                    :default-expand-all=\"true\"\r\n                    :expand-on-click-node=\"false\"\r\n                    @node-drag-start=\"handleDragStart\"\r\n                    @node-drag-enter=\"handleDragEnter\"\r\n                    @node-drag-leave=\"handleDragLeave\"\r\n                    @node-drag-over=\"handleDragOver\"\r\n                    @node-drag-end=\"handleDragEnd\"\r\n                    @node-drop=\"handleDrop\"\r\n                    :allow-drop=\"drop\"\r\n                    :allow-drag=\"dropAble\"\r\n                    :render-content=\"renderContent\"\r\n                    >\r\n                    <!-- <span slot-scope=\"{node, data}\">\r\n                        <span @dblclick=\"clkDb(data)\">{{data.label}}</span>\r\n                    </span> -->\r\n                  </el-tree>\r\n              </div>\r\n            </div>\r\n         </div>\r\n        </div>\r\n        <!--==================================================详情部分-->\r\n        <div v-show=\"showDetail\" style=\"marginTop:10px\">\r\n          <Card>\r\n           <div class=\"btn_change\">\r\n            <p class=\"showRate\" >\r\n               <Tabs  @on-click=\"importClick\" style=\"width:222px;font-size:14px\">\r\n                <TabPane label=\"导播列表录入\" name=\"import\"></TabPane>\r\n                <TabPane label=\"回看及导出\" name=\"export\"></TabPane>\r\n             </Tabs>\r\n            </p>\r\n             <p style=\"margin-left:30px;width:332px\" class=\"showRate\">\r\n                <Tabs  v-model=\"canvas\" @on-click=\"showChannel\">\r\n                  <TabPane label=\"2*2画面\"  name=\"2*2\"></TabPane>\r\n                  <TabPane label=\"3*3画面\"  name=\"3*3\" v-if=\"createMeidaNum>=3\"></TabPane>\r\n                  <TabPane label=\"4*4画面\"  name=\"4*4\" v-if=\"createMeidaNum>=4\"></TabPane>\r\n                </Tabs>\r\n             </p>\r\n              <Button style=\"margin-left:30px\" type=\"primary\"  @click=\"allShut\" :disabled=\"isGray\">全部关闭</Button>\r\n              <Button class=\"btn-right\" :loading=\"returnBtnLoadingStatus\"  @click=\"returnChannel\" style=\"background:rgba(13,67,111,1);color:rgba(199,219,244,1);\">返回通道管理</Button>\r\n          </div>\r\n          <!-- //=====================================导入部分 -->\r\n          <div v-show=\"flag == 'import'\">\r\n              <div v-show=\"!importDetail\">\r\n                <div style=\"width:100%;height:0;border:1px solid gray;position:relative;background:#263c4d\" id=\"importPlayer\" v-show=\"!isbrower\">\r\n                    <!--====================================================-->\r\n                   <div class=\"monRoot\">\r\n                    <!--录制计划确认框-->\r\n                    <Modal\r\n                        v-model=\"recodePlanConfirmModal\"\r\n                        width=\"638\"\r\n                        class=\"planModal\"\r\n                        :closable=\"false\"\r\n                        :mask-closable=\"false\"\r\n                        :transfer=\"false\"\r\n                      >\r\n                      <Form ref=\"formInline\" style=\"margin-top:52px;padding:0 68px\">\r\n                        <FormItem>\r\n                          <span style=\"fontSize:16px;font-weight:400;font-family:Microsoft YaHei;color:rgba(254,254,254,1)\">是否继续遵循录制计划执行?</span>\r\n                          <label style=\"margin-left:45px\">\r\n                            <RadioGroup v-model=\"isStart\" @on-change=\"recodeSwitch\" style=\"color:#fff\">\r\n                                <Radio :label=\"1\">是</Radio>\r\n                                <Radio :label=\"0\">否</Radio>\r\n                            </RadioGroup>\r\n                          </label> \r\n                        </FormItem>\r\n                        <FormItem style=\"marginTop:42px\">\r\n                          <div style=\"color:rgba(175,188,204,1);font-weight:400;font-size:14px;font-family:Microsoft YaHei;\">\r\n                            当您选择\"是\"，打开/关闭通道后，系统后台会打开/关闭当前录制，后续从录制计划中设置的下一时间段开始按各通道录制计划执行，且会根据录制计划自动打开/关闭通道。\r\n                          </div>\r\n                        </FormItem>\r\n                          <FormItem>\r\n                          <div style=\"color:rgba(175,188,204,1);font-weight:400;font-size:14px;font-family:Microsoft YaHei;\">\r\n                            当您选择\"否\"，录制计划失效，打开通道，系统后台将一直录制；关闭通道，系统后台将停止录制，可通过手动开启录制计划中的开关，重新激活录制计划。\r\n                          </div>\r\n                        </FormItem>\r\n                      </Form>\r\n                      <p slot=\"footer\" style=\"display:flex;justify-content:center;margin-top:38px;margin-bottom:20px\">\r\n                          <Button @click=\"recodeCancel\" style=\"background:rgba(13,67,111,1);color:rgba(199,219,244,1);\">取消</Button>\r\n                          <Button type=\"primary\" @click=\"recodeConfirm\" :disabled=\"isGray\" style=\"margin-left:49px\">确定</Button>\r\n                      </p>\r\n                    </Modal>\r\n                  </div>\r\n                   <!--============================================================================-->\r\n                </div>\r\n                <div v-show=\"isbrower\">\r\n                  <SumaPlayerImportMain ref=\"videoImportMain\"  style=\"width:100%;height:100%\"></SumaPlayerImportMain>\r\n                </div>\r\n                <div style=\"width:100%;display:flex;justify-content:center;marginTop:30px;align-items:center;\" class=\"btn-right\">\r\n                    <Button type=\"primary\" @click=\"importByHand\">{{importListButton}}</Button>\r\n                    <Upload action=\"//jsonplaceholder.typicode.com/posts/\" :before-upload=\"handleUpload\" style=\"marginTop:8px\">\r\n                        <Button class=\"btn-right\" style=\"background:rgba(13,67,111,1);color:rgba(199,219,244,1);\" :disabled=\"isGray\">从文件导入</Button>\r\n                    </Upload>\r\n                </div>\r\n              </div>\r\n              <div v-show=\"importDetail\" style=\"display:flex;justify-content:space-between\">\r\n               <!--左侧部分-->\r\n                <div style=\"width:62.5%;\" v-show=\"!isbrower\">\r\n                  <div :style=\"{width:'100%',height:this.innerHeight-460+'px','padding-top':'56.25%',border:'1px solid #3aa7dd',position:'relative',background:'#263c4d'}\" id=\"fullArea\">\r\n                    <!--====================================================-->\r\n                    <div class=\"monRoot\">\r\n                      <!--录制计划确认框-->\r\n                      <Modal\r\n                          v-model=\"recodePlanConfirmModal\"\r\n                          width=\"638\"\r\n                          class=\"planModal\"\r\n                          :closable=\"false\"\r\n                          :mask-closable=\"false\"\r\n                          :transfer=\"false\"\r\n                        >\r\n                        <Form ref=\"formInline\" style=\"margin-top:52px;padding:0 68px\">\r\n                          <FormItem>\r\n                            <span style=\"fontSize:16px;font-weight:400;font-family:Microsoft YaHei;color:rgba(254,254,254,1)\">是否继续遵循录制计划执行?</span>\r\n                            <label style=\"margin-left:45px\">\r\n                              <RadioGroup v-model=\"isStart\" @on-change=\"recodeSwitch\" style=\"color:#fff\">\r\n                                  <Radio :label=\"1\">是</Radio>\r\n                                  <Radio :label=\"0\">否</Radio>\r\n                              </RadioGroup>\r\n                            </label> \r\n                          </FormItem>\r\n                          <FormItem style=\"marginTop:42px\">\r\n                            <div style=\"color:rgba(175,188,204,1);font-weight:400;font-size:14px;font-family:Microsoft YaHei;\">\r\n                              当您选择\"是\"，打开/关闭通道后，系统后台会打开/关闭当前录制，后续从录制计划中设置的下一时间段开始按各通道录制计划执行，且会根据录制计划自动打开/关闭通道。\r\n                            </div>\r\n                          </FormItem>\r\n                            <FormItem>\r\n                            <div style=\"color:rgba(175,188,204,1);font-weight:400;font-size:14px;font-family:Microsoft YaHei;\">\r\n                              当您选择\"否\"，录制计划失效，打开通道，系统后台将一直录制；关闭通道，系统后台将停止录制，可通过手动开启录制计划中的开关，重新激活录制计划。\r\n                            </div>\r\n                          </FormItem>\r\n                        </Form>\r\n                        <p slot=\"footer\" style=\"display:flex;justify-content:center;margin-top:38px;margin-bottom:20px\">\r\n                            <Button @click=\"recodeCancel\" style=\"background:rgba(13,67,111,1);color:rgba(199,219,244,1);\">取消</Button>\r\n                            <Button type=\"primary\" @click=\"recodeConfirm\" :disabled=\"isGray\" style=\"margin-left:49px\">确定</Button>\r\n                        </p>\r\n                      </Modal>\r\n                    </div>\r\n                   <!--============================================================================-->\r\n                  </div>\r\n                   <div style=\"width:100%;display:flex;justify-content:center;marginTop:30px;align-items:center;\" class=\"btn-right\">\r\n                      <Button type=\"primary\" @click=\"importByHand\">{{importListButton}}</Button>\r\n                      <Upload action=\"//jsonplaceholder.typicode.com/posts/\" :before-upload=\"handleUpload\" style=\"marginTop:8px\">\r\n                         <Button class=\"btn-right\" style=\"background:rgba(13,67,111,1);color:rgba(199,219,244,1);\" :disabled=\"isGray\">从文件导入</Button>\r\n                      </Upload>\r\n                  </div>\r\n                </div>\r\n                <div style=\"width:62.5%;\" v-show=\"isbrower\">\r\n                  <SumaPlayerImportDetail ref=\"videoImportDetail\"  style=\"width:100%;height:100%\"></SumaPlayerImportDetail>\r\n                </div>\r\n              <!--右侧部分-->\r\n              <div style=\"width:37.5%;\">\r\n                 <Form style=\"width:95%;margin:0px auto\" :label-width=\"83\" label-position=\"left\" id=\"importFormId\">\r\n                  <FormItem label=\"日期：\">\r\n                      <DatePicker type=\"date\" placeholder=\"请选择日期\" :style=\"{width:200*widthBase+'px'}\" v-model=\"importDate\" @on-change=\"importDateChange\"></DatePicker>\r\n                  </FormItem>\r\n                  <FormItem label=\"导播列表：\" >\r\n                    <div style=\"display:flex;align-items:center\">\r\n                      <Button style=\"background:rgba(13,67,111,1);color:rgba(199,219,244,1);marginBottom:6px\" :disabled=\"isGray\"  @click=\"addMore\">新建</Button>\r\n                    </div>\r\n                  </FormItem>\r\n                </Form>\r\n                 <!--右侧下半部分-->\r\n                <div style=\"width:95%;height:400px;border:1px solid #3aa7dd;border-radius:5px;margin:7px auto;background:rgba(22,60,105,1); overflow-y:auto;overflow-x:hidden\" id=\"importList\">\r\n                  <div :style=\"{width:278*widthBase+'px',display:'flex',margin:'5px','align-items':'center','border-bottom':'1px solid #576F8C',padding:'20px 0'}\" v-for=\"(item,index) in timeArr\" :key=\"index\">\r\n                    <div>\r\n                      <TimePicker type=\"timerange\" placeholder=\"起始时间 - 结束时间\" v-model=\"item.value1\"  :style=\"{width:237*widthBase+'px'}\" :editable=\"false\" :disabled=\"isGray\" placement=\"bottom-start\" :transfer=\"true\"  transfer-class-name=\"timerTransfer\"></TimePicker>\r\n                      <br>\r\n                      <Input placeholder=\"请输入名称\"  :style=\"{width:237*widthBase+'px',marginTop:'10px'}\" v-model=\"item.name1\" :disabled=\"isGray\"></Input>\r\n                    </div>\r\n                    <div style=\"margin-left:4px\">\r\n                       <Icon type=\"ios-close-circle-outline\" size=\"30\" :disabled=\"timeArr.length===1\" :style=\"{cursor:timeArr.length===1||isGray?'not-allowed':'pointer'}\"  @click=\"remove(index)\"/>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div style=\"text-align:center;margin:20px 0px\">\r\n                  <Button type=\"primary\"  :disabled=\"isGray\" @click=\"createChannelProgramList\">保存</Button>\r\n                  <Button class=\"btn-right\"  style=\"background:rgba(13,67,111,1);color:rgba(199,219,244,1);\" :disabled=\"isGray\" @click=\"exportFileList\">导出</Button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n             \r\n          </div>\r\n            <!-- //=====================================导出部分 -->\r\n          <div v-show=\"flag=='export'\">\r\n            <div v-show=\"!exportDetail\">\r\n              <div style=\"width:100%;height:0;border:1px solid gray;position:relative;background:#263c4d\" id=\"exportPlayer\" v-show=\"!isbrower\">\r\n\r\n                 <!--====================================================-->\r\n                   <div class=\"monRoot\">\r\n                    <!--录制计划确认框-->\r\n                    <Modal\r\n                        v-model=\"recodePlanConfirmModal\"\r\n                        width=\"638\"\r\n                        class=\"planModal\"\r\n                        :closable=\"false\"\r\n                        :mask-closable=\"false\"\r\n                        :transfer=\"false\"\r\n                      >\r\n                      <Form ref=\"formInline\" style=\"margin-top:52px;padding:0 68px\">\r\n                        <FormItem>\r\n                          <span style=\"fontSize:16px;font-weight:400;font-family:Microsoft YaHei;color:rgba(254,254,254,1)\">是否继续遵循录制计划执行?</span>\r\n                          <label style=\"margin-left:45px\">\r\n                            <RadioGroup v-model=\"isStart\" @on-change=\"recodeSwitch\" style=\"color:#fff\">\r\n                                <Radio :label=\"1\">是</Radio>\r\n                                <Radio :label=\"0\">否</Radio>\r\n                            </RadioGroup>\r\n                          </label> \r\n                        </FormItem>\r\n                        <FormItem style=\"marginTop:42px\">\r\n                          <div style=\"color:rgba(175,188,204,1);font-weight:400;font-size:14px;font-family:Microsoft YaHei;\">\r\n                            当您选择\"是\"，打开/关闭通道后，系统后台会打开/关闭当前录制，后续从录制计划中设置的下一时间段开始按各通道录制计划执行，且会根据录制计划自动打开/关闭通道。\r\n                          </div>\r\n                        </FormItem>\r\n                          <FormItem>\r\n                          <div style=\"color:rgba(175,188,204,1);font-weight:400;font-size:14px;font-family:Microsoft YaHei;\">\r\n                            当您选择\"否\"，录制计划失效，打开通道，系统后台将一直录制；关闭通道，系统后台将停止录制，可通过手动开启录制计划中的开关，重新激活录制计划。\r\n                          </div>\r\n                        </FormItem>\r\n                      </Form>\r\n                      <p slot=\"footer\" style=\"display:flex;justify-content:center;margin-top:38px;margin-bottom:20px\">\r\n                          <Button @click=\"recodeCancel\" style=\"background:rgba(13,67,111,1);color:rgba(199,219,244,1);\">取消</Button>\r\n                          <Button type=\"primary\" @click=\"recodeConfirm\" :disabled=\"isGray\" style=\"margin-left:49px\">确定</Button>\r\n                      </p>\r\n                    </Modal>\r\n                  </div>\r\n                   <!--============================================================================-->\r\n\r\n              </div>\r\n              <div v-show=\"isbrower\">\r\n                <SumaPlayerExportMain ref=\"videoExportMain\"></SumaPlayerExportMain>  \r\n              </div>\r\n              <div style=\"width:100%;display:flex;justify-content:center;marginTop:38px;marginBottom:8px;align-items:center;\" class=\"btn-right\">\r\n                   <Button type=\"primary\" @click=\"exportByList\">{{exportListButton}}</Button>\r\n                   <Button type=\"primary\" @click=\"exportByTime\" style=\"margin-left:30px;\">{{exportTimeButton}}</Button>\r\n              </div>\r\n            </div>\r\n           <div v-show=\"exportDetail\" >\r\n              <div style=\"display:flex;justify-content:space-between\">\r\n               <!--左侧部分-->\r\n              <div style=\"width:62.5%;\">\r\n                  <div style=\"width:100%;height:0;padding-top:56.25%;border:1px solid #3aa7dd;position:relative;background:#263c4d\" id=\"fullArea1\" v-show=\"!isbrower\">\r\n                     <!--====================================================-->\r\n                   <div class=\"monRoot\">\r\n                    <!--录制计划确认框-->\r\n                    <Modal\r\n                        v-model=\"recodePlanConfirmModal\"\r\n                        width=\"638\"\r\n                        class=\"planModal\"\r\n                        :closable=\"false\"\r\n                        :mask-closable=\"false\"\r\n                        :transfer=\"false\"\r\n                      >\r\n                      <Form ref=\"formInline\" style=\"margin-top:52px;padding:0 68px\">\r\n                        <FormItem>\r\n                          <span style=\"fontSize:16px;font-weight:400;font-family:Microsoft YaHei;color:rgba(254,254,254,1)\">是否继续遵循录制计划执行?</span>\r\n                          <label style=\"margin-left:45px\">\r\n                            <RadioGroup v-model=\"isStart\" @on-change=\"recodeSwitch\" style=\"color:#fff\">\r\n                                <Radio :label=\"1\">是</Radio>\r\n                                <Radio :label=\"0\">否</Radio>\r\n                            </RadioGroup>\r\n                          </label> \r\n                        </FormItem>\r\n                        <FormItem style=\"marginTop:42px\">\r\n                          <div style=\"color:rgba(175,188,204,1);font-weight:400;font-size:14px;font-family:Microsoft YaHei;\">\r\n                            当您选择\"是\"，打开/关闭通道后，系统后台会打开/关闭当前录制，后续从录制计划中设置的下一时间段开始按各通道录制计划执行，且会根据录制计划自动打开/关闭通道。\r\n                          </div>\r\n                        </FormItem>\r\n                          <FormItem>\r\n                          <div style=\"color:rgba(175,188,204,1);font-weight:400;font-size:14px;font-family:Microsoft YaHei;\">\r\n                            当您选择\"否\"，录制计划失效，打开通道，系统后台将一直录制；关闭通道，系统后台将停止录制，可通过手动开启录制计划中的开关，重新激活录制计划。\r\n                          </div>\r\n                        </FormItem>\r\n                      </Form>\r\n                      <p slot=\"footer\" style=\"display:flex;justify-content:center;margin-top:38px;margin-bottom:20px\">\r\n                          <Button @click=\"recodeCancel\" style=\"background:rgba(13,67,111,1);color:rgba(199,219,244,1);\">取消</Button>\r\n                          <Button type=\"primary\" @click=\"recodeConfirm\" :disabled=\"isGray\" style=\"margin-left:49px\">确定</Button>\r\n                      </p>\r\n                    </Modal>\r\n                  </div>\r\n                   <!--============================================================================-->\r\n                    \r\n              </div>\r\n              <div v-show=\"isbrower\">\r\n                <SumaPlayerExportDetail ref=\"videoExportDetail\" @plyerEnd=\"videoViewPlyerEnd\"></SumaPlayerExportDetail>\r\n              </div>\r\n                <div style=\"width:100%;display:flex;justify-content:center;marginTop:30px;align-items:center;\" class=\"btn-right\">\r\n                   <Button type=\"primary\" @click=\"exportByList\">{{exportListButton}}</Button>\r\n                   <Button type=\"primary\" @click=\"exportByTime\" style=\"margin-left:30px\">{{exportTimeButton}}</Button>\r\n                </div>\r\n              </div>\r\n              <!--右侧部分-->\r\n              <div style=\"width:37.5%;\">\r\n                <Form style=\"width:95%;margin:0px auto\" :label-width=\"40\" label-position=\"left\">\r\n                  <FormItem label=\"日期\">\r\n                      <DatePicker type=\"date\" placeholder=\"请选择日期\" style=\"width: 200px\" v-model=\"exportDate\" @on-change=\"exportDateChange\"></DatePicker>\r\n                  </FormItem>\r\n                </Form>\r\n                  <!--exportType==1-->\r\n                  <div id=\"exportListMenu\" style=\"width:95%;height:442px;border:1px solid #3aa7dd;border-radius:5px;background:rgba(22,60,105,1); overflow:auto;margin:0 auto\"  v-show=\"exportType==1\">\r\n                    <!-- <div style=\"display:flex;justify-content:space-between;align-items:center\"> -->\r\n                      <div style=\"margin:20px 15px;display:flex\">\r\n                        <Input style=\"width:100%\" placeholder=\"请输入关键字\" v-model=\"pramName\"></Input>\r\n                        <Button type=\"primary\"  @click=\"searchRecordProgramList\" style=\"width:80px;margin-left:10px\">查询</Button>\r\n                      </div>\r\n                    <!-- </div> -->\r\n                    <div class=\"showRate\">\r\n                        <Tabs v-model=\"listType\" @on-click=\"tabClick\">\r\n                            <TabPane label=\"计划列表\" id=\"plan\">\r\n                              <div id=\"exportListPlanMenu\" style=\"height:300px;overflow-y:auto;\">\r\n                                  <CheckboxGroup vertical v-model=\"selectPlanArr\" @on-change=\"selectPlanArrChange\">\r\n                                      <div v-for=\"(item,index) in radioPlanTimeList\" :key=\"index\" style=\"marginBottom:18px;padding-left:10px\">\r\n                                        <Checkbox :label=\"item.id\" :disabled='getDisabledStatus1(item)'>\r\n                                        <span :style=\"{color:item.ischecked?'#2d8cf0':!getDisabledStatus(item)?'#fff':'gray',fontSize:'14px'}\"> {{item.time}} {{item.name}}</span>\r\n                                      </Checkbox>\r\n                                      </div>\r\n                                  </CheckboxGroup>\r\n                                  <div v-show=\"radioPlanTimeList.length===0\">\r\n                                    <p style=\"fontWeight:600;padding-left:20px\">暂无节目单</p>\r\n                                  </div>\r\n                              </div>\r\n                            </TabPane>\r\n                            <TabPane label=\"手动打点列表\">\r\n                              <div id=\"exportListHandMenu\" style=\"height:300px;overflow-y:auto;color:fff\">\r\n                                  <CheckboxGroup  v-model=\"selectHandArr\" @on-change=\"selectHandArrChange\">\r\n                                      <div v-for=\"(item,index) in radioHandTimeList\" :key=\"index\" style=\"marginBottom:18px;padding-left:10px\">\r\n                                        <Checkbox :label=\"item.id\" :disabled='getDisabledStatus1(item)'>\r\n                                          <span :style=\"{color:item.ischecked?'#2d8cf0':!getDisabledStatus(item)?'#fff':'gray',fontSize:'14px'}\"> {{item.time}} {{item.name}}</span>\r\n                                        </Checkbox>\r\n                                      </div>\r\n                                  </CheckboxGroup>\r\n                                  <div v-show=\"radioHandTimeList.length===0\">\r\n                                    <p style=\"fontWeight:600;padding-left:20px\">暂无节目单</p>\r\n                                  </div>\r\n                              </div>\r\n                            </TabPane>\r\n                        </Tabs>\r\n                    </div>\r\n                </div>\r\n                <!--exportType==2-->\r\n\r\n                <div style=\"display:flex;justify-content:space-between;align-items:center;margin:10px\" v-show=\"exportType==2\">\r\n                      <p style=\"color:rgba(255,255,255,1);font-size:14px;\">按时间段导出</p>\r\n                       <Button style=\"background:rgba(13,67,111,1);color:rgba(199,219,244,1)\"  @click=\"addMore1\" :disabled=\"isGray\">新建</Button>\r\n                    </div>\r\n                <div id=\"exportTimeMenu\" style=\"width:95%;height:400px;border:1px solid #3aa7dd;border-radius:5px;margin:10px auto;background:rgba(22,60,105,1);overflow:auto;margin:0 auto\" v-show=\"exportType==2\">\r\n                    <div style=\"display:flex;margin:0 5px;align-items:center;border-bottom:1px solid #576F8C;padding:20px 0\" v-for=\"(item,index) in timeArr1\" :key=\"index\">\r\n                      <TimePicker type=\"timerange\" placeholder=\"起始时间 - 结束时间\" v-model=\"item.value1\" style=\"width:100%;margin-right:10px\" class=\"exportInput\" :disabled=\"isGray\" transfer-class-name=\"timerTransfer\" :transfer=\"true\"></TimePicker>\r\n                      <div>\r\n                        <!-- <Button size=\"small\"  shape=\"circle\" icon=\"md-remove\" class=\"btn-right\" :disabled=\"isGray\" @click=\"remove1(index)\"></Button> -->\r\n                        <Icon type=\"ios-close-circle-outline\" size=\"25\" color=\"#576F8C\" :style=\"{cursor:timeArr1.length===1||isGray?'not-allowed':'pointer'}\"  @click=\"remove1(index)\"/>\r\n                      </div>\r\n                  </div>\r\n                </div>\r\n                <!--exportType==end-->\r\n                <div style=\"display:flex;marginTop:20px;align-items:center;\" class=\"btn-right\">\r\n                   <Checkbox v-model=\"single\" :disabled=\"isGray\" style=\"margin-right:30px\">\r\n                     <span style=\"fontSize:14px;color:#fff\">\r\n                       合并导出\r\n                      </span>\r\n                    </Checkbox>\r\n                  <Button type=\"primary\" style=\"background:rgba(13,67,111,1);color:rgba(199,219,244,1);margin-right:10px\" :disabled=\"isGray\" @click=\"paragramView\">预览</Button>\r\n                   <Button type=\"primary\"  :disabled=\"isGray\" @click=\"exportFileModal\">\r\n                     导出文件\r\n                   </Button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          </div>\r\n        </Card>\r\n      </div>\r\n     </div>\r\n      <Modal\r\n       v-model=\"classModal\"\r\n       :mask-closable=\"false\"\r\n        >\r\n        <p style=\"fontWeight:700;color:#fff\">{{title}}</p>\r\n        <p>\r\n          <Input  v-model=\"classNameInput\" style=\"width:300px\" :maxlength=\"20\"></Input>\r\n           <span style=\"color:#fff;margin-right:15px\">{{classNameInput.length}}/20</span>\r\n           <Button type=\"primary\" size=\"small\" class=\"btn-right\" @click=\"classConfirm\">确定</Button>\r\n        </p>\r\n         <p slot=\"footer\">\r\n\r\n         </p>\r\n    </Modal>\r\n    <Modal v-model=\"fileModal\" footer-hide title=\"导出设置\" :mask-closable=\"false\" :width=\"680\" @on-cancel=\"fileModalCancel\">\r\n      <div style=\"display:flex;justify-content:center;align-items:center;margin-top:100px\">\r\n        <Form ref=\"formInline\" label-position=\"right\" :label-width=\"100\">\r\n            <FormItem label=\"导出文件名称\">\r\n                <Input placeholder=\"请输入\" style=\"width:350px\"  v-model=\"exportFileName\" :disabled=\"isGray||!single\"></Input>\r\n            </FormItem>\r\n             <FormItem label=\"视频格式\" v-show=\"channelData.channelType==0||channelData.channelType==1\">\r\n                 <Select  style=\"width:350px\"  v-model=\"videoType\" :disabled=\"isGray\">\r\n                    <Option v-for=\"item in videoList\" :value=\"item.metaDataName\" :key=\"item.metaDataValue\">{{ item.metaDataName }}</Option>\r\n                </Select>\r\n            </FormItem>\r\n             <FormItem label=\"音频格式\" v-show=\"channelData.channelType==2\">\r\n                 <Select  style=\"width:350px\"  v-model=\"audioType\" :disabled=\"isGray\" id=\"audioTypeId\">\r\n                    <Option v-for=\"item in audioList\" :value=\"item.metaDataName\" :key=\"item.metaDataValue\">{{ item.metaDataName }}</Option>\r\n                </Select>\r\n            </FormItem>\r\n        </Form>\r\n      </div>\r\n      <div style=\"display:flex;justify-content:center;align-items:center;margin-top:140px;margin-bottom:10px\">\r\n        <Button type=\"primary\" style=\"background:rgba(13,67,111,1);color:rgba(199,219,244,1);margin-right:50px\" @click=\"fileModalCancel\">取消</Button>\r\n         <Button type=\"primary\" :disabled=\"isGray\" @click=\"exportFile\">确定</Button>\r\n      </div>\r\n    </Modal>\r\n     <div>\r\n        <player ref=\"player\"  @fullArea=\"fullAreaEv\" @cancelFullArea=\"cancelFullAreaEv\" @isRecCreate=\"videoRecCreateSuccess\" @isRecEnd=\"playEnding\" @dottedSuccess=\"dottedSuccess\"  @changeRecode=\"changeRecode\"/> \r\n     </div>\r\n     \r\n  </div>\r\n</template>\r\n<script>\r\n  import SumaPlayerMain from \"@/components/SumaPlayerMain.vue\";\r\n  import SumaPlayerImportMain from \"@/components/SumaPlayerImportMain.vue\";\r\n  import SumaPlayerImportDetail from \"@/components/SumaPlayerImportDetail.vue\"\r\n  import SumaPlayerExportMain from '@/components/SumaPlayerExportMain.vue'\r\n  import SumaPlayerExportDetail from '@/components/SumaPlayerExportDetail.vue'\r\n  import videoImage from \"../../../images/login_bg.jpg\"\r\n  import api from '@/api/api'\r\n  import axios from 'axios'\r\n  import Cookies from 'js-cookie'\r\n  import player from'./player.vue'\r\n  export default {\r\n    components:{\r\n      SumaPlayerMain,\r\n      SumaPlayerImportMain,\r\n      SumaPlayerImportDetail,\r\n      SumaPlayerExportMain,\r\n      SumaPlayerExportDetail,\r\n      player\r\n    },\r\n     data(){\r\n       return {\r\n        isStart:1,\r\n        recodePlanConfirmModal:false,\r\n        innerHeight:0,\r\n        returnBtnLoadingStatus:false,\r\n        canvas:'2*2',\r\n        selectPlanArr:[],\r\n        selectHandArr:[],\r\n        videoModal:false,\r\n        listType:0,\r\n        audioType:'',\r\n        videoType:'',\r\n        exportFileName:'',\r\n        allChannelData:[],//所有通道信息\r\n        channelData:{},\r\n        videoImage,\r\n        dbData:{},\r\n        classNameInput:'',\r\n        classModal:false,\r\n        title:'添加分类',\r\n        single:true,\r\n        button1:'按导播列表导出',\r\n        flag:'import',\r\n        importDetail:false,\r\n        exportDetail:true,\r\n        showDetail:false,\r\n        treeData: [],\r\n        timeArr:[\r\n          {value1:['', ''],name1:''}\r\n        ],\r\n        timeArr1:[{value1:['', '']}],\r\n        radioPlanTimeList:[\r\n         \r\n        ],\r\n        radioHandTimeList:[],\r\n         videoList:[],\r\n         audioList:[],\r\n        exportType:1,\r\n        //======================导播部分\r\n        pramName:'',\r\n        today:'',\r\n        importDate:'',\r\n        importShowDate:'',\r\n        exportDate:'',\r\n        searchDate1:'',\r\n        searchData:'',\r\n        playIndex:0,\r\n        playList:[],\r\n        isGray:false,\r\n        transfer:true,\r\n        /**替换video播放器信息 */\r\n        baseVideo:{\r\n          playerIndex:'',\r\n          groupIndex:''\r\n        },\r\n        recVideo:{\r\n          playerIndex:'',\r\n          groupIndex:''\r\n        },\r\n        /**是否正在预览判断左侧是直播还是预览 */\r\n        viewFlag:false,//是否预览标识\r\n        timer:null,\r\n        fileModal:false,\r\n        exportListButton:'按导播列表导出',\r\n        exportTimeButton:'按时间段导出',\r\n        /*---------------------导入按钮--*/\r\n        importListButton:'手动录入',\r\n        widthBase:1,\r\n        createMeidaNum:2,\r\n        isbrower:false,\r\n        moveToOther:false\r\n       }\r\n     },\r\n     created(){\r\n      /**v6.0.202007根据配置显示 */\r\n      this.createMeidaNum = JSON.parse(sessionStorage.getItem('publicData')).createMeidaNum\r\n      console.log('publicData',this.createMeidaNum)\r\n      this.$bus.$on('showRecodeMode',()=>{\r\n        this.recodePlanConfirmModal = true\r\n      })\r\n      this.$bus.$on('fullArea',(obj)=>{\r\n        this.fullAreaEv(obj)\r\n      })\r\n      this.$bus.$on('cancelFullArea',(obj)=>{\r\n        this.cancelFullAreaEv(obj)\r\n      })\r\n      this.$bus.$on('isRecCreate',(obj)=>{\r\n        this.videoRecCreateSuccess(obj)\r\n      })\r\n      this.isGray = ((JSON.parse(localStorage.getItem('loginRes'))).user.operationPermissions) == 1 ? false:true; //是否需要置灰（无权限操作需要）\r\n      //分类树\r\n      this.selectCategoryChannelList()\r\n      //所有通道\r\n      this.searchRecordChannelList()\r\n      let selectAllData = JSON.parse(localStorage.getItem('selectAllData'))\r\n      //播放协议\r\n      if(selectAllData.length){\r\n        this.videoList = selectAllData[4].metaDictList\r\n        this.videoType = this.videoList[0].metaDataName\r\n        this.audioList = selectAllData[5].metaDictList\r\n        this.audioType = this.audioList[0].metaDataName\r\n      }\r\n      this.checkServerStatus()\r\n      this.timer = setInterval(()=>{\r\n        this.checkServerStatus()\r\n      },300000)\r\n      this.$nextTick(()=>{\r\n        this.updateExportMenu()\r\n      })\r\n     },\r\n     mounted(){\r\n      let vm = this\r\n      /** 导入部分dom更新*/\r\n      this.importDomChange()\r\n      setTimeout(() => {\r\n        if(this.$sumaQtPlayer){\r\n          this.$refs.player.destroyQmlPlayer([{groupIndex:-2,playerIndex:-2}])\r\n          this.createPlayer()\r\n          this.isbrower = false\r\n        }else{\r\n          let vm = this\r\n          this.isbrower = true\r\n          /*主页播放器添加监听事件*/\r\n          document.getElementById(\"suma-player\").addEventListener('fullscreenchange', vm.onFullScreen)\r\n          document.getElementById(\"suma-player1\").addEventListener('fullscreenchange', vm.importFullScreen)\r\n          document.getElementById(\"suma-player2\").addEventListener('fullscreenchange', vm.importFullScreen)\r\n          document.getElementById(\"suma-player3\").addEventListener('fullscreenchange', vm.importFullScreen)\r\n          document.getElementById(\"suma-player4\").addEventListener('fullscreenchange', vm.importFullScreen)\r\n        }\r\n      }, 300);\r\n      /**监听窗口变化 */\r\n        window.onresize = function(){\r\n          /**导入部分dom更新 */\r\n          vm.importDomChange()\r\n          /**导出部分dom更新 */\r\n          vm.updateExportMenu()\r\n          //调整播放器位置\r\n          vm.playerAdjust()\r\n        }\r\n     },\r\n     beforeDestroy(){\r\n        let param = [{\r\n          groupIndex:-2,\r\n          playerIndex:-2,\r\n        }]\r\n        if(this.$sumaQtPlayer){\r\n          this.$refs.player.destroyQmlPlayer(param)\r\n        }\r\n        this.$bus.$off('showRecodeMode')\r\n        this.$bus.$off('fullArea')\r\n        this.$bus.$off('cancelFullArea')\r\n        this.$bus.$off('isRecCreate')\r\n     },\r\n     methods:{\r\n      allowDrop(e){\r\n        e.preventDefault()\r\n        this.moveToOther = true\r\n      },\r\n      pause(type){\r\n        if(type == 'videoMain'){\r\n          this.$refs.videoImportMain.pause()\r\n          this.$refs.videoImportDetail.pause()\r\n          this.$refs.videoExportMain.pause()\r\n          this.$refs.videoExportDetail.pause()\r\n        }else if(type == 'videoImportDetail'){\r\n          this.$refs.videoMain.pause()\r\n          this.$refs.videoImportMain.pause()\r\n          this.$refs.videoExportMain.pause()\r\n          this.$refs.videoExportDetail.pause()\r\n        }else if(type == 'videoImportMain'){\r\n          this.$refs.videoMain.pause()\r\n          this.$refs.videoImportDetail.pause()\r\n          this.$refs.videoExportMain.pause()\r\n          this.$refs.videoExportDetail.pause()\r\n        }else if(type == 'videoExportMain'){\r\n          this.$refs.videoMain.pause()\r\n          this.$refs.videoImportMain.pause()\r\n          this.$refs.videoImportDetail.pause()\r\n          this.$refs.videoExportDetail.pause()\r\n        }else if(type == 'videoExportDetail'){\r\n          this.$refs.videoMain.pause()\r\n          this.$refs.videoImportMain.pause()\r\n          this.$refs.videoImportDetail.pause()\r\n          this.$refs.videoExportMain.pause()\r\n        }\r\n      },\r\n      /**退出视频最大化 */\r\n      exitFullscreen() {\r\n        var de = document;\r\n        if (de.exitFullscreen) {\r\n            de.exitFullscreen();\r\n        } else if (de.mozCancelFullScreen) {\r\n            de.mozCancelFullScreen();\r\n        } else if (de.webkitCancelFullScreen) {\r\n            de.webkitCancelFullScreen();\r\n        }\r\n      },\r\n      /**非页面video添加监听最大化事件 */\r\n      importFullScreen(){\r\n        var isFullscreenNow = document.webkitFullscreenElement !== null\r\n        if(!isFullscreenNow){\r\n          /**最小化时回到监控页面*/\r\n          this.showDetail = false\r\n          this.$refs.videoMain.playVodWithHlsUrl(this.channelData.playUrl)\r\n          this.$refs.videoMain.showChannelName(this.channelData.channelName)\r\n          this.pause('videoMain')\r\n        }\r\n      },\r\n       /**video全屏事件 */\r\n       onFullScreen(ev){\r\n         console.log('全屏',ev)\r\n         let vm = this\r\n         var isFullscreenNow = document.webkitFullscreenElement !== null\r\n         if(isFullscreenNow && this.channelData.channelId){\r\n          this.showDetail = true\r\n          /**退出全屏事件 */\r\n          this.exitFullscreen()\r\n          for(let item of this.allChannelData){\r\n            if(item.channelId === this.channelData.channelId){\r\n              this.channelData.channelType = item.channelType\r\n              this.channelData.playUrl = item.playUrl\r\n              this.channelData.channelName = item.channelName\r\n              break\r\n            }\r\n          }\r\n            //查询导播列表\r\n          let year = new Date().getFullYear()>9?new Date().getFullYear():'0'+new Date().getFullYear()\r\n          let month = new Date().getMonth()+1>9?new Date().getMonth()+1:'0'+(new Date().getMonth()+1)\r\n          let  day = new Date().getDate()>9?new Date().getDate():'0'+new Date().getDate()\r\n          this.today = year+'-'+month+'-'+day\r\n          this.importDate = this.today\r\n          this.importShowDate = this.today\r\n          this.exportDate = this.today\r\n          this.searchData = this.today//搜索时间\r\n          //查询导出页信息\r\n          this.searchRecordProgramList()\r\n          //查询导入页回显\r\n          this.searchPlanListToImport()\r\n          this.$nextTick(()=>{\r\n              console.log('flag',this.flag)\r\n              console.log('importDetail',this.importDetail)\r\n              if(this.flag == 'import'){\r\n                if(this.importDetail){\r\n                  this.$refs.videoImportDetail.playVodWithHlsUrl(this.channelData.playUrl)\r\n                  this.$refs.videoImportDetail.showChannelName(this.channelData.channelName)\r\n                  this.pause('videoImportDetail')\r\n                }else{\r\n                  this.$refs.videoImportMain.playVodWithHlsUrl(this.channelData.playUrl)\r\n                  this.$refs.videoImportMain.showChannelName(this.channelData.channelName)\r\n                  this.pause('videoImportMain')\r\n                }\r\n              }else{\r\n                if(this.exportDetail){\r\n                  this.$refs.videoExportDetail.playVodWithHlsUrl(this.channelData.playUrl)\r\n                  this.$refs.videoExportDetail.showChannelName(this.channelData.channelName)\r\n                  this.pause('videoExportDetail')\r\n                }else{\r\n                  this.$refs.videoExportMain.playVodWithHlsUrl(this.channelData.playUrl)\r\n                  this.$refs.videoExportMain.showChannelName(this.channelData.channelName)\r\n                  this.pause('videoExportMain')\r\n                }\r\n              }\r\n          })\r\n         }\r\n       },\r\n       showRecodeMode(){\r\n        this.recodePlanConfirmModal = true\r\n       },\r\n       recodeConfirm(){\r\n         this.$refs.player.recodeConfirm()\r\n       },\r\n       recodeCancel(){\r\n         this.recodePlanConfirmModal = false\r\n         this.$refs.player.recodeCancel()\r\n       },\r\n       recodeSwitch(val){\r\n         this.$refs.player.isStart = val\r\n       },\r\n       playerAdjust(){\r\n         if(!this.showDetail){\r\n            setTimeout(() => {\r\n              let odiv = document.getElementById('showVideoPlayer')\r\n              let allWidth = odiv.offsetWidth\r\n              let allHeight = odiv.offsetHeight\r\n              let x = odiv.getBoundingClientRect().left\r\n              let y = odiv.getBoundingClientRect().top\r\n              let resolution = sessionStorage.getItem('resolution')?sessionStorage.getItem('resolution'):''\r\n              let rows = resolution? resolution.split(\"*\")[0]/1:2\r\n              let columns = resolution? resolution.split(\"*\")[1]/1:2\r\n              let groupIndex = this.recVideo.groupIndex\r\n              let param = {\r\n                groupIndex,x,y,width:allWidth,height:allHeight,rows,columns\r\n              }\r\n              if(this.$sumaQtPlayer){\r\n                this.$refs.player.adjustQmlPlayer(param)\r\n              }\r\n             }, 300);\r\n           }else{\r\n             setTimeout(() => {\r\n               let odiv\r\n              if(this.flag == 'import'){\r\n                if(this.importDetail){\r\n                   odiv = document.getElementById('fullArea')\r\n                }else{\r\n                   odiv = document.getElementById('importPlayer')\r\n                }\r\n              }else{\r\n                if(this.exportDetail){\r\n                  odiv = document.getElementById('fullArea1')\r\n                }else{\r\n                  odiv = document.getElementById('exportPlayer')\r\n                }\r\n              }\r\n              let width = odiv.offsetWidth\r\n              let height = odiv.offsetHeight\r\n              let x = odiv.getBoundingClientRect().left\r\n              let y = odiv.getBoundingClientRect().top\r\n              let resolution = sessionStorage.getItem('resolution')?sessionStorage.getItem('resolution'):''\r\n              let rows = resolution? resolution.split(\"*\")[0]/1:2\r\n              let columns = resolution? resolution.split(\"*\")[1]/1:2\r\n              let groupIndex = this.recVideo.groupIndex\r\n              let param = {\r\n                x,y,width,height,rows,columns,groupIndex\r\n              }\r\n               if(this.$sumaQtPlayer){\r\n                this.$refs.player.adjustQmlPlayer(param)\r\n              }\r\n              //设置全屏属性\r\n               let param1 = [{\r\n                 playerIndex:this.recVideo.playerIndex,\r\n                 groupIndex,\r\n                 channelId:this.channelData.channelId,\r\n                 business:{},\r\n                 player:{\r\n                   isFullArea:true,doAction:'play'\r\n                 }\r\n               }]\r\n               if(this.$sumaQtPlayer){\r\n                 this.$refs.player.setQmlPlayerProperty(param1)\r\n              }\r\n             }, 300);\r\n           }\r\n       },\r\n       checkServerStatus(){\r\n         api.checkServerStatus({}).then(res=>{\r\n           console.log('状态')  \r\n        })\r\n       },\r\n       //全屏事件\r\n       fullAreaEv(ev){\r\n          this.canvas = \"\"\r\n          this.showDetail = true\r\n          this.channelData = {\r\n            channelId:ev.channelId\r\n          }\r\n          for(let item of this.allChannelData){\r\n            if(item.channelId === ev.channelId){\r\n              this.channelData.channelType = item.channelType\r\n              this.channelData.playUrl = item.playUrl\r\n              this.channelData.channelName = item.channelName\r\n              break\r\n            }\r\n          }\r\n            //查询导播列表\r\n          let year = new Date().getFullYear()>9?new Date().getFullYear():'0'+new Date().getFullYear()\r\n          let month = new Date().getMonth()+1>9?new Date().getMonth()+1:'0'+(new Date().getMonth()+1)\r\n          let  day = new Date().getDate()>9?new Date().getDate():'0'+new Date().getDate()\r\n          this.today = year+'-'+month+'-'+day\r\n          this.importDate = this.today\r\n          this.importShowDate = this.today\r\n          this.exportDate = this.today\r\n          this.searchData = this.today//搜索时间\r\n          //查询导出页信息\r\n          this.searchRecordProgramList()\r\n          //查询导入页回显\r\n          this.searchPlanListToImport()\r\n          this.$nextTick(()=>{\r\n              let resolution = sessionStorage.getItem('resolution')?sessionStorage.getItem('resolution'):''\r\n              let rows = resolution? resolution.split(\"*\")[0]/1:2\r\n              let columns = resolution? resolution.split(\"*\")[1]/1:2\r\n              let odiv\r\n              if(this.flag == 'import'){\r\n                if(this.importDetail){\r\n                   odiv = document.getElementById('fullArea')\r\n                }else{\r\n                   odiv = document.getElementById('importPlayer')\r\n                }\r\n              }else{\r\n                if(this.exportDetail){\r\n                  odiv = document.getElementById('fullArea1')\r\n                }else{\r\n                  odiv = document.getElementById('exportPlayer')\r\n                }\r\n              }\r\n              let width = odiv.offsetWidth\r\n              let height = odiv.offsetHeight\r\n              let x = odiv.getBoundingClientRect().left\r\n              let y = odiv.getBoundingClientRect().top\r\n              let groupIndex = ev.groupIndex\r\n              let obj = {\r\n                x,y,width,height,rows,columns,groupIndex\r\n              }\r\n              this.$refs.player.adjustQmlPlayer(obj)\r\n              //设置全屏属性\r\n              let param = [{\r\n                playerIndex:ev.playerIndex,\r\n                groupIndex,\r\n                channelId:ev.channelId,\r\n                business:{},\r\n                player:{\r\n                  isFullArea:true,doAction:'play',mode:'rec'\r\n                }\r\n              }]\r\n              this.$refs.player.setQmlPlayerProperty(param)\r\n          })\r\n          this.recVideo.playerIndex = ev.playerIndex\r\n          this.recVideo.groupIndex = ev.groupIndex\r\n       },\r\n       //取消全屏\r\n       cancelFullAreaEv(ev){\r\n         this.canvas = sessionStorage.getItem('resolution')?sessionStorage.getItem('resolution'):'2*2'\r\n          this.showDetail = false\r\n          this.$nextTick(()=>{\r\n            let resolution = sessionStorage.getItem('resolution')?sessionStorage.getItem('resolution'):''\r\n            let rows = resolution? resolution.split(\"*\")[0]/1:2\r\n            let columns = resolution? resolution.split(\"*\")[1]/1:2\r\n            let odiv = document.getElementById('showVideoPlayer')\r\n            let width = odiv.offsetWidth\r\n            let height = odiv.offsetHeight\r\n            let x = odiv.getBoundingClientRect().left\r\n            let y = odiv.getBoundingClientRect().top\r\n            let groupIndex = ev.groupIndex\r\n            let obj = {\r\n              x,y,width,height,rows,columns,groupIndex\r\n            }\r\n            this.$refs.player.adjustQmlPlayer(obj)\r\n\r\n            /**=====播放结束后初始化原来的播放地址===========*/\r\n            if(this.viewFlag){\r\n              let arr = JSON.parse(sessionStorage.getItem('initPlay'))\r\n              let playUrl = ''\r\n              let channelName = ''\r\n              for(let item of arr){\r\n                if(item.playerIndex === ev.playerIndex){\r\n                    playUrl = item.playerInfo.channelUrl\r\n                    channelName = item.playerInfo.channelName\r\n                    break\r\n                }\r\n              }\r\n              let param = [\r\n                  {\r\n                    \"x\": 200,\r\n                    \"y\": 100,\r\n                      groupIndex:this.recVideo.groupIndex,\r\n                      playerIndex:this.recVideo.playerIndex,   \r\n                      playerInfo: {\r\n                        channelId: this.channelData.channelId,\r\n                        channelName: channelName,\r\n                        channelUrl:playUrl,\r\n                      }\r\n                  }\r\n              ]\r\n              this.$refs.player.prepareQmlPlayer2(param)\r\n              let stateArr = JSON.parse(sessionStorage.getItem('monitorState'))\r\n              this.$refs.player.setQmlPlayerProperty(stateArr)\r\n              this.viewFlag = false\r\n            }\r\n          })\r\n       },\r\n       renderContent(h, { node, data, store }) {\r\n          if(data.categoryId){\r\n              return (\r\n                <div class=\"custom-tree-node\" style=\"width:100%;display:flex;justify-content:space-between;align-items:center\">\r\n                   <Tooltip placement=\"top-start\" transfer={this.transfer} delay={1500} offset={50}>\r\n                    <p style={{width:100*this.widthBase+'px',overflow: 'hidden','white-space': 'nowrap','text-overflow': 'ellipsis','font-size':'16px','color':'rgba(255,255,255,1)',marginTop:'5px',fontSize:'14px'}} on-dblclick={()=>this.clkDb(data)}>{node.label}</p>\r\n                    <div slot=\"content\">\r\n                        <p style=\"white-space: normal;fontSize:14px;margin-top:30px\">\r\n                          {node.label}\r\n                        </p>\r\n                    </div>\r\n                  </Tooltip>\r\n                  <span>\r\n                    <i class=\"el-icon-delete\" on-click={ () => this.removeCategory(node, data) }></i>\r\n                  </span>\r\n                </div>\r\n                );\r\n           }else{\r\n              return (\r\n                <div class=\"custom-tree-node\">\r\n                  <Tooltip placement=\"top-start\" transfer={this.transfer} offset={50}>\r\n                    <p style={{width:100*this.widthBase+'px',overflow: 'hidden','white-space': 'nowrap','text-overflow': 'ellipsis','font-size':'16px','color':'rgba(255,255,255,1)',marginTop:'5px',fontSize:'14px'}}>{node.label}</p>\r\n                    <div slot=\"content\">\r\n                        <p style=\"white-space: normal;fontSize:14px\">\r\n                          {node.label}\r\n                        </p>\r\n                    </div>\r\n                  </Tooltip>\r\n                </div>\r\n              );\r\n           }\r\n      },\r\n        removeCategory(node,data){\r\n          if (this.isGray == true) {\r\n            return false;\r\n          }\r\n          console.log('node',node)\r\n          console.log('data',data)\r\n          let param = {\r\n            categoryId:data.categoryId\r\n          }\r\n          api.deleteCategory(param).then(res=>{\r\n            this.$Message.success('分类删除成功')\r\n            this.selectCategoryChannelList()\r\n          })\r\n        },\r\n       //全部关闭\r\n       allShut(){\r\n        //关闭播放清空缓存数据\r\n        sessionStorage.setItem('initPlay','')\r\n        //关闭记录状态\r\n        sessionStorage.setItem('monitorState','')\r\n        //设置播放器状态\r\n          //如果在导出页面回到原来页面\r\n          this.showDetail = false\r\n          //清空通道和最大化设置\r\n           this.$nextTick(()=>{\r\n            let resolution = sessionStorage.getItem('resolution')?sessionStorage.getItem('resolution'):''\r\n            let rows = resolution? resolution.split(\"*\")[0]/1:2\r\n            let columns = resolution? resolution.split(\"*\")[1]/1:2\r\n            let odiv = document.getElementById('showVideoPlayer')\r\n            let width = odiv.offsetWidth\r\n            let height = odiv.offsetHeight\r\n            let x = odiv.getBoundingClientRect().left\r\n            let y = odiv.getBoundingClientRect().top\r\n            let groupIndex = this.recVideo.groupIndex\r\n            let param = [\r\n              {\r\n                groupIndex:groupIndex,\r\n                playerIndex: -2,\r\n                channelId: \"12\",\r\n                business: {\r\n                  isRecording: false,//此处可不传\r\n                  isDotting: false//此处可不传\r\n                },\r\n                player: {\r\n                  isFullArea: false,\r\n                  doAction: \"stop\"\r\n                }\r\n              }\r\n            ]\r\n            this.$refs.player.setQmlPlayerProperty(param)\r\n             //===================调整位置大小\r\n            let obj = {\r\n              x,y,width,height,rows,columns,groupIndex\r\n            }\r\n            this.$refs.player.adjustQmlPlayer(obj)\r\n          })\r\n       },\r\n       createPlayer(){\r\n          let resolution = sessionStorage.getItem('resolution')?sessionStorage.getItem('resolution'):''\r\n          this.canvas = resolution?resolution:'2*2'\r\n          let rows = resolution? resolution.split(\"*\")[0]/1:2\r\n          let columns = resolution? resolution.split(\"*\")[1]/1:2\r\n          let odiv = document.getElementById('showVideoPlayer')\r\n          let allWidth = odiv.offsetWidth\r\n          let allHeight = odiv.offsetHeight\r\n          let x = odiv.getBoundingClientRect().left\r\n          let y = odiv.getBoundingClientRect().top\r\n          console.log('dom',document.getElementById('showVideoPlayer'))\r\n          this.$refs.player.createQmlPlayer(x,y,allWidth,allHeight,rows,columns,'rec')\r\n       },\r\n       //========文件导入\r\n       handleUpload(file){\r\n         console.log('文件',file);\r\n         let FileExt = file.name.replace(/.+\\./, \"\");       \r\n          if (['txt'].indexOf(FileExt.toLowerCase()) === -1){            \r\n            this.$Message.error('上传文件类型不正确，请上传文件类型为txt的文件');            \r\n            return false;\r\n          }  \r\n         this.upload(file);\r\n         return false;\r\n       },\r\n       upload(file){\r\n           var jsonText = {\r\n            'versionName': '4.1.8',\r\n            'versionCode': '340',\r\n            'operatorId': Cookies.get('operatorId'),\r\n            'operatorGroup': Cookies.get('operatorGroup'),\r\n            info: {\r\n              channel_id:this.channelData.channelId\r\n            }\r\n          }\r\n          var param = new FormData()\r\n          param.append('jsonText', JSON.stringify(jsonText))\r\n          param.append('file', file)\r\n          let token = Cookies.get('token')\r\n          var instance = axios.create({\r\n            baseURL: './api/drbs',\r\n            timeout: 5000,\r\n            headers: {'Content-type': 'multipart/form-data', 'accessToken': `${token}`}\r\n          });\r\n          // console.log(param)\r\n          instance.post('/cmc/channel/channelProgramUpload', param).then((res) => {\r\n            console.log(\"================\", res.data.errorMessage);\r\n            if (res.data.status == 0 ) {\r\n              this.$Message.success('上传成功');\r\n              this.searchPlanListToImport();\r\n            } else {\r\n              this.$Message.error(res.data.errorMessage);\r\n            }\r\n          })\r\n       },\r\n       /**监控画面页面/及导入相关的dom更新操作 */\r\n       importDomChange(){\r\n         this.innerHeight = window.innerHeight\r\n         let width = window.innerWidth\r\n         let height = window.innerHeight\r\n         this.widthBase = (width-160)/(1024-160)\r\n         let impor_card_left = document.getElementById('chnnel_mon_left')\r\n         impor_card_left.style.height = height-160 +'px'\r\n         /**右侧属性控件的高度 */\r\n         let elTree = document.getElementById('elTree')\r\n         elTree.style.height = height-250 + 'px'\r\n         /**------导入页面右侧高度 */\r\n         let importList = document.getElementById('importList')\r\n         importList.style.height = height - 360 + 'px'\r\n         /**导入页面左侧播放器高度(入口) */\r\n         let importPlayer = document.getElementById('importPlayer')\r\n         importPlayer.style.height = height-290 + 'px'\r\n       },\r\n       /*导出的相关dom操作*/\r\n       updateExportMenu(){\r\n        /**计算屏幕变化 */\r\n         let height = window.innerHeight;\r\n         let offset=height-768;\r\n         let listMenu=document.getElementById('exportListMenu');\r\n         let listMenuPlan=document.getElementById('exportListPlanMenu');\r\n         let listMenuHand=document.getElementById('exportListHandMenu');\r\n         let timeMenu = document.getElementById('exportTimeMenu');\r\n         listMenu.style.height=442+offset+\"px\";\r\n         listMenuPlan.style.height=300+offset+\"px\";\r\n         listMenuHand.style.height=300+offset+\"px\";\r\n         timeMenu.style.height=400+offset+\"px\";\r\n         /**导出页面播放器高度 */\r\n         let exportPlayer = document.getElementById('exportPlayer')\r\n         exportPlayer.style.height = height-290 + 'px'\r\n       },\r\n      //=====================导出文件列表\r\n       exportFileList(){\r\n        //  alert(1112)\r\n        //  console.log(\"日期\", this.importShowDate);\r\n         if (!this.importShowDate) {\r\n           this.$Message.info('请先选择日期再导出');\r\n           return false;\r\n         }\r\n          window.location.href=`/api/drbs/cmc/channel/exportChannelProgramFile?channelId=${this.channelData.channelId}&date=${this.importShowDate}`\r\n       },\r\n       //查询通道列表\r\n       searchRecordChannelList(){\r\n         let param ={\r\n           channelName:'',\r\n           userId:JSON.parse(localStorage['loginRes']).user.userId,\r\n           pageNo:-1\r\n         }\r\n         api.searchRecordChannelList(param).then(res=>{\r\n           this.allChannelData = res.result\r\n           console.log('列表',res)\r\n         })\r\n       },\r\n       //画面帧率切换事件\r\n       showChannel(resolution){\r\n        //记录此时的帧率\r\n        this.showDetail = false\r\n        // this.$nextTick(()=>{\r\n        //   this.$refs.player.destroyQmlPlayer([{groupIndex:-2,playerIndex:-2}])\r\n        //   sessionStorage.setItem('resolution',resolution)\r\n        //   this.createPlayer()\r\n        // })\r\n        this.$nextTick(()=>{\r\n          //调整播放器\r\n          if(!this.$sumaQtPlayer){\r\n            this.$refs.videoMain.playVodWithHlsUrl(this.channelData.playUrl)\r\n            this.$refs.videoMain.showChannelName(this.channelData.channelName)\r\n            return false\r\n          }\r\n          let rows = resolution.split(\"*\")[0]/1\r\n          let columns = resolution.split(\"*\")[1]/1\r\n          let odiv = document.getElementById('showVideoPlayer')\r\n          let width = odiv.offsetWidth\r\n          let height = odiv.offsetHeight\r\n          let x = odiv.getBoundingClientRect().left\r\n          let y = odiv.getBoundingClientRect().top\r\n          let groupIndex = this.recVideo.groupIndex\r\n          let obj = {\r\n            x,y,width,height,rows,columns,groupIndex,mode:'rec'\r\n          }\r\n          this.$refs.player.adjustQmlPlayer(obj)\r\n           //播放流初始化\r\n          let recordPlayUrlChange = sessionStorage.getItem('initPlay')?JSON.parse(sessionStorage.getItem('initPlay')):[]\r\n          /**打点设置等 */\r\n          let arr = JSON.parse(sessionStorage.getItem('monitorState'))\r\n          let playInitArr = []\r\n          /**初始化打点状态数据 */\r\n          let recodeInitArr = []\r\n          if(sessionStorage.getItem('resolution') ===\"2*2\"){\r\n            if(resolution ===\"3*3\"||resolution == '4*4'){\r\n              for(let item1 of recordPlayUrlChange){\r\n                if(item1.playerIndex>3){\r\n                  playInitArr.push(item1)\r\n                }\r\n              }\r\n              for(let item2 of arr){\r\n                if(item2.playerIndex>3){\r\n                  recodeInitArr.push(item2)\r\n                }\r\n              }\r\n              //初始化播放地址\r\n             this.$refs.player.prepareQmlPlayer2(playInitArr)\r\n             //设置打点数据\r\n             this.$refs.player.setQmlPlayerProperty(recodeInitArr)\r\n            }\r\n          }else if(sessionStorage.getItem('resolution') ===\"3*3\"){\r\n              if(resolution == '4*4'){\r\n                for(let item1 of recordPlayUrlChange){\r\n                  if(item1.playerIndex>8){\r\n                    playInitArr.push(item1)\r\n                  }\r\n                }\r\n                for(let item2 of arr){\r\n                  if(item2.playerIndex>8){\r\n                    recodeInitArr.push(item2)\r\n                  }\r\n                }\r\n                //初始化播放地址\r\n                this.$refs.player.prepareQmlPlayer2(playInitArr)\r\n                //设置打点状态等\r\n                this.$refs.player.setQmlPlayerProperty(recodeInitArr)\r\n              }\r\n            }\r\n           sessionStorage.setItem('resolution',resolution)\r\n        })\r\n       },\r\n       selectPlanArrChange(selArr){\r\n         console.log('选择',selArr)\r\n         for(let item of this.radioPlanTimeList){\r\n           item.ischecked = false\r\n         }\r\n         for(let id of selArr){\r\n           for(let item of this.radioPlanTimeList){\r\n             if(id === item.id){\r\n               item.ischecked = true\r\n               break\r\n             }\r\n           }\r\n         }\r\n       },\r\n       selectHandArrChange(selArr){\r\n          console.log('选择',selArr)\r\n         for(let item of this.radioHandTimeList){\r\n           item.ischecked = false\r\n         }\r\n         for(let id of selArr){\r\n           for(let item of this.radioHandTimeList){\r\n             if(id === item.id){\r\n               item.ischecked = true\r\n               break\r\n             }\r\n           }\r\n         }\r\n       },\r\n       //节目预览\r\n       paragramView(){\r\n        this.viewFlag = true\r\n        let publicPlayUrl = this.channelData.playUrl\r\n        this.playList = []\r\n        let now = new Date().getTime()\r\n        this.playIndex = 0\r\n        if(this.exportType==1){\r\n          if(this.listType==0){\r\n            if(!this.radioPlanTimeList.length){\r\n              this.$Message.info('当前暂无节目单')\r\n              return false\r\n            }\r\n            if(!this.selectPlanArr.length){\r\n              this.$Message.info('请选择需要预览的节目')\r\n              return false\r\n            }\r\n            for(let id of this.selectPlanArr){\r\n              for(let item of this.radioPlanTimeList){\r\n                if(id === item.id){\r\n                  let playUrl = publicPlayUrl+'?starttime='+new Date(item.startDate).getTime()/1000+'&endtime='+new Date(item.endDate).getTime()/1000\r\n                  this.playList.push(playUrl)\r\n                  break\r\n                }\r\n              }\r\n            }\r\n          }else{\r\n            if(!this.radioHandTimeList.length){\r\n              this.$Message.info('当前暂无节目单')\r\n              return false\r\n            }\r\n            if(!this.selectHandArr.length){\r\n              this.$Message.info('请选择需要预览的节目')\r\n              return false\r\n            }\r\n            for(let id of this.selectHandArr){\r\n              for(let item of this.radioHandTimeList){\r\n                if(id === item.id){\r\n                  let playUrl = publicPlayUrl+'?starttime='+new Date(item.startDate).getTime()/1000+'&endtime='+new Date(item.endDate).getTime()/1000\r\n                  this.playList.push(playUrl)\r\n                }\r\n              }\r\n            }\r\n          }\r\n           if(this.$sumaQtPlayer){\r\n              this.playInit()\r\n            }else{\r\n               /**浏览器播放 */\r\n              this.videoInitPlay()\r\n            }\r\n        }else{\r\n          //=================================按时间段导出\r\n          let selectflag = true //是否未选择时间\r\n          let isCanHandleTime = true  //选择时间是否未过期\r\n          let startEndSame = false //开始时间和结束时间是否相同\r\n          let now = new Date().getTime()\r\n          for(let item of this.timeArr1){\r\n            if(!item.value1[0]||!item.value1[1]){\r\n              selectflag = false\r\n            }\r\n            if(item.value1[0] === item.value1[1]){\r\n              startEndSame = true\r\n            }\r\n            let end_date = this.searchData +' '+ item.value1[1]\r\n            if(new Date(end_date).getTime() > now){\r\n              isCanHandleTime = false\r\n            }\r\n          }\r\n          if(!selectflag){\r\n            this.$Message.info('请选择起止时间')\r\n            return false\r\n          }\r\n          if(startEndSame){\r\n            this.$Message.info('结束时间必须大于开始时间')\r\n            return false\r\n          }\r\n          if(!isCanHandleTime){\r\n             this.$Message.info('无法预览此时间段节目')\r\n            return false\r\n          }\r\n          for(let item of this.timeArr1){\r\n            let playUrl = publicPlayUrl + \"?starttime=\"+new Date(this.searchData+' '+item.value1[0]).getTime()/1000+\"&endtime=\"+new Date(this.searchData+' '+item.value1[1]).getTime()/1000\r\n            this.playList.push(playUrl)\r\n          }\r\n          if(this.$sumaQtPlayer){\r\n            //qt播放\r\n            this.playInit()\r\n          }else{\r\n            /**浏览器播放 */\r\n            this.videoInitPlay()\r\n          }\r\n        }\r\n       },\r\n       /** 正常打点播放器创建成功*/\r\n       videoRecCreateSuccess(obj){\r\n         this.recVideo.groupIndex = obj.groupIndex\r\n       },\r\n       //播放结束\r\n       playEnding(obj){\r\n         /**预览过程中 */\r\n         if(this.viewFlag){\r\n            /**属于当前最大化的时候 */\r\n          if(obj.playerIndex === this.recVideo.playerIndex){\r\n              if(this.playIndex === this.playList.length-1){\r\n                /**=====播放结束后初始化原来的播放地址===========*/\r\n                let arr = JSON.parse(sessionStorage.getItem('initPlay'))\r\n                let playUrl = ''\r\n                let channelName = ''\r\n                for(let item of arr){\r\n                  if(item.playerIndex === obj.playerIndex){\r\n                     playUrl = item.playerInfo.channelUrl\r\n                     channelName = item.playerInfo.channelName\r\n                     break\r\n                  }\r\n                }\r\n                let param = [\r\n                    {\r\n                      \"x\": 200,\r\n                      \"y\": 100,\r\n                        groupIndex:this.recVideo.groupIndex,\r\n                        playerIndex:this.recVideo.playerIndex,   \r\n                        playerInfo: {\r\n                          channelId: this.channelData.channelId,\r\n                          channelName: channelName,\r\n                          channelUrl:playUrl,\r\n                        }\r\n                    }\r\n                ]\r\n                this.$refs.player.prepareQmlPlayer2(param)\r\n                let stateArr = JSON.parse(sessionStorage.getItem('monitorState'))\r\n                this.$refs.player.setQmlPlayerProperty(stateArr)\r\n                return false\r\n              }\r\n              this.playIndex++\r\n              this.playInit()\r\n          }\r\n         }\r\n       },\r\n       //初始化播放流\r\n       playInit(){\r\n          let param = [{\r\n              \"x\": 200,\r\n              \"y\": 100,\r\n                groupIndex:this.recVideo.groupIndex,\r\n                playerIndex:this.recVideo.playerIndex,   //playerIndex不为-1，则优先使用playerIndex初始化\r\n                playerInfo: {\r\n                channelId: this.channelData.channelId,\r\n                channelName: \"\",\r\n                channelUrl:this.playList[this.playIndex],\r\n              }\r\n          }]\r\n          this.$refs.player.prepareQmlPlayer2(param)\r\n       },\r\n       /**浏览器播放 */\r\n       videoViewPlyerEnd(){\r\n        //  alert('播放结束')\r\n        if(this.viewFlag){\r\n          /**如果是最后一个 */\r\n          if(this.playIndex === this.playList.length-1){\r\n            /**恢复至原来通道 */\r\n            this.$refs.videoExportDetail.playVodWithHlsUrl(this.channelData.playUrl)\r\n            this.$refs.videoExportDetail.showChannelName(this.channelData.channelName)\r\n          }\r\n          this.playIndex++\r\n          this.playInit()\r\n        }\r\n       },\r\n       /**先播放第一个 */\r\n       videoInitPlay(){\r\n         this.$refs.videoExportDetail.playVodWithHlsUrl(this.playList[this.playIndex])\r\n         this.$refs.videoExportDetail.showChannelName('')\r\n       },\r\n       returnChannel(){\r\n         this.returnBtnLoadingStatus = true\r\n         setTimeout(() => {\r\n          this.$router.push({\r\n            name:'recode-manage-channel'\r\n          })\r\n          this.returnBtnLoadingStatus = false\r\n         }, 500);\r\n       },\r\n       /**录制开关变化 */\r\n       changeRecode(){\r\n         /**录制开关状态确认提交后 */\r\n         this.recodePlanConfirmModal = false\r\n         this.selectCategoryChannelList()\r\n       },\r\n       //查询分类树数据\r\n       selectCategoryChannelList(){\r\n         let param = {\r\n           user_id:JSON.parse(localStorage['loginRes']).user.userId\r\n         }\r\n         this.treeData = []\r\n         api.selectCategoryChannelList(param).then(res=>{\r\n           console.log('分类树',res)\r\n           if(res.result){\r\n             let result = JSON.parse(JSON.stringify(res.result))\r\n             for(let item of result){\r\n               let obj = {}\r\n               obj.label = item.category_name\r\n               obj.categoryId = item.category_id\r\n               obj.children = []\r\n               for(let item1 of item.channels){\r\n                  let childObj = {}\r\n                  console.log('哈哈',item1)\r\n                  childObj.playUrl= item1.playUrl\r\n                  childObj.label = item1.channel_name\r\n                  childObj.channelId = item1.channel_id\r\n                  childObj.parent_categoryId = item.category_id\r\n                  childObj.is_startrecord = item1.is_startrecord\r\n                  childObj.tsudpShiftTimeLength = item1.tsudpShiftTimeLength\r\n                  childObj.parent_name = item.category_name\r\n                  obj.children.push(childObj)\r\n               }\r\n               this.treeData.push(obj)\r\n             }\r\n             console.log('tree',this.treeData)\r\n           }\r\n         })\r\n       },\r\n       //判断节点是否可以拖拽\r\n       dropAble(node){\r\n         if(node.data.categoryId||node.data.label==='未分类'){\r\n           this.$Message.info('分类不可以拖拽')\r\n           return false\r\n         }else{\r\n           return true\r\n         }\r\n       },\r\n       //允许拽类型判断\r\n       drop(draggingNode,dropNode,type){\r\n         console.log('draggingNode',draggingNode)\r\n         console.log('dropNode',dropNode)\r\n         console.log('type',type)\r\n         //=======方法一\r\n          //同一等级且不是分类\r\n        //   if(draggingNode.level ==2&&dropNode.level ==2){\r\n        //     return false\r\n        //   }else{\r\n        //     if(draggingNode.level == 2&&dropNode.level ==1){\r\n        //       return type =='inner'\r\n        //     } else{\r\n        //       return true\r\n        //     }\r\n        //  }\r\n         //========方法二\r\n          console.log(123,dropNode.data)\r\n          if(dropNode.data.parent_categoryId&&draggingNode.data.parent_categoryId === dropNode.data.parent_categoryId){\r\n            //同一分类下不允许拖拽\r\n            return false\r\n          }\r\n          if(dropNode.data.categoryId&&draggingNode.data.parent_categoryId === dropNode.data.categoryId){\r\n            //通道迁移到当前分类下也不允许\r\n            return false\r\n          }\r\n          if((dropNode.data.parent_categoryId||dropNode.data.parent_name==='未分类')&&draggingNode.data.parent_categoryId !== dropNode.data.parent_categoryId){\r\n            //通道移动到另一分类的通道下\r\n            return type !=='inner'\r\n          }\r\n            if((dropNode.data.categoryId||dropNode.data.label==='未分类')&&draggingNode.data.parent_categoryId !== dropNode.data.categoryId){\r\n            //通道迁移到当前分类下也不允许\r\n            return type ==='inner'\r\n          }\r\n       },\r\n        handleDragStart(node, ev) {\r\n          console.log('drag start', node);\r\n        },\r\n        handleDragEnter(draggingNode, dropNode, ev) {\r\n          console.log('tree drag enter: ', dropNode.label);\r\n        },\r\n        handleDragLeave(draggingNode, dropNode, ev) {\r\n          console.log('tree drag leave: ', dropNode.label);\r\n        },\r\n        handleDragOver(draggingNode, dropNode, ev) {\r\n          console.log('tree drag over: ', dropNode);\r\n        },\r\n        //拖拽结束时（可能未成功）触发的事件\r\n        handleDragEnd(draggingNode, dropNode, dropType, ev) {\r\n          console.log('tree drag end:draggingNode--------',draggingNode,  'tree drag end:dropNode -----',dropNode);\r\n             if(this.$sumaQtPlayer){\r\n               console.log(draggingNode.data)\r\n              let channelId = draggingNode.data.channelId\r\n              let playUrl = draggingNode.data.playUrl\r\n              let recodeFlag = draggingNode.data.is_startrecord === 0 ? true:false\r\n              let channelName = draggingNode.data.label\r\n              let timeshiftTotalInSec = draggingNode.data.tsudpShiftTimeLength/1*60\r\n              //拖拽到的区域位置\r\n              let odiv = document.getElementById('showVideoPlayer')\r\n              let allWidth = odiv.offsetWidth\r\n              let allHeight = odiv.offsetHeight\r\n              let x = odiv.getBoundingClientRect().left\r\n              let y = odiv.getBoundingClientRect().top\r\n              //===判断拖拽的dom是否在区间内\r\n              if(ev.x>=x&&ev.x<=x+allWidth&&ev.y>=y&&ev.y<=y+allHeight){\r\n                this.$refs.player.prepareQmlPlayer(ev.x,ev.y,channelName,channelId,playUrl,recodeFlag,timeshiftTotalInSec)\r\n                this.$Message.success('添加通道成功')\r\n              }\r\n             }else{\r\n               /**非qt小窗口 */\r\n               console.log('拖拽数据',draggingNode)\r\n               this.channelData = {channelId:draggingNode.data.channelId,channelName:draggingNode.data.label,playUrl:draggingNode.data.playUrl}\r\n               let odiv = document.getElementsByClassName('mainvideo')[0]\r\n                let allWidth = odiv.offsetWidth\r\n                let allHeight = odiv.offsetHeight\r\n                let x = odiv.getBoundingClientRect().left\r\n                let y = odiv.getBoundingClientRect().top\r\n                if(ev.x>=x&&ev.x<=x+allWidth&&ev.y>=y&&ev.y<=y+allHeight){\r\n                this.$Message.success('添加通道成功')\r\n                this.$refs.videoMain.showChannelName(draggingNode.data.label)\r\n                this.$refs.videoMain.playVodWithHlsUrl(this.channelData.playUrl)\r\n                this.pause('videoMain')\r\n              }\r\n             }\r\n        },\r\n        //拖拽成功\r\n        handleDrop(draggingNode, dropNode, dropType, ev) {\r\n          // console.log('tree drop: ', dropNode.label, dropType);\r\n          let channelId = draggingNode.data.channelId\r\n          let categoryId = dropNode.data.categoryId?dropNode.data.categoryId:dropNode.data.parent_categoryId\r\n          console.log(this.dragChannelId+'---------'+this.dragCategoryId)\r\n          if(this.moveToOther){\r\n            this.selectCategoryChannelList()\r\n            this.moveToOther = false\r\n            return false\r\n          }\r\n          let param = {\r\n            channelId,\r\n            categoryId\r\n          }\r\n          api.updateChannelInCategory(param).then(res=>{\r\n             this.$Message.success('通道调整分类成功')\r\n             this.selectCategoryChannelList()\r\n          })\r\n        },\r\n        //添加分类\r\n        addClass(){\r\n          this.classModal = true\r\n          this.classNameInput = ''\r\n          this.title = '添加分类'\r\n        },\r\n        //双击修改分类\r\n        clkDb(data){\r\n          if (this.isGray == true) {\r\n            return false;\r\n          }\r\n          console.log('data',data)\r\n          let flag = Object.prototype.hasOwnProperty.call(data,'children')//data是否含有children属性\r\n          if(flag){\r\n            this.dbData = data\r\n            this.classModal = true\r\n            this.classNameInput = data.label\r\n            this.title = '编辑分类'\r\n         }\r\n       },\r\n       //确定分类\r\n       classConfirm(){\r\n         if(!this.classNameInput){\r\n             this.$Message.info('请输入分类名称')\r\n             return\r\n          }else{\r\n            let reg = /^[a-zA-Z0-9_\\u4e00-\\u9fa5]+$/\r\n            if(!reg.test(this.classNameInput)) {\r\n              this.$Message.info(\"请输入中文、数字、字母、下划线\")\r\n              return\r\n            }\r\n            //  需要后端接口对分类名称重复时，做校验；若放开，就会出现“没过滤掉自己”\r\n            // else{\r\n            //   for(let item of this.treeData){\r\n            //    if(item.label === this.classNameInput) {\r\n            //      this.$Message.info(\"分类名称已存在\")\r\n            //      return\r\n            //    }\r\n            //   }\r\n            // }\r\n          }\r\n\r\n         if(this.classNameInput){\r\n            if(this.title===\"添加分类\"){\r\n              //=======添加分类接口\r\n              let param = {\r\n                name:this.classNameInput\r\n              }\r\n              api.createCategory(param).then(res=>{\r\n                this.$Message.success('添加分类成功')\r\n                this.selectCategoryChannelList()\r\n              })\r\n            }else{\r\n              let param = {\r\n                categoryId:this.dbData.categoryId,\r\n                name: this.classNameInput\r\n              }\r\n              api.modifyCategory(param).then(res=>{\r\n                 this.$Message.success('分类修改成功')\r\n                 this.selectCategoryChannelList()\r\n              })\r\n            }\r\n         }\r\n         this.classModal = false\r\n       },\r\n//-------------------------------------------双击视频页面事件\r\n        leftDbClick(item){\r\n          console.log('item',item)\r\n          this.channelData = item\r\n          this.showDetail = true\r\n          //查询导播列表\r\n           let year = new Date().getFullYear()>9?new Date().getFullYear():'0'+new Date().getFullYear()\r\n          let month = new Date().getMonth()+1>9?new Date().getMonth()+1:'0'+(new Date().getMonth()+1)\r\n          let  day = new Date().getDate()>9?new Date().getDate():'0'+new Date().getDate()\r\n          this.today = year+'-'+month+'-'+day\r\n          this.importDate = this.today\r\n          this.importShowDate = this.today\r\n          this.exportDate = this.today\r\n          this.searchData = this.today//搜索时间\r\n          //查询导出页信息\r\n          this.searchRecordProgramList()\r\n          //查询导入页回显\r\n          this.searchPlanListToImport()\r\n        },\r\n        //创建导播节目/保存\r\n        createChannelProgramList(){\r\n          let programs = []\r\n          let nameFlag = true //name是否有值\r\n          let nameTrimFlag = true //name是否仅包含空格\r\n          let timeFlag = true //起始时间是否有值\r\n          let timeIsSame = false //起始时间是否一致\r\n\r\n          for (let i = 0; i < this.timeArr.length - 1; i++) {\r\n            for (let j = i + 1; j < this.timeArr.length; j++) {\r\n              if ((this.timeArr[i].value1[0] == this.timeArr[j].value1[0]) && (this.timeArr[i].value1[1] == this.timeArr[j].value1[1])) {\r\n                // alert(1234567);\r\n                this.$Message.info('存在多个相同时间段的节目单，无法保存');\r\n                return false;\r\n              }\r\n            }\r\n          }\r\n          \r\n          for(let item of this.timeArr){\r\n            let obj = {};\r\n            obj.name = item.name1;\r\n            obj.startDate = this.importShowDate +' '+ item.value1[0];\r\n            obj.endDate = this.importShowDate +' '+ item.value1[1];\r\n            obj.type='1';\r\n\r\n            if(!item.name1){\r\n              nameFlag = false\r\n            }else if(!(item.name1.trim())){\r\n              nameTrimFlag = false\r\n            }\r\n            if(!item.value1[0]||!item.value1[1]){\r\n              timeFlag = false\r\n            }\r\n            if(obj.startDate === obj.endDate&&obj.startDate){\r\n              timeIsSame = true\r\n            }\r\n            programs.push(obj)\r\n          }\r\n          if(!nameFlag){\r\n            this.$Message.info('请输入名称')\r\n            return false\r\n          }\r\n          if(!nameTrimFlag){\r\n            this.$Message.info('名称不能仅包含空格')\r\n            return false\r\n          }\r\n          if(!timeFlag){\r\n            this.$Message.info('请输入起始结束时间')\r\n            return false\r\n          }\r\n          if(timeIsSame){\r\n            this.$Message.info('结束时间不允许和起始时间相同')\r\n            return false\r\n          }\r\n          let param = {\r\n            channelId:this.channelData.channelId,\r\n            programs\r\n          }\r\n          api.createChannelProgramList(param).then(res=>{\r\n            this.$Message.success('节目保存成功')\r\n          })\r\n        },\r\n\r\n        importDateChange(val){\r\n         this.importDate = val\r\n         this.importShowDate = val\r\n         this.searchPlanListToImport()\r\n        },\r\n        exportDateChange(val){\r\n         this.searchData = val\r\n         this.exportDate = val\r\n         console.log(val)\r\n         this.searchRecordProgramList()\r\n        },\r\n        tabClick(){\r\n          this.searchRecordProgramList()\r\n        },\r\n        //查询导播列表\r\n        searchRecordProgramList(){\r\n         let param = {\r\n           name:this.pramName,\r\n           channelId:this.channelData.channelId,\r\n           date:this.searchData,\r\n           type:this.listType === 0?'1':'2',\r\n           pageNo:-1,\r\n         }\r\n         this.radioPlanTimeList= []\r\n         this.radioHandTimeList = []\r\n         this.selectPlanArr = []\r\n         this.selectHandArr = []\r\n         api.searchChannelProgramList(param).then(res=>{\r\n           console.log('导播列表',res)\r\n           for(let item of res.result){\r\n             if(item.type == 1){\r\n               //计划打卡\r\n               let time = item.startDate.split(' ')[1] +'-' +item.endDate.split(' ')[1]\r\n               let obj = {name:item.name,time,channelId:item.channelId,startDate:item.startDate,endDate:item.endDate,ischecked:false,id:item.id}\r\n               this.radioPlanTimeList.push(obj)\r\n             }else{\r\n               let time = item.startDate.split(' ')[1] +'-' +item.endDate.split(' ')[1]\r\n               let obj = {name:item.name,time,channelId:item.channelId,startDate:item.startDate,endDate:item.endDate,ischecked:false,id:item.id}\r\n               this.radioHandTimeList.push(obj)\r\n             }\r\n           }\r\n         })\r\n        },\r\n        /**打点成功 */\r\n        dottedSuccess(){\r\n          this.searchRecordProgramList()\r\n        },\r\n        //===========查询计划列表，导入页面回显\r\n        searchPlanListToImport(){\r\n         let param = {\r\n           channelId:this.channelData.channelId,\r\n           date:this.importShowDate,\r\n           type:'1',\r\n           pageNo:-1,\r\n         }\r\n        this.timeArr=[]\r\n         api.searchChannelProgramList(param).then(res=>{\r\n           console.log('导播列表222',res)\r\n           for(let item of res.result){\r\n             let obj = {value1:[item.startDate.split(' ')[1],item.endDate.split(' ')[1]],name1:item.name}\r\n             this.timeArr.push(obj)\r\n           }\r\n         })\r\n        },\r\n        importClick(flag){\r\n          this.flag= flag\r\n          this.searchPlanListToImport()\r\n          this.searchRecordProgramList()\r\n          if(flag==\"export\") {\r\n            if(this.isbrower){\r\n              /**如果是浏览器 */\r\n              this.$refs.videoExportMain.playVodWithHlsUrl(this.channelData.playUrl)\r\n              this.$refs.videoExportMain.showChannelName(this.channelData.channelName)\r\n              this.pause('videoExportMain')\r\n            }\r\n            this.exportDetail=false;\r\n            this.exportListButton=\"按导播列表导出\";\r\n            this.exportTimeButton=\"按时间段导出\";\r\n            this.adjustExportPlayer('exportPlayer');\r\n          }else{\r\n             if(this.isbrower){\r\n              /**如果是浏览器 */\r\n              this.$refs.videoImportMain.playVodWithHlsUrl(this.channelData.playUrl)\r\n              this.$refs.videoImportMain.showChannelName(this.channelData.channelName)\r\n               this.pause('videoImportMain')\r\n            }\r\n            this.importDetail = false\r\n            this.importListButton = '手动录入'\r\n            this.adjustExportPlayer('importPlayer');\r\n          }\r\n        },\r\n        //添加更多\r\n        addMore(){\r\n          this.timeArr.push({\r\n            value1:['', ''],\r\n            name1:''\r\n          })\r\n        },\r\n        remove(index){\r\n          if(this.timeArr.length===1||this.isGray){\r\n            return false\r\n          }\r\n          this.timeArr.splice(index,1)\r\n        },\r\n         //添加更多\r\n        addMore1(){\r\n          this.timeArr1.push({\r\n            value1:['', ''],\r\n          })\r\n        },\r\n        //\r\n        remove1(index){\r\n          if(this.timeArr1.length ===1||this.isGray){\r\n            return false\r\n          }\r\n          this.timeArr1.splice(index,1)\r\n        },\r\n        //按时间导出\r\n        byTimeExport(){\r\n\r\n        },\r\n        //是否置灰\r\n        getDisabledStatus(item){\r\n          var now = new Date().getTime()\r\n          var time = new Date(item.endDate).getTime()\r\n          if(time<=now){\r\n            return false\r\n          }else{\r\n            return true\r\n          }\r\n       },\r\n        //是否禁止选择\r\n        getDisabledStatus1(item){\r\n          var now = new Date().getTime()\r\n          var time = new Date(item.endDate).getTime()\r\n          if(time<=now && !this.isGray){\r\n            return false\r\n          }else{\r\n            return true\r\n          }\r\n       },\r\n       /**进入手动录入按钮 */\r\n       importByHand(){\r\n          if(this.importListButton == '手动录入'){\r\n            this.importListButton = '关闭手动录入'\r\n            this.importDetail = true\r\n            if(this.isbrower){\r\n              this.$refs.videoImportDetail.playVodWithHlsUrl(this.channelData.playUrl)\r\n              this.$refs.videoImportDetail.showChannelName(this.channelData.channelName)\r\n              this.pause('videoImportDetail')\r\n            }\r\n            this.adjustExportPlayer('fullArea');\r\n          }else{\r\n            this.importListButton = '手动录入'\r\n            this.importDetail = false\r\n            this.adjustExportPlayer('importPlayer');\r\n          }\r\n       },\r\n       //导出\r\n       exportByList(){\r\n         this.exportDetail=true;\r\n         this.exportType = 1;\r\n         if(this.exportListButton==\"关闭按导播列表导出\"){\r\n           this.exportDetail=false;\r\n           this.exportListButton=\"按导播列表导出\";\r\n           this.adjustExportPlayer('exportPlayer');\r\n           if(this.isbrower){\r\n             this.$refs.videoExportMain.playVodWithHlsUrl(this.channelData.playUrl)\r\n             this.$refs.videoExportMain.showChannelName(this.channelData.channelName)\r\n             this.pause('videoExportMain')\r\n           }\r\n         }else{\r\n           this.exportListButton=\"关闭按导播列表导出\";\r\n           this.adjustExportPlayer('fullArea1');\r\n           if(this.isbrower){\r\n              this.$refs.videoExportDetail.playVodWithHlsUrl(this.channelData.playUrl)\r\n              this.$refs.videoExportDetail.showChannelName(this.channelData.channelName)\r\n              this.pause('videoExportDetail')\r\n            }\r\n         }\r\n         this.exportTimeButton=\"按时间段导出\";\r\n       },\r\n       /**按时间段*/\r\n       exportByTime(){\r\n         this.exportDetail=true;\r\n         this.exportType = 2;\r\n         if(this.exportTimeButton==\"关闭按时间段导出\"){\r\n           this.exportDetail=false;\r\n           this.exportTimeButton=\"按时间段导出\";\r\n           this.adjustExportPlayer('exportPlayer');\r\n           if(this.isbrower){\r\n              this.$refs.videoExportMain.playVodWithHlsUrl(this.channelData.playUrl)\r\n              this.$refs.videoExportMain.showChannelName(this.channelData.channelName)\r\n              this.pause('videoExportMain')\r\n           }\r\n         }else{\r\n           this.exportTimeButton=\"关闭按时间段导出\";\r\n           this.adjustExportPlayer('fullArea1');\r\n           if(this.isbrower){\r\n             this.$refs.videoExportDetail.playVodWithHlsUrl(this.channelData.playUrl)\r\n             this.$refs.videoExportDetail.showChannelName(this.channelData.channelName)\r\n             this.pause('videoExportDetail')\r\n           }\r\n         }\r\n         this.exportListButton=\"按导播列表导出\";\r\n       },\r\n       adjustExportPlayer(divName){\r\n         this.$nextTick(()=>{\r\n           if(!this.$sumaQtPlayer){\r\n             return false\r\n           }\r\n           console.log(\"player dom:\" + divName);\r\n           let odiv = document.getElementById(divName)\r\n           let width = odiv.offsetWidth\r\n           let height = odiv.offsetHeight\r\n           let x = odiv.getBoundingClientRect().left\r\n           let y = odiv.getBoundingClientRect().top\r\n           let resolution = sessionStorage.getItem('resolution')?sessionStorage.getItem('resolution'):''\r\n           let rows = resolution? resolution.split(\"*\")[0]/1:2\r\n           let columns = resolution? resolution.split(\"*\")[1]/1:2\r\n           let groupIndex = this.recVideo.groupIndex\r\n           let param = {\r\n             x,y,width,height,rows,columns,groupIndex\r\n           }\r\n           this.$refs.player.adjustQmlPlayer(param)\r\n\r\n           //设置全屏属性\r\n           let param1 = [{\r\n             playerIndex:this.recVideo.playerIndex,\r\n             groupIndex,\r\n             channelId:this.channelData.channelId,\r\n             business:{},\r\n             player:{\r\n               isFullArea:true,doAction:'play'\r\n             }\r\n           }]\r\n           this.$refs.player.setQmlPlayerProperty(param1)\r\n          });\r\n       },\r\n       exportFileModal(){\r\n         let times=[]\r\n         //=====================================按导播列表导出\r\n         if(this.exportType ==1){\r\n           if(this.single){\r\n              if(this.listType === 0){ \r\n                  //文件列表\r\n                  if(!this.radioPlanTimeList.length){\r\n                    this.$Message.info('暂无节目单列表')\r\n                    return false\r\n                  }\r\n                  if(!this.selectPlanArr.length){\r\n                    this.$Message.info('请选择需要导出的节目')\r\n                    return false\r\n                  }\r\n                }else{\r\n                  //打点\r\n                  if(!this.radioHandTimeList.length){\r\n                    this.$Message.info('暂无节目单列表')\r\n                    return false\r\n                  }\r\n                  if(!this.selectHandArr.length){\r\n                    this.$Message.info('请选择需要导出的节目')\r\n                    return false\r\n                  }\r\n                }\r\n           } else {\r\n               //\r\n               if(this.listType === 0){\r\n                 if(!this.radioPlanTimeList.length){\r\n                    this.$Message.info('暂无节目单列表')\r\n                    return false\r\n                  }\r\n                  if(!this.selectPlanArr.length){\r\n                    this.$Message.info('请选择需要导出的节目')\r\n                    return false\r\n                  }\r\n               }else{\r\n                 if(!this.radioHandTimeList.length){\r\n                    this.$Message.info('暂无节目单列表')\r\n                    return false\r\n                  }\r\n                  if(!this.selectHandArr.length){\r\n                    this.$Message.info('请选择需要导出的节目')\r\n                    return false\r\n                  }\r\n               }\r\n           }\r\n         }\r\n         //==================================按时间段导出\r\n         else{\r\n           let now = new Date().getTime()\r\n           let selectflag = true //是否选择起始时间\r\n           let isCanHandleTime =true\r\n           let startEndSame = false //是否启示时间相同\r\n           if(this.single){\r\n             for(let item of this.timeArr1){\r\n               let obj = {}\r\n               obj.start_date = this.searchData +' '+ item.value1[0]\r\n               obj.end_date = this.searchData +' '+ item.value1[1]\r\n               times.push(obj)\r\n               if(new Date(obj.end_date).getTime() > now){\r\n                 isCanHandleTime = false\r\n               }\r\n               if(!item.value1[0]||!item.value1[1]){\r\n                 selectflag = false\r\n               }\r\n               if(item.value1[0] === item.value1[1]){\r\n                 startEndSame = true\r\n               }\r\n             }\r\n             if(!selectflag){\r\n                this.$Message.info('请选择起始时间')\r\n                return false\r\n             }\r\n             if(startEndSame){\r\n               this.$Message.info('结束时间必须大于开始时间')\r\n               return false\r\n             }\r\n             if(!isCanHandleTime){\r\n               this.$Message.info('无法导出此时间段文件')\r\n               return false\r\n             }\r\n           }else{\r\n              for(let item of this.timeArr1){\r\n                if(!item.value1[0]||!item.value1[1]){\r\n                  selectflag = false\r\n                }\r\n                if(item.value1[0] === item.value1[1]){\r\n                  startEndSame = true\r\n                }\r\n                let end_date = this.searchData +' '+ item.value1[1]\r\n                if(new Date(end_date).getTime() > now){\r\n                  isCanHandleTime = false\r\n                }\r\n              }\r\n              if(!selectflag){\r\n                 this.$Message.info('请选择起始时间')\r\n                return false\r\n              }\r\n              if(startEndSame){\r\n                this.$Message.info('结束时间必须大于开始时间')\r\n                return false\r\n              }\r\n              if(!isCanHandleTime){\r\n                this.$Message.info('无法导出此时间段文件')\r\n                return false\r\n              }\r\n             }\r\n           }\r\n         this.fileModal = true;\r\n         let param = [{\r\n           groupIndex: -2,\r\n           playerIndex: -2,\r\n           channelId:'',\r\n           business:{},\r\n           player:{isVisible:false}}]\r\n         console.log(\"param:\" + JSON.stringify(param));\r\n         this.$refs.player.setQmlPlayerProperty(param)\r\n       },\r\n       fileModalCancel(){\r\n         this.fileModal = false;\r\n         let param = [{\r\n           groupIndex: -2,\r\n           playerIndex: -2,\r\n           channelId:'',\r\n           business:{},\r\n           player:{isVisible:true}}]\r\n         if(this.$sumaQtPlayer){\r\n           this.$refs.player.setQmlPlayerProperty(param)\r\n         }\r\n       },\r\n       //导出文件\r\n       exportFile(){\r\n        //  console.log(this.channelData)\r\n         let times=[]\r\n         let param = {}\r\n         //=====================================按导播列表导出\r\n         if(this.exportType ==1){\r\n           if(this.single){\r\n              if(this.listType === 0){ \r\n                  //文件列表\r\n                  if(!this.radioPlanTimeList.length){\r\n                    this.$Message.info('暂无节目单列表')\r\n                    return false\r\n                  }\r\n                  if(!this.selectPlanArr.length){\r\n                    this.$Message.info('请选择需要导出的节目')\r\n                    return false\r\n                  }\r\n                  if(!this.exportFileName || !(this.exportFileName.trim())){\r\n                    this.$Message.info('请输入导出文件名称')\r\n                    return false\r\n                  }\r\n                  if(this.channelData.channelType == 0 ||this.channelData.channelType ==1){\r\n                    if(!this.videoType){\r\n                     this.$Message.info('请选择视频格式')\r\n                     return false\r\n                    }\r\n                  }else{\r\n                    if(!this.audioType){\r\n                     this.$Message.info('请选择音频格式')\r\n                     return false\r\n                    }\r\n                  }\r\n                  for(let id of this.selectPlanArr){\r\n                    for(let item of this.radioPlanTimeList){\r\n                      if(id === item.id){\r\n                          let obj = {}\r\n                          obj.start_date = item.startDate\r\n                          obj.end_date = item.endDate\r\n                          times.push(obj)\r\n                          break\r\n                      }\r\n                    }\r\n\r\n                  }\r\n                  console.log('times',times)\r\n                }else{\r\n                  //打点\r\n                  if(!this.radioHandTimeList.length){\r\n                    this.$Message.info('暂无节目单列表')\r\n                    return false\r\n                  }\r\n                  if(!this.selectHandArr.length){\r\n                    this.$Message.info('请选择需要导出的节目')\r\n                    return false\r\n                  }\r\n                  if(!this.exportFileName || !(this.exportFileName.trim())){\r\n                    this.$Message.info('请选择导出文件名称')\r\n                    return false\r\n                  }\r\n                  if(this.channelData.channelType == 0 ||this.channelData.channelType ==1){\r\n                    if(!this.videoType){\r\n                     this.$Message.info('请选择视频格式')\r\n                     return false\r\n                    }\r\n                  }else{\r\n                    if(!this.audioType){\r\n                     this.$Message.info('请选择音频格式')\r\n                     return false\r\n                    }\r\n                  }\r\n                   for(let id of this.selectHandArr){\r\n                     for(let item of this.radioHandTimeList){\r\n                       if(id === item.id){\r\n                        let obj = {}\r\n                        obj.start_date = item.startDate\r\n                        obj.end_date = item.endDate\r\n                        times.push(obj)\r\n                        break\r\n                       }\r\n                     }\r\n                   }\r\n                }\r\n                let  param = {\r\n                  channel_id:this.channelData.channelId,\r\n                  user_id:JSON.parse(localStorage['loginRes']).user.userId,\r\n                  file_name:this.exportFileName,\r\n                  video_type:this.channelData.channelType ==0||this.channelData.channelType ==1?this.videoType:'',\r\n                  audio_type:this.channelData.channelType ==2?this.audioType:'',\r\n                  type:this.channelData.channelType,\r\n                  times,\r\n                }\r\n                console.log('参数',param)\r\n                api.channelProgramExport(param).then(res=>{\r\n                  console.log('导出文件',res)\r\n                  this.fileModalCancel();\r\n                  this.$Message.info('提交成功，导出文件列表请到【文件管理】页面进行查看')\r\n                })\r\n           } else {\r\n               //\r\n               if(this.listType === 0){\r\n                 if(!this.radioPlanTimeList.length){\r\n                    this.$Message.info('暂无节目单列表')\r\n                    return false\r\n                  }\r\n                  if(!this.selectPlanArr.length){\r\n                    this.$Message.info('请选择需要导出的节目')\r\n                    return false\r\n                  }\r\n                    if(this.channelData.channelType == 0 ||this.channelData.channelType ==1){\r\n                    if(!this.videoType){\r\n                     this.$Message.info('请选择视频格式')\r\n                     return false\r\n                    }\r\n                  }else{\r\n                    if(!this.audioType){\r\n                     this.$Message.info('请选择音频格式')\r\n                     return false\r\n                    }\r\n                  }\r\n                  for(let id  of this.selectPlanArr){\r\n                    for(let item of this.radioPlanTimeList){\r\n                      if(id === item.id){\r\n                          let param = {\r\n                          channel_id:this.channelData.channelId,\r\n                          user_id:JSON.parse(localStorage['loginRes']).user.userId,\r\n                          file_name:item.name,\r\n                          video_type:this.channelData.channelType ==0||this.channelData.channelType ==1?this.videoType:'',\r\n                          audio_type:this.channelData.channelType ==2?this.audioType:'',\r\n                          type:this.channelData.channelType,\r\n                          times:[{start_date:item.startDate,end_date:item.endDate}]\r\n                        }\r\n                        api.channelProgramExport(param).then(res=>{\r\n                          console.log('导出文件',res)\r\n                          this.fileModalCancel();\r\n                          this.$Message.info('提交成功，导出文件列表请到【文件管理】页面进行查看')\r\n                        })\r\n                        break\r\n                      }\r\n                    }\r\n                  }\r\n               }else{\r\n                 if(!this.radioHandTimeList.length){\r\n                    this.$Message.info('暂无节目单列表')\r\n                    return false\r\n                  }\r\n                  if(!this.selectHandArr.length){\r\n                    this.$Message.info('请选择需要导出的节目')\r\n                    return false\r\n                  }\r\n                  if(this.channelData.channelType == 0 ||this.channelData.channelType ==1){\r\n                    if(!this.videoType){\r\n                     this.$Message.info('请选择视频格式')\r\n                     return false\r\n                    }\r\n                  }else{\r\n                    if(!this.audioType){\r\n                     this.$Message.info('请选择音频格式')\r\n                     return false\r\n                    }\r\n                  }\r\n                  for(let id of this.selectHandArr){\r\n                    for(let item of this.radioHandTimeList){\r\n                      if(id === item.id){\r\n                          let param = {\r\n                          channel_id:this.channelData.channelId,\r\n                          user_id:JSON.parse(localStorage['loginRes']).user.userId,\r\n                          file_name:item.name,\r\n                          video_type:this.channelData.channelType ==0||this.channelData.channelType ==1?this.videoType:'',\r\n                          audio_type:this.channelData.channelType ==2?this.audioType:'',\r\n                          type:this.channelData.channelType,\r\n                          times:[{start_date:item.startDate,end_date:item.endDate}]\r\n                        }\r\n                        api.channelProgramExport(param).then(res=>{\r\n                          console.log('导出文件',res)\r\n                          this.fileModalCancel();\r\n                          this.$Message.info('提交成功，导出文件列表请到【文件管理】页面进行查看')\r\n                        })\r\n                        break\r\n                      }\r\n                    }\r\n                  }\r\n               }\r\n           }\r\n         }\r\n         //==================================按时间段导出\r\n         else{\r\n           let now = new Date().getTime()\r\n           let selectflag = true //是否选择起始时间\r\n           let isCanHandleTime =true\r\n           let startEndSame = false //是否启示时间相同\r\n           if(this.single){\r\n             for(let item of this.timeArr1){\r\n               let obj = {}\r\n               obj.start_date = this.searchData +' '+ item.value1[0]\r\n               obj.end_date = this.searchData +' '+ item.value1[1]\r\n               times.push(obj)\r\n               if(new Date(obj.end_date).getTime() > now){\r\n                 isCanHandleTime = false\r\n               }\r\n               if(!item.value1[0]||!item.value1[1]){\r\n                 selectflag = false\r\n               }\r\n               if(item.value1[0] === item.value1[1]){\r\n                 startEndSame = true\r\n               }\r\n             }\r\n             if(!selectflag){\r\n                this.$Message.info('请选择起始时间')\r\n                return false\r\n             }\r\n             if(startEndSame){\r\n               this.$Message.info('结束时间必须大于开始时间')\r\n               return false\r\n             }\r\n             if(!isCanHandleTime){\r\n               this.$Message.info('无法导出此时间段文件')\r\n               return false\r\n             }\r\n             if(!this.exportFileName || !(this.exportFileName.trim())){\r\n                this.$Message.info('请选择导出文件名称')\r\n                return false\r\n              }\r\n              if(this.channelData.channelType == 0 ||this.channelData.channelType ==1){\r\n                  if(!this.videoType){\r\n                    this.$Message.info('请选择视频格式')\r\n                    return false\r\n                  }\r\n                }else{\r\n                  if(!this.audioType){\r\n                    this.$Message.info('请选择音频格式')\r\n                    return false\r\n                  }\r\n                }\r\n             let param = {\r\n                channel_id:this.channelData.channelId,\r\n                user_id:JSON.parse(localStorage['loginRes']).user.userId,\r\n                file_name:this.exportFileName,\r\n                video_type:this.channelData.channelType ==0||this.channelData.channelType ==1?this.videoType:'',\r\n                audio_type:this.channelData.channelType ==2?this.audioType:'',\r\n                type:this.channelData.channelType,\r\n                times,\r\n             }\r\n              api.channelProgramExport(param).then(res=>{\r\n                console.log('导出文件',res)\r\n                this.fileModalCancel();\r\n                 this.$Message.info('提交成功，导出文件列表请到【文件管理】页面进行查看')\r\n              })\r\n           }else{\r\n              for(let item of this.timeArr1){\r\n                if(!item.value1[0]||!item.value1[1]){\r\n                  selectflag = false\r\n                }\r\n                if(item.value1[0] === item.value1[1]){\r\n                  startEndSame = true\r\n                }\r\n                let end_date = this.searchData +' '+ item.value1[1]\r\n                if(new Date(end_date).getTime() > now){\r\n                  isCanHandleTime = false\r\n                }\r\n              }\r\n              if(!selectflag){\r\n                 this.$Message.info('请选择起始时间')\r\n                return false\r\n              }\r\n              if(startEndSame){\r\n                this.$Message.info('结束时间必须大于开始时间')\r\n                return false\r\n              }\r\n              if(!isCanHandleTime){\r\n                this.$Message.info('无法导出此时间段文件')\r\n                return false\r\n              }\r\n               if(this.channelData.channelType == 0 ||this.channelData.channelType ==1){\r\n                  if(!this.videoType){\r\n                    this.$Message.info('请选择视频格式')\r\n                    return false\r\n                  }\r\n                }else{\r\n                  if(!this.audioType){\r\n                    this.$Message.info('请选择音频格式')\r\n                    return false\r\n                  }\r\n                }\r\n               for(let item of this.timeArr1){\r\n                let param = {\r\n                    channel_id:this.channelData.channelId,\r\n                    user_id:JSON.parse(localStorage['loginRes']).user.userId,\r\n                    file_name:this.channelData.channelName +  new Date(this.searchData +' ' +item.value1[0]).getTime(),\r\n                    video_type:this.channelData.channelType ==0||this.channelData.channelType ==1?this.videoType:'',\r\n                    audio_type:this.channelData.channelType ==2?this.audioType:'',\r\n                    type:this.channelData.channelType,\r\n                    times:[{start_date: this.searchData +' ' +item.value1[0],end_date:this.searchData +' '+ item.value1[1]}]\r\n                }\r\n                console.log('不合成',param)\r\n                  api.channelProgramExport(param).then(res=>{\r\n                    this.fileModalCancel();\r\n                    this.$Message.info('提交成功，导出文件列表请到【文件管理】页面进行查看')\r\n                    console.log('导出文件',res)\r\n                  })\r\n             }\r\n           }\r\n         }\r\n        \r\n       }\r\n     }\r\n  }\r\n</script>\r\n<style>\r\n   .import_btn{\r\n     width:100px;\r\n     height: 30px;\r\n     line-height: 30px;\r\n     text-align: center;\r\n     border:1px solid #e8eaec;\r\n     margin: 5px 0 5px 5px\r\n   }\r\n   .exPort_btn{\r\n     width:100px;\r\n     height: 30px;\r\n     line-height: 30px;\r\n     text-align: center;\r\n     border:1px solid #e8eaec;\r\n     margin: 5px 5px 0 0\r\n   }\r\n   .btn_change{\r\n     display: flex\r\n   }\r\n   .activeBtn{\r\n     background-color: #2d8cf0;\r\n     color: #fff;\r\n     border:1px solid #2d8cf0;\r\n   }\r\n   #treeCard .ivu-card-body{\r\n     padding: 5px\r\n   }\r\n   #treeCard .el-tree{\r\n     background: #0D436F\r\n   }\r\n   /* tabs */\r\n   /* .showRate .ivu-tabs-nav .ivu-tabs-tab-active{\r\n     color: #02E8FF;\r\n   }\r\n   .showRate .ivu-tabs-ink-bar{\r\n     background: #02E8FF\r\n   }\r\n   .showRate .ivu-tabs {\r\n     color: #fff\r\n   }\r\n    .showRate .ivu-tabs-nav .ivu-tabs-tab:hover{\r\n      color: #02E8FF\r\n    } */\r\n    .showRate .ivu-tabs-nav-scroll{\r\n      padding: 0 20px\r\n    }\r\n    .showRate1 .ivu-tabs-nav-scroll{\r\n       padding: 0!important\r\n    }\r\n #elTree .el-tree-node__content>.el-tree-node__expand-icon{\r\n    padding: 0\r\n  }\r\n  #elTree .el-tree-node__content{\r\n    margin-top: 15px\r\n  }\r\n#importFormId .ivu-form-item:nth-child(1){\r\n  margin-bottom: 13px\r\n}\r\n#importFormId .ivu-form-item:nth-child(2){\r\n  margin-bottom: 0px\r\n}\r\n.exportInput .ivu-input{\r\n  background: #0d446c!important;\r\n}\r\n#audioTypeId .ivu-select-dropdown-list{\r\n  height: 70px;\r\n  overflow-y: auto\r\n}\r\n.timerTransfer[style]{\r\n  left: 68%!important;\r\n}\r\n.timerTransfer .ivu-picker-panel-body{\r\n  min-width: 336px!important;\r\n}\r\n.videoNameClass{\r\n  position: absolute;\r\n    left: 50%;\r\n    top: 15px;\r\n    z-index: 1000;\r\n    color: #fff;\r\n    font-size: 21px;\r\n    transform: translate(-50%,0%)\r\n}\r\n</style>\r\n\r\n\r\n\r\n\r\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./channelMonitor.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./channelMonitor.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./channelMonitor.vue?vue&type=template&id=5c656df8&\"\nimport script from \"./channelMonitor.vue?vue&type=script&lang=js&\"\nexport * from \"./channelMonitor.vue?vue&type=script&lang=js&\"\nimport style0 from \"./channelMonitor.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}